{"version":3,"file":"static/js/4966.2f54ca4f.chunk.js","mappings":"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","sources":["nft/components/profile/list/Modal/BelowFloorWarningModal.tsx","nft/components/profile/list/shared.tsx","nft/queries/looksRare/constants.ts","nft/queries/openSea/constants.ts","nft/queries/x2y2/index.ts","nft/queries/looksRare/createLooksRareOrder.ts","nft/utils/x2y2.ts","nft/utils/listNfts.ts","nft/queries/openSea/PostOpenSeaSellOrder.ts","nft/components/profile/list/utils.ts","nft/components/profile/list/ListingButton.tsx","nft/components/profile/list/Modal/ContentRow.tsx","nft/components/profile/list/Modal/ListModalSection.tsx","nft/components/profile/list/Modal/SuccessScreen.tsx","nft/components/profile/list/Modal/ListModal.tsx","nft/components/profile/list/Dropdown.tsx","nft/components/profile/list/PriceTextInput.tsx","nft/components/profile/list/RoyaltyTooltip.tsx","nft/components/profile/list/MarketplaceRow.tsx","nft/components/profile/list/NFTListRow.tsx","nft/components/profile/list/NFTListingsGrid.tsx","nft/components/profile/list/SelectMarketplacesDropdown.tsx","nft/components/profile/list/SetDurationModal.tsx","nft/components/profile/list/ListPage.tsx","nft/queries/looksRare/looksRareNonceFetcher.ts","nft/components/profile/view/FilterSidebar.tsx","nft/components/profile/view/ProfilePage.css.ts","nft/components/profile/view/ProfilePageLoadingSkeleton.tsx","nft/components/profile/view/ViewMyNftsAsset.tsx","nft/components/profile/view/ProfilePage.tsx","nft/queries/openSea/OSCollectionsFetcher.ts","nft/pages/profile/index.tsx","nft/pages/profile/shared.ts"],"sourcesContent":["import { Plural, t, Trans } from '@lingui/macro'\nimport { ButtonPrimary } from 'components/Button'\nimport Column from 'components/Column'\nimport { Portal } from 'nft/components/common/Portal'\nimport { Overlay } from 'nft/components/modals/Overlay'\nimport { Listing, WalletAsset } from 'nft/types'\nimport React from 'react'\nimport { AlertTriangle, X } from 'react-feather'\nimport styled, { useTheme } from 'styled-components'\nimport { BREAKPOINTS } from 'theme'\nimport { ThemedText } from 'theme/components'\nimport { Z_INDEX } from 'theme/zIndex'\nimport { useFormatter } from 'utils/formatNumbers'\n\nconst ModalWrapper = styled(Column)`\n  position: fixed;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  width: 420px;\n  z-index: ${Z_INDEX.modal};\n  background: ${({ theme }) => theme.surface1};\n  border-radius: 20px;\n  border: 1px solid ${({ theme }) => theme.surface3};\n  box-shadow: ${({ theme }) => theme.deprecated_deepShadow};\n  padding: 20px 24px 24px;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n\n  @media screen and (max-width: ${BREAKPOINTS.sm}px) {\n    width: 100%;\n  }\n`\nconst CloseIconWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n`\nconst CloseIcon = styled(X)`\n  cursor: pointer;\n  &:hover {\n    opacity: 0.6;\n  }\n`\n\nconst HazardIconWrap = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n  padding: 32px 120px;\n`\n\nconst ContinueButton = styled(ButtonPrimary)`\n  font-weight: 535;\n  font-size: 20px;\n  line-height: 24px;\n  margin-top: 12px;\n`\n\nconst EditListings = styled.span`\n  font-weight: 535;\n  font-size: 16px;\n  line-height: 20px;\n  color: ${({ theme }) => theme.accent1};\n  text-align: center;\n  cursor: pointer;\n  padding: 12px 16px;\n\n  &:hover {\n    opacity: 0.6;\n  }\n`\n\nexport const BelowFloorWarningModal = ({\n  listingsBelowFloor,\n  closeModal,\n  startListing,\n}: {\n  listingsBelowFloor: [WalletAsset, Listing][]\n  closeModal: () => void\n  startListing: () => void\n}) => {\n  const theme = useTheme()\n  const { formatDelta } = useFormatter()\n  const clickContinue = (e: React.MouseEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    startListing()\n    closeModal()\n  }\n  return (\n    <Portal>\n      <ModalWrapper>\n        <CloseIconWrapper>\n          <CloseIcon width={24} height={24} onClick={closeModal} />{' '}\n        </CloseIconWrapper>\n        <HazardIconWrap>\n          <AlertTriangle height={90} width={90} color={theme.critical} />\n        </HazardIconWrap>\n        <ThemedText.HeadlineSmall lineHeight=\"28px\" textAlign=\"center\">\n          <Trans>Low listing price</Trans>\n        </ThemedText.HeadlineSmall>\n        <ThemedText.BodyPrimary textAlign=\"center\">\n          <Plural\n            value={listingsBelowFloor.length !== 1 ? 2 : 1}\n            _1={t`One NFT is listed ${formatDelta(\n              (1 - (listingsBelowFloor[0][1].price ?? 0) / (listingsBelowFloor[0][0].floorPrice ?? 0)) * 100\n            )} `}\n            other={t`${listingsBelowFloor.length} NFTs are listed significantly `}\n          />\n          &nbsp;\n          <Trans>below the collection’s floor price. Are you sure you want to continue?</Trans>\n        </ThemedText.BodyPrimary>\n        <ContinueButton onClick={clickContinue}>\n          <Trans>Continue</Trans>\n        </ContinueButton>\n        <EditListings onClick={closeModal}>\n          <Trans>Edit listings</Trans>\n        </EditListings>\n      </ModalWrapper>\n      <Overlay onClick={closeModal} />\n    </Portal>\n  )\n}\n","import Row from 'components/Row'\nimport styled from 'styled-components'\n\nexport const RemoveIconWrap = styled.div<{ hovered: boolean }>`\n  position: absolute;\n  left: 50%;\n  top: 30px;\n  transform: translateX(-50%);\n  width: 32px;\n  visibility: ${({ hovered }) => (hovered ? 'visible' : 'hidden')};\n`\n\nexport const TitleRow = styled(Row)`\n  justify-content: space-between;\n  margin-bottom: 8px;\n`\n\nexport enum SetPriceMethod {\n  SAME_PRICE,\n  FLOOR_PRICE,\n  LAST_PRICE,\n  CUSTOM,\n}\n\nexport enum WarningType {\n  BELOW_FLOOR,\n  ALREADY_LISTED,\n  NONE,\n}\n","export const LOOKSRARE_MARKETPLACE_CONTRACT_721 = '0x59728544B08AB483533076417FbBB2fD0B17CE3a'\nexport const LOOKSRARE_MARKETPLACE_CONTRACT_1155 = '0xfed24ec7e22f573c2e08aef55aa6797ca2b3a051'\n","export const OPENSEA_FEE_ADDRESS = '0x0000a26b00c1F0DF003000390027140000fAa719'\nexport const OPENSEA_DEFAULT_CROSS_CHAIN_CONDUIT_KEY =\n  '0x0000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f0000'\nexport const OPENSEA_CROSS_CHAIN_CONDUIT = '0x1e0049783f008a0085193e00003d00cd54003c71'\nexport const OPENSEA_SEAPORT_V1_5_CONTRACT = '0x00000000000000ADc04C56Bf30aC9d3c0aAF14dC'\nexport const OPENSEA_KEY_TO_CONDUIT = { [OPENSEA_DEFAULT_CROSS_CHAIN_CONDUIT_KEY]: OPENSEA_CROSS_CHAIN_CONDUIT }\nexport const INVERSE_BASIS_POINTS = 10000\n","import { OrderPayload } from '../../utils/x2y2'\n\nexport const X2Y2_TRANSFER_CONTRACT_721 = '0xf849de01b080adc3a814fabe1e2087475cf2e354'\nexport const X2Y2_TRANSFER_CONTRACT_1155 = '0x024ac22acdb367a3ae52a3d94ac6649fdc1f0779'\n\nexport const newX2Y2Order = async (payload: OrderPayload): Promise<boolean> => {\n  const body = JSON.stringify(payload)\n  const url = `${process.env.REACT_APP_TEMP_API_URL}/nft/postX2Y2SellOrderWithApiKey`\n  const ac = new AbortController()\n  const req = new Request(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json; charset=utf-8',\n    },\n    body,\n    signal: ac.signal,\n  })\n  const timeout = setTimeout(() => ac.abort(), 60 * 1000)\n  try {\n    const res = await fetch(req)\n    const data = await res.json()\n    return data.code === 200\n  } catch (e) {\n    return false\n  } finally {\n    clearTimeout(timeout)\n  }\n}\n\nexport const getX2Y2OrderId = async (collectionAddress: string, tokenId: string): Promise<number | undefined> => {\n  const url = `${process.env.REACT_APP_TEMP_API_URL}/nft/getX2Y2OrderId?collectionAddress=${collectionAddress}&tokenId=${tokenId}`\n  const r = await fetch(url, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json; charset=utf-8',\n    },\n  })\n  const data = await r.json()\n  return data?.data?.data?.[0]?.id\n}\n","export const createLooksRareOrder = async (payload: any): Promise<boolean> => {\n  const url = `${process.env.REACT_APP_TEMP_API_URL}/nft/createLooksRareOrder`\n  const res = await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(payload),\n  })\n  try {\n    const data = await res.json()\n    return data.success\n  } catch (e) {\n    return false\n  }\n}\n","import { defaultAbiCoder } from '@ethersproject/abi'\nimport { BigNumber, BigNumberish } from '@ethersproject/bignumber'\nimport { hexZeroPad } from '@ethersproject/bytes'\nimport { AddressZero } from '@ethersproject/constants'\nimport { keccak256 } from '@ethersproject/keccak256'\nimport type { Web3Provider } from '@ethersproject/providers'\nimport { randomBytes } from '@ethersproject/random'\nimport { NftStandard } from 'graphql/data/__generated__/types-and-hooks'\n\nconst dataParamType = `tuple(address token, uint256 tokenId, uint256 amount)[]`\nconst orderItemParamType = `tuple(uint256 price, bytes data)`\nconst orderParamTypes = [\n  `uint256`,\n  `address`,\n  `uint256`,\n  `uint256`,\n  `uint256`,\n  `uint256`,\n  `address`,\n  `bytes`,\n  `uint256`,\n  `${orderItemParamType}[]`,\n]\nconst orderParamType = `tuple(uint256 salt, address user, uint256 network, uint256 intent, uint256 delegateType, uint256 deadline, address currency, bytes dataMask, ${orderItemParamType}[] items, bytes32 r, bytes32 s, uint8 v, uint8 signVersion)`\n\nexport type OfferItem = {\n  price: BigNumber\n  tokens: {\n    token: string\n    tokenId: BigNumberish\n    amount: number\n  }[]\n}\n\ntype OrderItem = {\n  price: BigNumberish\n  data: string\n}\n\ntype Order = {\n  salt: BigNumberish\n  user: string\n  network: BigNumberish\n  intent: BigNumberish\n  delegateType: BigNumberish\n  deadline: BigNumberish\n  currency: string\n  dataMask: string\n  items: OrderItem[]\n  // signature\n  r: string\n  s: string\n  v: number\n  signVersion: number\n}\n\nexport type OrderPayload = {\n  order: string\n  isBundle: boolean\n  bundleName: string\n  bundleDesc: string\n  orderIds: number[]\n  changePrice: boolean\n  isCollection: boolean\n}\n\nconst randomSalt = () => {\n  const randomHex = BigNumber.from(randomBytes(16)).toHexString()\n  return hexZeroPad(randomHex, 64)\n}\n\nconst encodeItemData = (data: { token: string; tokenId: BigNumberish; amount: number }[]) => {\n  return defaultAbiCoder.encode([dataParamType], [data])\n}\n\nexport const signOrderData = async (web3Provider: Web3Provider, order: Order) => {\n  const orderData = defaultAbiCoder.encode(orderParamTypes, [\n    order.salt,\n    order.user,\n    order.network,\n    order.intent,\n    order.delegateType,\n    order.deadline,\n    order.currency,\n    order.dataMask,\n    order.items.length,\n    order.items,\n  ])\n  const orderHash = keccak256(orderData)\n  const orderSig = (await web3Provider.send('personal_sign', [orderHash, order.user])) as string\n  order.r = `0x${orderSig.slice(2, 66)}`\n  order.s = `0x${orderSig.slice(66, 130)}`\n  order.v = parseInt(orderSig.slice(130, 132), 16)\n  fixSignature(order)\n}\n\nconst fixSignature = (data: Order) => {\n  // in geth its always 27/28, in ganache its 0/1. Change to 27/28 to prevent\n  // signature malleability if version is 0/1\n  // see https://github.com/ethereum/go-ethereum/blob/v1.8.23/internal/ethapi/api.go#L465\n  if (data.v < 27) {\n    data.v = data.v + 27\n  }\n}\n\nexport const encodeOrder = (order: Order): string => {\n  return defaultAbiCoder.encode([orderParamType], [order])\n}\n\nexport const createSellOrder = (\n  user: string,\n  deadline: number,\n  items: OfferItem[],\n  nftStandard: NftStandard = NftStandard.Erc721\n): Order => {\n  const salt = randomSalt()\n  const network = 1 // mainnet\n  const intent = 1 // INTENT_SELL\n  const delegateType = nftStandard === NftStandard.Erc721 ? 1 : 2\n  const currency = AddressZero // ETH\n  return {\n    salt,\n    user,\n    network,\n    intent,\n    delegateType,\n    deadline,\n    currency,\n    dataMask: '0x',\n    items: items.map((item) => ({\n      price: item.price,\n      data: encodeItemData(item.tokens),\n    })),\n    r: '',\n    s: '',\n    v: 0,\n    signVersion: 1,\n  }\n}\n","import { Signer } from '@ethersproject/abstract-signer'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport type { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { parseEther } from '@ethersproject/units'\nimport { addressesByNetwork, MakerOrder, signMakerOrder, SupportedChainId } from '@looksrare/sdk'\nimport { Seaport } from '@opensea/seaport-js'\nimport { ItemType } from '@opensea/seaport-js/lib/constants'\nimport { ConsiderationInputItem } from '@opensea/seaport-js/lib/types'\nimport { ZERO_ADDRESS } from 'constants/misc'\nimport { NftStandard } from 'graphql/data/__generated__/types-and-hooks'\nimport { createLooksRareOrder } from 'nft/queries/looksRare'\nimport { LOOKSRARE_MARKETPLACE_CONTRACT_721 } from 'nft/queries/looksRare/constants'\nimport { PostOpenSeaSellOrder } from 'nft/queries/openSea'\nimport {\n  OPENSEA_DEFAULT_CROSS_CHAIN_CONDUIT_KEY,\n  OPENSEA_FEE_ADDRESS,\n  OPENSEA_KEY_TO_CONDUIT,\n  OPENSEA_SEAPORT_V1_5_CONTRACT,\n} from 'nft/queries/openSea/constants'\nimport { INVERSE_BASIS_POINTS } from 'nft/queries/openSea/constants'\nimport { getX2Y2OrderId, newX2Y2Order } from 'nft/queries/x2y2'\n\nimport ERC721 from '../../abis/erc721.json'\nimport ERC1155 from '../../abis/erc1155.json'\nimport { ListingMarket, ListingStatus, WalletAsset } from '../types'\nimport { createSellOrder, encodeOrder, OfferItem, OrderPayload, signOrderData } from './x2y2'\n\nexport const LOOKS_RARE_CREATOR_BASIS_POINTS = 50\n\nexport const ListingMarkets: ListingMarket[] = [\n  {\n    name: 'X2Y2',\n    fee: 0.5,\n  },\n  {\n    name: 'OpenSea',\n    fee: 2.5,\n  },\n]\n\nconst createConsiderationItem = (basisPoints: string, recipient: string): ConsiderationInputItem => {\n  return {\n    amount: basisPoints,\n    recipient,\n  }\n}\n\nconst getConsiderationItems = (\n  asset: WalletAsset,\n  price: BigNumber,\n  signerAddress: string\n): {\n  sellerFee: ConsiderationInputItem\n  creatorFee?: ConsiderationInputItem\n  openSeaFee?: ConsiderationInputItem\n} => {\n  const creatorFeeBasisPoints = asset?.basisPoints ?? 0\n  const openSeaBasisPoints = (ListingMarkets.find((market) => market.name === 'OpenSea')?.fee ?? 0) * 100\n  const sellerBasisPoints = INVERSE_BASIS_POINTS - creatorFeeBasisPoints - openSeaBasisPoints\n\n  const creatorFee = price\n    .mul(BigNumber.from(creatorFeeBasisPoints))\n    .div(BigNumber.from(INVERSE_BASIS_POINTS))\n    .toString()\n  const sellerFee = price.mul(BigNumber.from(sellerBasisPoints)).div(BigNumber.from(INVERSE_BASIS_POINTS)).toString()\n  const openSeaFee = price.mul(BigNumber.from(openSeaBasisPoints)).div(BigNumber.from(INVERSE_BASIS_POINTS)).toString()\n\n  return {\n    sellerFee: createConsiderationItem(sellerFee, signerAddress),\n    creatorFee:\n      creatorFeeBasisPoints > 0\n        ? createConsiderationItem(creatorFee, asset?.asset_contract?.payout_address ?? '')\n        : undefined,\n    openSeaFee: openSeaBasisPoints ? createConsiderationItem(openSeaFee, OPENSEA_FEE_ADDRESS) : undefined,\n  }\n}\n\nexport async function approveCollection(\n  operator: string,\n  collectionAddress: string,\n  signer: Signer,\n  setStatus: (newStatus: ListingStatus) => void,\n  nftStandard: NftStandard = NftStandard.Erc721\n): Promise<void> {\n  const contract = new Contract(collectionAddress, nftStandard === NftStandard.Erc721 ? ERC721 : ERC1155, signer)\n  const signerAddress = await signer.getAddress()\n\n  try {\n    const approved = await contract.isApprovedForAll(signerAddress, operator)\n    if (approved) {\n      setStatus(ListingStatus.APPROVED)\n      return\n    }\n\n    setStatus(ListingStatus.SIGNING)\n    const approvalTransaction = await contract.setApprovalForAll(operator, true)\n\n    setStatus(ListingStatus.PENDING)\n    const tx = await approvalTransaction.wait()\n\n    tx.status === 1 ? setStatus(ListingStatus.APPROVED) : setStatus(ListingStatus.FAILED)\n  } catch (error) {\n    if (error.code === 4001) setStatus(ListingStatus.REJECTED)\n    else setStatus(ListingStatus.FAILED)\n  }\n}\n\nexport async function signListing(\n  marketplace: ListingMarket,\n  asset: WalletAsset,\n  signer: JsonRpcSigner,\n  provider: Web3Provider,\n  looksRareNonce = 0,\n  setStatus: (newStatus: ListingStatus) => void\n): Promise<boolean> {\n  const seaport = new Seaport(provider, {\n    conduitKeyToConduit: OPENSEA_KEY_TO_CONDUIT,\n    overrides: {\n      defaultConduitKey: OPENSEA_DEFAULT_CROSS_CHAIN_CONDUIT_KEY,\n    },\n    seaportVersion: '1.5',\n  })\n\n  const signerAddress = await signer.getAddress()\n  const listingPrice = asset.newListings?.find((listing) => listing.marketplace.name === marketplace.name)?.price\n  if (!listingPrice || !asset.expirationTime || !asset.asset_contract.address || !asset.tokenId) return false\n  switch (marketplace.name) {\n    case 'OpenSea':\n      try {\n        const listingInWei = parseEther(`${listingPrice}`)\n        const { sellerFee, creatorFee, openSeaFee } = getConsiderationItems(asset, listingInWei, signerAddress)\n        const considerationItems = [sellerFee, creatorFee, openSeaFee].filter(\n          (item): item is ConsiderationInputItem => item !== undefined\n        )\n\n        const { executeAllActions } = await seaport.createOrder(\n          {\n            offer: [\n              {\n                itemType: asset.asset_contract.tokenType === NftStandard.Erc721 ? ItemType.ERC721 : ItemType.ERC1155,\n                token: asset.asset_contract.address,\n                identifier: asset.tokenId,\n                amount: '1',\n              },\n            ],\n            consideration: considerationItems,\n            endTime: asset.expirationTime.toString(),\n            zone: ZERO_ADDRESS,\n            allowPartialFills: true,\n          },\n          signerAddress\n        )\n\n        const order = await executeAllActions()\n        const seaportV15Order = { ...order, protocol_address: OPENSEA_SEAPORT_V1_5_CONTRACT }\n        setStatus(ListingStatus.PENDING)\n        const res = await PostOpenSeaSellOrder(seaportV15Order)\n        res ? setStatus(ListingStatus.APPROVED) : setStatus(ListingStatus.FAILED)\n        return res\n      } catch (error) {\n        if (error.code === 4001) setStatus(ListingStatus.REJECTED)\n        else setStatus(ListingStatus.FAILED)\n        return false\n      }\n    case 'LooksRare': {\n      const addresses = addressesByNetwork[SupportedChainId.MAINNET]\n      const currentTime = Math.round(Date.now() / 1000)\n      const makerOrder: MakerOrder = {\n        // true --> ask / false --> bid\n        isOrderAsk: true,\n        // signer address of the maker order\n        signer: signerAddress,\n        // collection address\n        collection: asset.asset_contract.address,\n        // Price in WEI\n        price: parseEther(listingPrice.toString()),\n        // Token ID\n        tokenId: BigNumber.from(asset.tokenId),\n        // amount of tokens to sell/purchase (must be 1 for ERC721, 1+ for ERC1155)\n        amount: BigNumber.from(1),\n        // strategy for trade execution (e.g., DutchAuction, StandardSaleForFixedPrice), see addresses in the SDK\n        strategy: addresses.STRATEGY_STANDARD_SALE,\n        // currency address\n        currency: addresses.WETH,\n        // order nonce (must be unique unless new maker order is meant to override existing one e.g., lower ask price)\n        nonce: BigNumber.from(looksRareNonce),\n        // startTime timestamp in seconds\n        startTime: BigNumber.from(currentTime),\n        // endTime timestamp in seconds\n        endTime: BigNumber.from(asset.expirationTime),\n        // minimum ratio to be received by the user (per 10000)\n        // As of 11.10.22 LooksRare charges 1.5% + 0.5% if there's creator royalties set https://docs.looksrare.org/blog/looksrare-offers-zero-royalty-trading-shares-protocol-fees-with-creators-instead\n        minPercentageToAsk: BigNumber.from(10000)\n          .sub(BigNumber.from(150 + (asset.basisPoints ? 50 : 0)))\n          .toNumber(),\n        // params (e.g., price, target account for private sale)\n        params: [],\n      }\n\n      try {\n        const signatureHash = await signMakerOrder(\n          signer,\n          SupportedChainId.MAINNET,\n          makerOrder,\n          LOOKSRARE_MARKETPLACE_CONTRACT_721\n        )\n        setStatus(ListingStatus.PENDING)\n        const payload = {\n          signature: signatureHash,\n          tokenId: asset.tokenId,\n          collection: asset.asset_contract.address,\n          strategy: addresses.STRATEGY_STANDARD_SALE,\n          currency: addresses.WETH,\n          signer: signerAddress,\n          isOrderAsk: true,\n          nonce: looksRareNonce,\n          amount: 1,\n          price: parseEther(listingPrice.toString()).toString(),\n          startTime: currentTime,\n          endTime: asset.expirationTime,\n          minPercentageToAsk: 10000 - (150 + (asset.basisPoints ? 50 : 0)),\n          params: [],\n        }\n        const res = await createLooksRareOrder(payload)\n        res ? setStatus(ListingStatus.APPROVED) : setStatus(ListingStatus.FAILED)\n        return res\n      } catch (error) {\n        if (error.code === 4001) setStatus(ListingStatus.REJECTED)\n        else setStatus(ListingStatus.FAILED)\n        return false\n      }\n    }\n    case 'X2Y2': {\n      const orderItem: OfferItem = {\n        price: parseEther(listingPrice.toString()),\n        tokens: [\n          {\n            token: asset.asset_contract.address,\n            tokenId: BigNumber.from(asset.tokenId),\n            amount: 1,\n          },\n        ],\n      }\n      const order = createSellOrder(signerAddress, asset.expirationTime, [orderItem], asset.asset_contract.tokenType)\n      try {\n        const prevOrderId = await getX2Y2OrderId(asset.asset_contract.address, asset.tokenId)\n        await signOrderData(provider, order)\n        const payload: OrderPayload = {\n          order: encodeOrder(order),\n          isBundle: false,\n          bundleName: '',\n          bundleDesc: '',\n          orderIds: prevOrderId ? [prevOrderId] : [],\n          changePrice: Boolean(prevOrderId),\n          isCollection: false,\n        }\n        setStatus(ListingStatus.PENDING)\n        // call server api\n        const resp = await newX2Y2Order(payload)\n        resp ? setStatus(ListingStatus.APPROVED) : setStatus(ListingStatus.FAILED)\n        return resp\n      } catch (error) {\n        if (error.code === 4001) setStatus(ListingStatus.REJECTED)\n        else setStatus(ListingStatus.FAILED)\n        return false\n      }\n    }\n    default:\n      return false\n  }\n}\n","import ms from 'ms'\n\nexport async function PostOpenSeaSellOrder(payload?: Record<string, unknown>): Promise<boolean> {\n  const body = payload ? JSON.stringify(payload) : undefined\n  const url = `${process.env.REACT_APP_TEMP_API_URL}/nft/postOpenSeaSellOrderWithApiKey`\n  const ac = new AbortController()\n  const req = new Request(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json; charset=utf-8',\n    },\n    body,\n    signal: ac.signal,\n  })\n  const timeout = setTimeout(() => ac.abort(), ms(`60s`))\n  try {\n    const res = await fetch(req)\n    const data = await res.json()\n\n    return data.code === 200\n  } catch (e) {\n    return false\n  } finally {\n    clearTimeout(timeout)\n  }\n}\n","import type { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { addressesByNetwork, SupportedChainId } from '@looksrare/sdk'\nimport { NftStandard } from 'graphql/data/__generated__/types-and-hooks'\nimport ms from 'ms'\nimport { SetPriceMethod, WarningType } from 'nft/components/profile/list/shared'\nimport { useNFTList, useSellAsset } from 'nft/hooks'\nimport {\n  LOOKSRARE_MARKETPLACE_CONTRACT_721,\n  LOOKSRARE_MARKETPLACE_CONTRACT_1155,\n} from 'nft/queries/looksRare/constants'\nimport { OPENSEA_CROSS_CHAIN_CONDUIT } from 'nft/queries/openSea/constants'\nimport { X2Y2_TRANSFER_CONTRACT_721, X2Y2_TRANSFER_CONTRACT_1155 } from 'nft/queries/x2y2'\nimport { CollectionRow, Listing, ListingMarket, ListingRow, ListingStatus, WalletAsset } from 'nft/types'\nimport { approveCollection, LOOKS_RARE_CREATOR_BASIS_POINTS, signListing } from 'nft/utils/listNfts'\nimport { Dispatch, useEffect } from 'react'\n\nexport async function approveCollectionRow(\n  collectionRow: CollectionRow,\n  signer: JsonRpcSigner,\n  setCollectionStatusAndCallback: (\n    collection: CollectionRow,\n    status: ListingStatus,\n    callback?: () => Promise<void>\n  ) => void\n) {\n  const callback = () => approveCollectionRow(collectionRow, signer, setCollectionStatusAndCallback)\n  setCollectionStatusAndCallback(collectionRow, ListingStatus.SIGNING, callback)\n  const { marketplace, collectionAddress, nftStandard } = collectionRow\n  const addresses = addressesByNetwork[SupportedChainId.MAINNET]\n  const spender =\n    marketplace.name === 'OpenSea'\n      ? OPENSEA_CROSS_CHAIN_CONDUIT\n      : marketplace.name === 'LooksRare'\n      ? collectionRow.nftStandard === NftStandard.Erc721\n        ? LOOKSRARE_MARKETPLACE_CONTRACT_721\n        : LOOKSRARE_MARKETPLACE_CONTRACT_1155\n      : marketplace.name === 'X2Y2'\n      ? collectionRow.nftStandard === NftStandard.Erc721\n        ? X2Y2_TRANSFER_CONTRACT_721\n        : X2Y2_TRANSFER_CONTRACT_1155\n      : addresses.TRANSFER_MANAGER_ERC721\n  !!collectionAddress &&\n    (await approveCollection(\n      spender,\n      collectionAddress,\n      signer,\n      (newStatus: ListingStatus) => setCollectionStatusAndCallback(collectionRow, newStatus, callback),\n      nftStandard\n    ))\n}\n\nexport async function signListingRow(\n  listing: ListingRow,\n  signer: JsonRpcSigner,\n  provider: Web3Provider,\n  getLooksRareNonce: () => number,\n  setLooksRareNonce: (nonce: number) => void,\n  setListingStatusAndCallback: (listing: ListingRow, status: ListingStatus, callback?: () => Promise<void>) => void\n) {\n  const looksRareNonce = getLooksRareNonce()\n  const callback = () => {\n    return signListingRow(listing, signer, provider, getLooksRareNonce, setLooksRareNonce, setListingStatusAndCallback)\n  }\n  setListingStatusAndCallback(listing, ListingStatus.SIGNING, callback)\n  const { asset, marketplace } = listing\n  const res = await signListing(marketplace, asset, signer, provider, looksRareNonce, (newStatus: ListingStatus) =>\n    setListingStatusAndCallback(listing, newStatus, callback)\n  )\n  res && listing.marketplace.name === 'LooksRare' && setLooksRareNonce(looksRareNonce + 1)\n}\n\nexport const getTotalEthValue = (sellAssets: WalletAsset[]) => {\n  const total = sellAssets.reduce((total, asset: WalletAsset) => {\n    if (asset.newListings?.length) {\n      const maxListing = asset.newListings.reduce((a, b) => ((a.price ?? 0) > (b.price ?? 0) ? a : b))\n      // LooksRare is a unique case where creator royalties are a flat 0.5% or 50 basis points\n      const maxFee =\n        maxListing.marketplace.fee +\n        (maxListing.marketplace.name === 'LooksRare' ? LOOKS_RARE_CREATOR_BASIS_POINTS : asset?.basisPoints ?? 0) / 100\n      return total + (maxListing.price ?? 0) - (maxListing.price ?? 0) * (maxFee / 100)\n    }\n    return total\n  }, 0)\n  return total ? Math.round(total * 10000 + Number.EPSILON) / 10000 : 0\n}\n\nconst getListings = (sellAssets: WalletAsset[]): [CollectionRow[], ListingRow[]] => {\n  const newCollectionsToApprove: CollectionRow[] = []\n\n  const newListings: ListingRow[] = []\n  sellAssets.forEach((asset) => {\n    asset.marketplaces?.forEach((marketplace: ListingMarket) => {\n      const newListing = {\n        image: asset.smallImageUrl,\n        name: asset.name || `#${asset.tokenId}`,\n        status: ListingStatus.DEFINED,\n        asset,\n        marketplace,\n        price: asset.newListings?.find((listing) => listing.marketplace.name === marketplace.name)?.price,\n      }\n      newListings.push(newListing)\n      if (\n        !newCollectionsToApprove.some(\n          (collectionRow: CollectionRow) =>\n            collectionRow.collectionAddress === asset.asset_contract.address &&\n            collectionRow.marketplace.name === marketplace.name\n        )\n      ) {\n        const newCollectionRow = {\n          image: asset.asset_contract.image_url,\n          name: asset.asset_contract.name,\n          status: ListingStatus.DEFINED,\n          collectionAddress: asset.asset_contract.address,\n          isVerified: asset.collectionIsVerified,\n          marketplace,\n          nftStandard: asset.asset_contract.tokenType,\n        }\n        newCollectionsToApprove.push(newCollectionRow)\n      }\n    })\n  })\n  return [newCollectionsToApprove, newListings]\n}\n\nexport const verifyStatus = (status: ListingStatus) => {\n  return status !== ListingStatus.PAUSED && status !== ListingStatus.APPROVED\n}\n\nexport function useSubscribeListingState() {\n  const sellAssets = useSellAsset((state) => state.sellAssets)\n  const { setListings, setCollectionsRequiringApproval } = useNFTList(\n    ({ setListings, setCollectionsRequiringApproval }) => ({\n      setListings,\n      setCollectionsRequiringApproval,\n    })\n  )\n  useEffect(() => {\n    const [newCollectionsToApprove, newListings] = getListings(sellAssets)\n    setListings(newListings)\n    setCollectionsRequiringApproval(newCollectionsToApprove)\n  }, [sellAssets, setCollectionsRequiringApproval, setListings])\n}\n\nexport function useHandleGlobalPriceToggle(\n  globalOverride: boolean,\n  setListPrice: Dispatch<number | undefined>,\n  setPrice: (price?: number) => void,\n  listPrice?: number,\n  globalPrice?: number\n) {\n  useEffect(() => {\n    let price: number | undefined\n    if (globalOverride) {\n      if (!listPrice) setListPrice(globalPrice)\n      price = globalPrice\n    } else {\n      price = listPrice\n    }\n    setPrice(price)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [globalOverride])\n}\n\nexport function useSyncPriceWithGlobalMethod(\n  asset: WalletAsset,\n  setListPrice: Dispatch<number | undefined>,\n  setGlobalPrice: Dispatch<number | undefined>,\n  setGlobalOverride: Dispatch<boolean>,\n  listPrice?: number,\n  globalPrice?: number,\n  globalPriceMethod?: SetPriceMethod\n) {\n  useEffect(() => {\n    if (globalPriceMethod === SetPriceMethod.FLOOR_PRICE) {\n      setListPrice(asset?.floorPrice)\n      setGlobalPrice(asset.floorPrice)\n    } else if (globalPriceMethod === SetPriceMethod.LAST_PRICE) {\n      setListPrice(asset.lastPrice)\n      setGlobalPrice(asset.lastPrice)\n    } else if (globalPriceMethod === SetPriceMethod.SAME_PRICE)\n      listPrice && !globalPrice ? setGlobalPrice(listPrice) : setListPrice(globalPrice)\n\n    setGlobalOverride(false)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [globalPriceMethod])\n}\n\nexport function useUpdateInputAndWarnings(\n  setWarningType: Dispatch<WarningType>,\n  inputRef: React.MutableRefObject<HTMLInputElement>,\n  asset: WalletAsset,\n  listPrice?: number\n) {\n  useEffect(() => {\n    setWarningType(WarningType.NONE)\n    const price = listPrice ?? 0\n    inputRef.current.value = `${price}`\n    if (price < (asset?.floorPrice ?? 0) && price > 0) setWarningType(WarningType.BELOW_FLOOR)\n    else if (\n      asset.floor_sell_order_price &&\n      price >= asset.floor_sell_order_price &&\n      asset.asset_contract.tokenType !== NftStandard.Erc1155\n    )\n      setWarningType(WarningType.ALREADY_LISTED)\n  }, [\n    asset.asset_contract.tokenType,\n    asset?.floorPrice,\n    asset.floor_sell_order_price,\n    inputRef,\n    listPrice,\n    setWarningType,\n  ])\n}\n\nexport const getRoyalty = (listingMarket: ListingMarket, asset: WalletAsset) => {\n  // LooksRare is a unique case where royalties for creators are a flat 0.5% or 50 basis points if royalty is set\n  const baseFee =\n    listingMarket.name === 'LooksRare'\n      ? asset.basisPoints\n        ? LOOKS_RARE_CREATOR_BASIS_POINTS\n        : 0\n      : asset.basisPoints ?? 0\n\n  return baseFee * 0.01\n}\n\nconst BELOW_FLOOR_PRICE_THRESHOLD = 0.8\n\nexport const findListingIssues = (sellAssets: WalletAsset[]) => {\n  const missingExpiration = sellAssets.some((asset) => {\n    return (\n      asset.expirationTime != null &&\n      (isNaN(asset.expirationTime) || asset.expirationTime * 1000 - Date.now() < ms(`60s`))\n    )\n  })\n  const overMaxExpiration = sellAssets.some((asset) => {\n    return asset.expirationTime != null && asset.expirationTime * 1000 - Date.now() > ms(`180d`)\n  })\n\n  const listingsMissingPrice: [WalletAsset, Listing][] = []\n  const listingsBelowFloor: [WalletAsset, Listing][] = []\n  const listingsAboveSellOrderFloor: [WalletAsset, Listing][] = []\n  for (const asset of sellAssets) {\n    if (asset.newListings) {\n      for (const listing of asset.newListings) {\n        if (!listing.price) listingsMissingPrice.push([asset, listing])\n        else if (listing.price < (asset?.floorPrice ?? 0) * BELOW_FLOOR_PRICE_THRESHOLD && !listing.overrideFloorPrice)\n          listingsBelowFloor.push([asset, listing])\n        else if (\n          asset.floor_sell_order_price &&\n          listing.price >= asset.floor_sell_order_price &&\n          asset.asset_contract.tokenType !== NftStandard.Erc1155\n        )\n          listingsAboveSellOrderFloor.push([asset, listing])\n      }\n    }\n  }\n  return {\n    missingExpiration,\n    overMaxExpiration,\n    listingsMissingPrice,\n    listingsBelowFloor,\n    listingsAboveSellOrderFloor,\n  }\n}\n","import { Plural, t, Trans } from '@lingui/macro'\nimport { BaseButton } from 'components/Button'\nimport { BelowFloorWarningModal } from 'nft/components/profile/list/Modal/BelowFloorWarningModal'\nimport { useIsMobile, useSellAsset } from 'nft/hooks'\nimport { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { BREAKPOINTS } from 'theme'\n\nimport { findListingIssues } from './utils'\n\nconst StyledListingButton = styled(BaseButton)<{ showResolveIssues: boolean; missingPrices: boolean }>`\n  background: ${({ showResolveIssues, theme }) => (showResolveIssues ? theme.critical : theme.accent1)};\n  color: ${({ theme }) => theme.deprecated_accentTextLightPrimary};\n  font-weight: 535;\n  font-size: 20px;\n  line-height: 24px;\n  padding: 16px;\n  border-radius: 12px;\n  width: min-content;\n  border: none;\n  cursor: ${({ missingPrices }) => (missingPrices ? 'auto' : 'pointer')};\n  opacity: ${({ showResolveIssues, missingPrices }) => !showResolveIssues && missingPrices && '0.3'};\n\n  @media screen and (max-width: ${BREAKPOINTS.sm}px) {\n    font-size: 16px;\n    line-height: 20px;\n    padding: 10px 12px;\n  }\n`\n\nexport const ListingButton = ({ onClick }: { onClick: () => void }) => {\n  const { sellAssets, showResolveIssues, toggleShowResolveIssues, issues, setIssues } = useSellAsset(\n    ({ sellAssets, showResolveIssues, toggleShowResolveIssues, issues, setIssues }) => ({\n      sellAssets,\n      showResolveIssues,\n      toggleShowResolveIssues,\n      issues,\n      setIssues,\n    })\n  )\n  const [showWarning, setShowWarning] = useState(false)\n  const isMobile = useIsMobile()\n\n  // Find issues with item listing data\n  const [listingsMissingPrice, listingsBelowFloor] = useMemo(() => {\n    const {\n      missingExpiration,\n      overMaxExpiration,\n      listingsMissingPrice,\n      listingsBelowFloor,\n      listingsAboveSellOrderFloor,\n    } = findListingIssues(sellAssets)\n\n    // set number of issues\n    const foundIssues =\n      Number(missingExpiration) +\n      Number(overMaxExpiration) +\n      listingsMissingPrice.length +\n      listingsAboveSellOrderFloor.length\n    setIssues(foundIssues)\n    !foundIssues && showResolveIssues && toggleShowResolveIssues()\n    // Only show Resolve Issue text if there was a user submitted error (ie not when page loads with no prices set)\n    if ((missingExpiration || overMaxExpiration || listingsAboveSellOrderFloor.length) && !showResolveIssues)\n      toggleShowResolveIssues()\n\n    return [listingsMissingPrice, listingsBelowFloor]\n  }, [sellAssets, setIssues, showResolveIssues, toggleShowResolveIssues])\n\n  const warningWrappedClick = () => {\n    if (issues) !showResolveIssues && toggleShowResolveIssues()\n    else if (listingsBelowFloor.length) setShowWarning(true)\n    else onClick()\n  }\n\n  return (\n    <>\n      <StyledListingButton\n        onClick={warningWrappedClick}\n        missingPrices={!!listingsMissingPrice.length}\n        showResolveIssues={showResolveIssues}\n      >\n        {showResolveIssues ? (\n          <Plural value={issues !== 1 ? 2 : 1} _1=\"Resolve issue\" other={t`Resolve ${issues} issues`} />\n        ) : listingsMissingPrice.length && !isMobile ? (\n          <Trans>Set prices to continue</Trans>\n        ) : (\n          <Trans>Start listing</Trans>\n        )}\n      </StyledListingButton>\n\n      {showWarning && (\n        <BelowFloorWarningModal\n          listingsBelowFloor={listingsBelowFloor}\n          closeModal={() => setShowWarning(false)}\n          startListing={onClick}\n        />\n      )}\n    </>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport Column from 'components/Column'\nimport Loader from 'components/Icons/LoadingSpinner'\nimport Row from 'components/Row'\nimport { VerifiedIcon } from 'nft/components/icons'\nimport { AssetRow, CollectionRow, ListingStatus } from 'nft/types'\nimport { getMarketplaceIcon } from 'nft/utils'\nimport { useEffect, useRef } from 'react'\nimport { Check, XOctagon } from 'react-feather'\nimport styled, { css, useTheme } from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { opacify } from 'theme/utils'\n\nconst ContentColumn = styled(Column)<{ failed: boolean }>`\n  background-color: ${({ theme, failed }) => failed && opacify(12, theme.critical)};\n  border-radius: 12px;\n  padding-bottom: ${({ failed }) => failed && '16px'};\n`\n\nconst ContentRowWrapper = styled(Row)<{ active: boolean; failed: boolean }>`\n  padding: 16px;\n  border: ${({ failed, theme }) => !failed && `1px solid ${theme.surface3}`};\n  border-radius: 12px;\n  opacity: ${({ active, failed }) => (active || failed ? '1' : '0.6')};\n`\n\nconst CollectionIcon = styled.img`\n  border-radius: 100px;\n  height: 24px;\n  width: 24px;\n  z-index: 1;\n`\n\nconst AssetIcon = styled.img`\n  border-radius: 4px;\n  height: 24px;\n  width: 24px;\n  z-index: 1;\n`\n\nconst MarketplaceIcon = styled.div`\n  border-radius: 4px;\n  height: 24px;\n  width: 24px;\n  margin-left: -4px;\n  margin-right: 12px;\n`\n\nconst ContentName = styled(ThemedText.SubHeaderSmall)`\n  color: ${({ theme }) => theme.neutral1};\n  line-height: 20px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  max-width: 40%;\n`\n\nconst ProceedText = styled.span`\n  font-weight: 535;\n  font-size: 12px;\n  line-height: 16px;\n  color: ${({ theme }) => theme.neutral2};\n`\n\nconst FailedText = styled.span`\n  font-weight: 535;\n  font-size: 10px;\n  line-height: 12px;\n  color: ${({ theme }) => theme.critical};\n  margin-left: 4px;\n`\n\nconst StyledVerifiedIcon = styled(VerifiedIcon)`\n  height: 16px;\n  width: 16px;\n  margin-left: 4px;\n`\n\nconst IconWrapper = styled.div`\n  margin-left: auto;\n  margin-right: 0px;\n`\n\nconst ButtonRow = styled(Row)`\n  padding: 0px 16px;\n  justify-content: space-between;\n`\n\nconst failedButtonStyle = css`\n  width: 152px;\n  cursor: pointer;\n  padding: 8px 0px;\n  text-align: center;\n  font-weight: 535;\n  font-size: 14px;\n  line-height: 16px;\n  border-radius: 12px;\n  border: none;\n\n  &:hover {\n    opacity: 0.6;\n  }\n`\n\nconst RemoveButton = styled.button`\n  background-color: ${({ theme }) => theme.critical};\n  color: ${({ theme }) => theme.neutral1};\n  ${failedButtonStyle}\n`\n\nconst RetryButton = styled.button`\n  background-color: ${({ theme }) => theme.surface3};\n  color: ${({ theme }) => theme.neutral1};\n  ${failedButtonStyle}\n`\n\nexport const ContentRow = ({\n  row,\n  isCollectionApprovalSection,\n  removeRow,\n}: {\n  row: AssetRow\n  isCollectionApprovalSection: boolean\n  removeRow: (row: AssetRow) => void\n}) => {\n  const theme = useTheme()\n  const rowRef = useRef<HTMLDivElement>()\n  const failed = row.status === ListingStatus.FAILED || row.status === ListingStatus.REJECTED\n\n  useEffect(() => {\n    row.status === ListingStatus.SIGNING && rowRef.current?.scroll\n  }, [row.status])\n\n  return (\n    <ContentColumn failed={failed}>\n      <ContentRowWrapper\n        active={row.status === ListingStatus.SIGNING || row.status === ListingStatus.APPROVED}\n        failed={failed}\n        ref={rowRef}\n      >\n        {isCollectionApprovalSection ? <CollectionIcon src={row.image} /> : <AssetIcon src={row.image} />}\n        <MarketplaceIcon>{getMarketplaceIcon(row.marketplace.name, '24')}</MarketplaceIcon>\n        <ContentName>{row.name}</ContentName>\n        {isCollectionApprovalSection && (row as CollectionRow).isVerified && <StyledVerifiedIcon />}\n        <IconWrapper>\n          {row.status === ListingStatus.DEFINED || row.status === ListingStatus.PENDING ? (\n            <Loader\n              height=\"14px\"\n              width=\"14px\"\n              stroke={row.status === ListingStatus.PENDING ? theme.accent1 : theme.neutral3}\n            />\n          ) : row.status === ListingStatus.SIGNING ? (\n            <ProceedText>\n              <Trans>Proceed in wallet</Trans>\n            </ProceedText>\n          ) : row.status === ListingStatus.APPROVED ? (\n            <Check height=\"20\" width=\"20\" stroke={theme.success} />\n          ) : (\n            failed && (\n              <Row>\n                <XOctagon height=\"20\" width=\"20\" color={theme.critical} />\n                <FailedText>\n                  {row.status === ListingStatus.FAILED ? <Trans>Failed</Trans> : <Trans>Rejected</Trans>}\n                </FailedText>\n              </Row>\n            )\n          )}\n        </IconWrapper>\n      </ContentRowWrapper>\n      {failed && (\n        <ButtonRow justify=\"space-between\">\n          <RemoveButton onClick={() => removeRow(row)}>\n            <Trans>Remove</Trans>\n          </RemoveButton>\n          <RetryButton onClick={row.callback}>\n            <Trans>Retry</Trans>\n          </RetryButton>\n        </ButtonRow>\n      )}\n    </ContentColumn>\n  )\n}\n","import { Plural, Trans } from '@lingui/macro'\nimport Column from 'components/Column'\nimport { ScrollBarStyles } from 'components/Common'\nimport Row from 'components/Row'\nimport { MouseoverTooltip } from 'components/Tooltip'\nimport { ChevronUpIcon, ListingModalWindowActive, ListingModalWindowClosed } from 'nft/components/icons'\nimport { useSellAsset } from 'nft/hooks'\nimport { AssetRow, CollectionRow, ListingRow, ListingStatus } from 'nft/types'\nimport { useMemo } from 'react'\nimport { Info } from 'react-feather'\nimport styled, { useTheme } from 'styled-components'\nimport { colors } from 'theme/colors'\nimport { ThemedText } from 'theme/components'\nimport { TRANSITION_DURATIONS } from 'theme/styles'\n\nimport { ContentRow } from './ContentRow'\n\nconst SectionHeader = styled(Row)`\n  justify-content: space-between;\n`\n\nconst SectionTitle = styled(ThemedText.SubHeader)<{ active: boolean; approved: boolean }>`\n  line-height: 24px;\n  color: ${({ theme, active, approved }) => (approved ? theme.success : active ? theme.neutral1 : theme.neutral2)};\n`\n\nconst SectionArrow = styled(ChevronUpIcon)<{ active: boolean }>`\n  height: 24px;\n  width: 24px;\n  cursor: pointer;\n  transition: ${TRANSITION_DURATIONS.medium}ms;\n  transform: rotate(${({ active }) => (active ? 0 : 180)}deg);\n`\n\nconst SectionBody = styled(Column)`\n  border-left: 1.5px solid ${colors.gray650};\n  margin-top: 4px;\n  margin-left: 7px;\n  padding-top: 4px;\n  padding-left: 20px;\n  max-height: 394px;\n  overflow-y: auto;\n  ${ScrollBarStyles}\n`\n\nconst StyledInfoIcon = styled(Info)`\n  height: 16px;\n  width: 16px;\n  margin-left: 4px;\n  color: ${({ theme }) => theme.neutral2};\n`\n\nconst ContentRowContainer = styled(Column)`\n  gap: 8px;\n  scroll-behavior: smooth;\n`\n\nexport const enum Section {\n  APPROVE,\n  SIGN,\n}\n\ninterface ListModalSectionProps {\n  sectionType: Section\n  active: boolean\n  content: AssetRow[]\n  toggleSection: React.DispatchWithoutAction\n}\n\nexport const ListModalSection = ({ sectionType, active, content, toggleSection }: ListModalSectionProps) => {\n  const theme = useTheme()\n  const sellAssets = useSellAsset((state) => state.sellAssets)\n  const removeAssetMarketplace = useSellAsset((state) => state.removeAssetMarketplace)\n  const allContentApproved = useMemo(() => !content.some((row) => row.status !== ListingStatus.APPROVED), [content])\n  const isCollectionApprovalSection = sectionType === Section.APPROVE\n  const uniqueCollections = useMemo(() => {\n    if (isCollectionApprovalSection) {\n      const collections = content.map((collection) => (collection as CollectionRow).collectionAddress)\n      const uniqueCollections = [...new Set(collections)]\n      return uniqueCollections.length\n    }\n    return undefined\n  }, [content, isCollectionApprovalSection])\n  const removeRow = (row: AssetRow) => {\n    // collections\n    if (isCollectionApprovalSection) {\n      const collectionRow = row as CollectionRow\n      for (const asset of sellAssets)\n        if (asset.asset_contract.address === collectionRow.collectionAddress)\n          removeAssetMarketplace(asset, collectionRow.marketplace)\n    }\n    // listings\n    else {\n      const listingRow = row as ListingRow\n      removeAssetMarketplace(listingRow.asset, listingRow.marketplace)\n    }\n  }\n  return (\n    <Column>\n      <SectionHeader>\n        <Row>\n          {active || allContentApproved ? (\n            <ListingModalWindowActive fill={allContentApproved ? theme.success : theme.accent1} />\n          ) : (\n            <ListingModalWindowClosed />\n          )}\n          <SectionTitle active={active} marginLeft=\"12px\" approved={allContentApproved}>\n            {isCollectionApprovalSection ? (\n              <>\n                <Trans>Approve</Trans>&nbsp;\n                <Plural value={uniqueCollections ?? 1} _1=\"collection\" other=\"collections\" />\n              </>\n            ) : (\n              <>\n                <Trans>Sign</Trans> &nbsp;{content.length}&nbsp;{' '}\n                <Plural value={content.length} _1=\"listing\" other=\"listings\" />\n              </>\n            )}\n          </SectionTitle>\n        </Row>\n        <SectionArrow\n          active={active}\n          secondaryColor={active ? theme.neutral1 : theme.neutral2}\n          onClick={toggleSection}\n        />\n      </SectionHeader>\n      {active && (\n        <SectionBody>\n          {isCollectionApprovalSection && (\n            <Row height=\"16px\" marginBottom=\"16px\">\n              <ThemedText.BodySmall lineHeight=\"16px\" color=\"neutral2\">\n                <Trans>Why is a transaction required?</Trans>\n              </ThemedText.BodySmall>\n              <MouseoverTooltip\n                text={<Trans>Listing an NFT requires a one-time marketplace approval for each NFT collection.</Trans>}\n              >\n                <StyledInfoIcon />\n              </MouseoverTooltip>\n            </Row>\n          )}\n          <ContentRowContainer>\n            {content.map((row: AssetRow) => (\n              <ContentRow\n                row={row}\n                key={row?.name ?? row.marketplace.name}\n                removeRow={removeRow}\n                isCollectionApprovalSection={isCollectionApprovalSection}\n              />\n            ))}\n          </ContentRowContainer>\n        </SectionBody>\n      )}\n    </Column>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { useWeb3React } from '@web3-react/core'\nimport Column from 'components/Column'\nimport { ScrollBarStyles } from 'components/Common'\nimport Row from 'components/Row'\nimport { useStablecoinValue } from 'hooks/useStablecoinPrice'\nimport useNativeCurrency from 'lib/hooks/useNativeCurrency'\nimport tryParseCurrencyAmount from 'lib/utils/tryParseCurrencyAmount'\nimport { getTotalEthValue } from 'nft/components/profile/list/utils'\nimport { useSellAsset } from 'nft/hooks'\nimport { generateTweetForList, pluralize } from 'nft/utils'\nimport { useMemo } from 'react'\nimport { Twitter, X } from 'react-feather'\nimport styled, { css, useTheme } from 'styled-components'\nimport { BREAKPOINTS } from 'theme'\nimport { ThemedText } from 'theme/components'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\n\nimport { TitleRow } from '../shared'\n\nconst SuccessImage = styled.img<{ numImages: number }>`\n  width: calc(${({ numImages }) => (numImages > 1 ? (numImages > 2 ? '33%' : '50%') : '100%')} - 12px);\n  border-radius: 12px;\n`\n\nconst SuccessImageWrapper = styled(Row)`\n  flex-wrap: wrap;\n  gap: 12px;\n  justify-content: center;\n  overflow-y: scroll;\n  margin-bottom: 16px;\n  ${ScrollBarStyles}\n`\n\nconst ProceedsColumn = styled(Column)`\n  text-align: right;\n`\n\nconst buttonStyle = css`\n  width: 182px;\n  cursor: pointer;\n  padding: 12px 0px;\n  text-align: center;\n  font-weight: 535;\n  font-size: 16px;\n  line-height: 20px;\n  border-radius: 12px;\n  border: none;\n\n  &:hover {\n    opacity: 0.6;\n  }\n\n  @media screen and (max-width: ${BREAKPOINTS.sm}px) {\n    width: 100%;\n    margin-bottom: 8px;\n  }\n`\n\nconst ReturnButton = styled.button`\n  background-color: ${({ theme }) => theme.surface3};\n  color: ${({ theme }) => theme.neutral1};\n  ${buttonStyle}\n`\n\nconst TweetButton = styled.a`\n  background-color: ${({ theme }) => theme.accent1};\n  color: ${({ theme }) => theme.deprecated_accentTextLightPrimary};\n  text-decoration: none;\n  ${buttonStyle}\n`\n\nconst TweetRow = styled(Row)`\n  justify-content: center;\n  gap: 4px;\n`\n\nexport const SuccessScreen = ({ overlayClick }: { overlayClick: () => void }) => {\n  const theme = useTheme()\n  const { formatNumberOrString } = useFormatter()\n  const sellAssets = useSellAsset((state) => state.sellAssets)\n  const { chainId } = useWeb3React()\n  const nativeCurrency = useNativeCurrency(chainId)\n  const { formatCurrencyAmount } = useFormatter()\n\n  const totalEthListingValue = useMemo(() => getTotalEthValue(sellAssets), [sellAssets])\n  const parsedAmount = tryParseCurrencyAmount(totalEthListingValue.toString(), nativeCurrency)\n  const usdcValue = useStablecoinValue(parsedAmount)\n\n  return (\n    <>\n      <TitleRow>\n        <ThemedText.HeadlineSmall lineHeight=\"28px\">\n          <Trans>Successfully listed</Trans>&nbsp;{sellAssets.length > 1 ? ` ${sellAssets.length} ` : ''}\n          NFT{pluralize(sellAssets.length)}!\n        </ThemedText.HeadlineSmall>\n        <X size={24} cursor=\"pointer\" onClick={overlayClick} />\n      </TitleRow>\n      <SuccessImageWrapper>\n        {sellAssets.map((asset) => (\n          <SuccessImage\n            src={asset.imageUrl}\n            key={asset?.asset_contract?.address ?? '' + asset?.tokenId}\n            numImages={sellAssets.length}\n          />\n        ))}\n      </SuccessImageWrapper>\n      <Row justify=\"space-between\" align=\"flex-start\" marginBottom=\"16px\">\n        <ThemedText.SubHeader>\n          <Trans>Proceeds if sold</Trans>\n        </ThemedText.SubHeader>\n        <ProceedsColumn>\n          <ThemedText.SubHeader>\n            {formatNumberOrString({ input: totalEthListingValue, type: NumberType.NFTToken })} ETH\n          </ThemedText.SubHeader>\n          {usdcValue && (\n            <ThemedText.BodySmall lineHeight=\"20px\" color=\"neutral2\">\n              {formatCurrencyAmount({\n                amount: usdcValue,\n                type: NumberType.FiatTokenPrice,\n              })}\n            </ThemedText.BodySmall>\n          )}\n        </ProceedsColumn>\n      </Row>\n      <Row justify=\"space-between\" flexWrap=\"wrap\">\n        <ReturnButton onClick={() => window.location.reload()}>\n          <Trans>Return to My NFTs</Trans>\n        </ReturnButton>\n        <TweetButton href={generateTweetForList(sellAssets)} target=\"_blank\" rel=\"noreferrer\">\n          <TweetRow>\n            <Twitter\n              height={20}\n              width={20}\n              color={theme.deprecated_accentTextLightPrimary}\n              fill={theme.deprecated_accentTextLightPrimary}\n            />\n            <Trans>Share on Twitter</Trans>\n          </TweetRow>\n        </TweetButton>\n      </Row>\n    </>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { InterfaceModalName, NFTEventName } from '@uniswap/analytics-events'\nimport { useWeb3React } from '@web3-react/core'\nimport { sendAnalyticsEvent, Trace, useTrace } from 'analytics'\nimport { useStablecoinValue } from 'hooks/useStablecoinPrice'\nimport useNativeCurrency from 'lib/hooks/useNativeCurrency'\nimport tryParseCurrencyAmount from 'lib/utils/tryParseCurrencyAmount'\nimport { Portal } from 'nft/components/common/Portal'\nimport { Overlay } from 'nft/components/modals/Overlay'\nimport { getTotalEthValue, signListingRow } from 'nft/components/profile/list/utils'\nimport { useNFTList, useSellAsset } from 'nft/hooks'\nimport { ListingStatus } from 'nft/types'\nimport { useCallback, useEffect, useMemo, useReducer } from 'react'\nimport { X } from 'react-feather'\nimport styled from 'styled-components'\nimport { BREAKPOINTS } from 'theme'\nimport { ThemedText } from 'theme/components'\nimport { Z_INDEX } from 'theme/zIndex'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\n\nimport { TitleRow } from '../shared'\nimport { ListModalSection, Section } from './ListModalSection'\nimport { SuccessScreen } from './SuccessScreen'\n\nconst ListModalWrapper = styled.div`\n  position: fixed;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  width: 420px;\n  z-index: ${Z_INDEX.modal};\n  background: ${({ theme }) => theme.surface1};\n  border-radius: 20px;\n  border: 1px solid ${({ theme }) => theme.surface3};\n  box-shadow: ${({ theme }) => theme.deprecated_deepShadow};\n  padding: 20px 24px 24px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n\n  @media screen and (max-width: ${BREAKPOINTS.sm}px) {\n    width: 100%;\n    height: 100%;\n  }\n`\n\nexport const ListModal = ({ overlayClick }: { overlayClick: () => void }) => {\n  const { provider, chainId } = useWeb3React()\n  const signer = provider?.getSigner()\n  const trace = useTrace({ modal: InterfaceModalName.NFT_LISTING })\n  const { formatCurrencyAmount } = useFormatter()\n  const sellAssets = useSellAsset((state) => state.sellAssets)\n  const { setListingStatusAndCallback, setLooksRareNonce, getLooksRareNonce, collectionsRequiringApproval, listings } =\n    useNFTList(\n      ({\n        setListingStatusAndCallback,\n        setLooksRareNonce,\n        getLooksRareNonce,\n        collectionsRequiringApproval,\n        listings,\n      }) => ({\n        setListingStatusAndCallback,\n        setLooksRareNonce,\n        getLooksRareNonce,\n        collectionsRequiringApproval,\n        listings,\n      })\n    )\n\n  const totalEthListingValue = useMemo(() => getTotalEthValue(sellAssets), [sellAssets])\n  const [openSection, toggleOpenSection] = useReducer(\n    (s) => (s === Section.APPROVE ? Section.SIGN : Section.APPROVE),\n    Section.APPROVE\n  )\n  const nativeCurrency = useNativeCurrency(chainId)\n  const parsedAmount = tryParseCurrencyAmount(totalEthListingValue.toString(), nativeCurrency)\n  const usdcValue = useStablecoinValue(parsedAmount)\n  const usdcAmount = formatCurrencyAmount({\n    amount: usdcValue,\n    type: NumberType.FiatTokenPrice,\n  })\n\n  const allCollectionsApproved = useMemo(\n    () => collectionsRequiringApproval.every((collection) => collection.status === ListingStatus.APPROVED),\n    [collectionsRequiringApproval]\n  )\n\n  const allListingsApproved = useMemo(\n    () => listings.every((listing) => listing.status === ListingStatus.APPROVED),\n    [listings]\n  )\n\n  const signListings = async () => {\n    if (!signer || !provider) return\n    // sign listings\n    for (const listing of listings) {\n      await signListingRow(listing, signer, provider, getLooksRareNonce, setLooksRareNonce, setListingStatusAndCallback)\n    }\n\n    sendAnalyticsEvent(NFTEventName.NFT_LISTING_COMPLETED, {\n      signatures_approved: listings.filter((asset) => asset.status === ListingStatus.APPROVED),\n      list_quantity: listings.length,\n      usd_value: usdcAmount,\n      ...trace,\n    })\n  }\n\n  // Once all collections have been approved, go to next section and start signing listings\n  useEffect(() => {\n    if (allCollectionsApproved) {\n      signListings()\n      openSection === Section.APPROVE && toggleOpenSection()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [allCollectionsApproved])\n\n  const closeModalOnClick = useCallback(() => {\n    allListingsApproved ? window.location.reload() : overlayClick()\n  }, [allListingsApproved, overlayClick])\n\n  // In the case that a user removes all listings via retry logic, close modal\n  useEffect(() => {\n    !listings.length && closeModalOnClick()\n  }, [listings, closeModalOnClick])\n\n  return (\n    <Portal>\n      <Trace modal={InterfaceModalName.NFT_LISTING}>\n        <ListModalWrapper>\n          {allListingsApproved ? (\n            <SuccessScreen overlayClick={closeModalOnClick} />\n          ) : (\n            <>\n              <TitleRow>\n                <ThemedText.HeadlineSmall lineHeight=\"28px\">\n                  <Trans>List NFTs</Trans>\n                </ThemedText.HeadlineSmall>\n                <X size={24} cursor=\"pointer\" onClick={closeModalOnClick} />\n              </TitleRow>\n              <ListModalSection\n                sectionType={Section.APPROVE}\n                active={openSection === Section.APPROVE}\n                content={collectionsRequiringApproval}\n                toggleSection={toggleOpenSection}\n              />\n              <ListModalSection\n                sectionType={Section.SIGN}\n                active={openSection === Section.SIGN}\n                content={listings}\n                toggleSection={toggleOpenSection}\n              />\n            </>\n          )}\n        </ListModalWrapper>\n      </Trace>\n      <Overlay onClick={closeModalOnClick} />\n    </Portal>\n  )\n}\n","import Column from 'components/Column'\nimport Row from 'components/Row'\nimport { DropDownOption } from 'nft/types'\nimport { Check } from 'react-feather'\nimport styled, { useTheme } from 'styled-components'\nimport { ThemedText } from 'theme/components'\n\nconst DropdownWrapper = styled(Column)<{ $width: number }>`\n  gap: 4px;\n  background: ${({ theme }) => theme.surface1};\n  padding: 8px;\n  width: ${({ $width }) => $width}px;\n  border-radius: 12px;\n  box-shadow: ${({ theme }) => theme.deprecated_deepShadow};\n  border: 1px solid ${({ theme }) => theme.surface3};\n`\n\nconst DropdownRow = styled(Row)`\n  justify-content: space-between;\n  padding: 8px;\n  cursor: pointer;\n  border-radius: 12px;\n\n  &:hover {\n    background: ${({ theme }) => theme.surface3};\n  }\n`\n\ninterface DropdownArgs {\n  dropDownOptions: DropDownOption[]\n  width: number\n}\n\nexport const Dropdown = ({ dropDownOptions, width }: DropdownArgs) => {\n  const theme = useTheme()\n  return (\n    <DropdownWrapper $width={width}>\n      {dropDownOptions.map((option) => (\n        <DropdownRow key={option.displayText} onClick={option.onClick}>\n          <ThemedText.BodyPrimary lineHeight=\"24px\">{option.displayText}</ThemedText.BodyPrimary>\n          {option.isSelected && <Check height={20} width={20} color={theme.accent1} />}\n        </DropdownRow>\n      ))}\n    </DropdownWrapper>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport Column from 'components/Column'\nimport Row from 'components/Row'\nimport { BrokenLinkIcon } from 'nft/components/icons'\nimport { NumericInput } from 'nft/components/layout/Input'\nimport { useUpdateInputAndWarnings } from 'nft/components/profile/list/utils'\nimport { body } from 'nft/css/common.css'\nimport { useSellAsset } from 'nft/hooks'\nimport { WalletAsset } from 'nft/types'\nimport { Dispatch, useRef, useState } from 'react'\nimport { AlertTriangle, Link } from 'react-feather'\nimport styled, { useTheme } from 'styled-components'\nimport { BREAKPOINTS } from 'theme'\nimport { colors } from 'theme/colors'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\n\nimport { WarningType } from './shared'\n\nconst PriceTextInputWrapper = styled(Column)`\n  gap: 12px;\n  position: relative;\n`\n\nconst InputWrapper = styled(Row)<{ borderColor: string }>`\n  height: 48px;\n  color: ${({ theme }) => theme.neutral3};\n  padding: 12px;\n  border: 2px solid;\n  border-radius: 8px;\n  border-color: ${({ borderColor }) => borderColor};\n  margin-right: auto;\n  box-sizing: border-box;\n`\n\nconst CurrencyWrapper = styled.div<{ listPrice?: number }>`\n  color: ${({ listPrice, theme }) => (listPrice ? theme.neutral1 : theme.neutral2)};\n`\n\nconst GlobalPriceIcon = styled.div`\n  display: flex;\n  cursor: pointer;\n  position: absolute;\n  bottom: 32px;\n  right: -10px;\n  background-color: ${({ theme }) => theme.surface1};\n  border-radius: 50%;\n  height: 28px;\n  width: 28px;\n  align-items: center;\n  justify-content: center;\n`\n\nconst WarningRow = styled(Row)`\n  gap: 4px;\n`\n\nconst WarningMessage = styled(Row)<{ $color: string }>`\n  top: 52px;\n  width: max-content;\n  position: absolute;\n  right: 0;\n  font-weight: 535;\n  font-size: 10px;\n  line-height: 12px;\n  color: ${({ $color }) => $color};\n\n  @media screen and (min-width: ${BREAKPOINTS.md}px) {\n    right: unset;\n  }\n`\n\nconst WarningAction = styled.div`\n  cursor: pointer;\n  color: ${({ theme }) => theme.accent1};\n`\n\nconst getWarningMessage = (warning: WarningType) => {\n  let message = <></>\n  switch (warning) {\n    case WarningType.BELOW_FLOOR:\n      message = <Trans>below floor price.</Trans>\n      break\n    case WarningType.ALREADY_LISTED:\n      message = <Trans>Already listed at</Trans>\n      break\n  }\n  return message\n}\n\ninterface PriceTextInputProps {\n  listPrice?: number\n  setListPrice: Dispatch<number | undefined>\n  isGlobalPrice: boolean\n  setGlobalOverride: Dispatch<boolean>\n  globalOverride: boolean\n  asset: WalletAsset\n}\n\nexport const PriceTextInput = ({\n  listPrice,\n  setListPrice,\n  isGlobalPrice,\n  setGlobalOverride,\n  globalOverride,\n  asset,\n}: PriceTextInputProps) => {\n  const { formatNumberOrString, formatDelta } = useFormatter()\n  const [warningType, setWarningType] = useState(WarningType.NONE)\n  const removeSellAsset = useSellAsset((state) => state.removeSellAsset)\n  const showResolveIssues = useSellAsset((state) => state.showResolveIssues)\n  const inputRef = useRef() as React.MutableRefObject<HTMLInputElement>\n  const theme = useTheme()\n\n  const percentBelowFloor = (1 - (listPrice ?? 0) / (asset.floorPrice ?? 0)) * 100\n  const warningColor =\n    (showResolveIssues && !listPrice) ||\n    warningType === WarningType.ALREADY_LISTED ||\n    (warningType === WarningType.BELOW_FLOOR && percentBelowFloor >= 20)\n      ? colors.red400\n      : warningType === WarningType.BELOW_FLOOR\n      ? theme.deprecated_accentWarning\n      : isGlobalPrice || !!listPrice\n      ? theme.accent1\n      : theme.neutral2\n\n  const setPrice = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (!listPrice && event.target.value.includes('.') && parseFloat(event.target.value) === 0) {\n      return\n    }\n    const val = parseFloat(event.target.value)\n    setListPrice(isNaN(val) ? undefined : val)\n  }\n\n  useUpdateInputAndWarnings(setWarningType, inputRef, asset, listPrice)\n\n  return (\n    <PriceTextInputWrapper>\n      <InputWrapper borderColor={warningColor}>\n        <NumericInput\n          as=\"input\"\n          pattern=\"[0-9]\"\n          borderStyle=\"none\"\n          className={body}\n          color={{ placeholder: 'neutral2', default: 'neutral1' }}\n          placeholder=\"0\"\n          backgroundColor=\"none\"\n          width={{ sm: '54', md: '68' }}\n          ref={inputRef}\n          onChange={setPrice}\n        />\n        <CurrencyWrapper listPrice={listPrice}>&nbsp;ETH</CurrencyWrapper>\n        {(isGlobalPrice || globalOverride) && (\n          <GlobalPriceIcon onClick={() => setGlobalOverride(!globalOverride)}>\n            {globalOverride ? <BrokenLinkIcon /> : <Link size={20} color={warningColor} />}\n          </GlobalPriceIcon>\n        )}\n      </InputWrapper>\n      <WarningMessage $color={warningColor}>\n        {warningType !== WarningType.NONE && (\n          <WarningRow>\n            <AlertTriangle height={16} width={16} color={warningColor} />\n            <span>\n              {warningType === WarningType.BELOW_FLOOR && `${formatDelta(percentBelowFloor)} `}\n              {getWarningMessage(warningType)}\n              &nbsp;\n              {warningType === WarningType.ALREADY_LISTED &&\n                `${formatNumberOrString({\n                  input: asset?.floor_sell_order_price ?? 0,\n                  type: NumberType.NFTToken,\n                })} ETH`}\n            </span>\n            <WarningAction\n              onClick={() => {\n                warningType === WarningType.ALREADY_LISTED && removeSellAsset(asset)\n                setWarningType(WarningType.NONE)\n              }}\n            >\n              {warningType === WarningType.BELOW_FLOOR ? <Trans>Dismiss</Trans> : <Trans>Remove item</Trans>}\n            </WarningAction>\n          </WarningRow>\n        )}\n      </WarningMessage>\n    </PriceTextInputWrapper>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport Column from 'components/Column'\nimport Row from 'components/Row'\nimport { getRoyalty } from 'nft/components/profile/list/utils'\nimport { ListingMarket, WalletAsset } from 'nft/types'\nimport { getMarketplaceIcon } from 'nft/utils'\nimport styled, { css } from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\n\nconst FeeWrap = styled(Row)`\n  margin-bottom: 4px;\n  justify-content: space-between;\n`\n\nconst RoyaltyContainer = styled(Column)`\n  gap: 12px;\n  padding: 4px 0px;\n`\n\nconst iconStyles = css`\n  width: 16px;\n  height: 16px;\n  outline: 1px solid ${({ theme }) => theme.surface3};\n  margin-right: 8px;\n`\n\nconst MarketIcon = styled.div`\n  border-radius: 4px;\n  ${iconStyles}\n`\n\nconst CollectionIcon = styled.img`\n  object-fit: cover;\n  border-radius: 50%;\n  ${iconStyles}\n`\n\nconst FeePercent = styled(ThemedText.BodySmall)`\n  line-height: 16px;\n  color: ${({ theme }) => theme.neutral2};\n  white-space: nowrap;\n`\n\nconst MaxFeeContainer = styled(Row)`\n  justify-content: space-between;\n  padding-top: 12px;\n  border-top: 1px solid ${({ theme }) => theme.surface3};\n`\n\nexport const RoyaltyTooltip = ({\n  selectedMarkets,\n  asset,\n  fees,\n}: {\n  selectedMarkets: ListingMarket[]\n  asset: WalletAsset\n  fees?: number\n}) => {\n  const { formatNumberOrString, formatDelta } = useFormatter()\n  const maxRoyalty = Math.max(...selectedMarkets.map((market) => getRoyalty(market, asset) ?? 0))\n  return (\n    <RoyaltyContainer>\n      {selectedMarkets.map((market) => (\n        <FeeWrap key={asset.collection?.address ?? '' + asset.tokenId + market.name + 'fee'}>\n          <Row>\n            <MarketIcon>{getMarketplaceIcon(market.name, '16')}</MarketIcon>\n            <ThemedText.BodySmall lineHeight=\"16px\" marginRight=\"12px\">\n              {market.name}&nbsp;\n              <Trans>fee</Trans>\n            </ThemedText.BodySmall>\n          </Row>\n          <FeePercent>{formatDelta(market.fee)}</FeePercent>\n        </FeeWrap>\n      ))}\n      <FeeWrap>\n        <Row>\n          <CollectionIcon src={asset.collection?.imageUrl} />\n          <ThemedText.BodySmall lineHeight=\"16px\" marginRight=\"12px\">\n            <Trans>Max creator royalties</Trans>\n          </ThemedText.BodySmall>\n        </Row>\n        <FeePercent>{maxRoyalty}%</FeePercent>\n      </FeeWrap>\n      <MaxFeeContainer>\n        <ThemedText.BodySmall lineHeight=\"16px\">\n          <Trans>Max fees</Trans>\n        </ThemedText.BodySmall>\n        <ThemedText.BodySmall lineHeight=\"16px\" color={fees ? 'neutral1' : 'neutral2'}>\n          {fees ? formatNumberOrString({ input: fees, type: NumberType.NFTToken }) : '-'} ETH\n        </ThemedText.BodySmall>\n      </MaxFeeContainer>\n    </RoyaltyContainer>\n  )\n}\n","import { t } from '@lingui/macro'\nimport Column from 'components/Column'\nimport Row from 'components/Row'\nimport { MouseoverTooltip } from 'components/Tooltip'\nimport { RowsCollpsedIcon, RowsExpandedIcon } from 'nft/components/icons'\nimport { getRoyalty, useHandleGlobalPriceToggle, useSyncPriceWithGlobalMethod } from 'nft/components/profile/list/utils'\nimport { useSellAsset } from 'nft/hooks'\nimport { useNativeUsdPrice } from 'nft/hooks/useUsdPrice'\nimport { ListingMarket, WalletAsset } from 'nft/types'\nimport { getMarketplaceIcon } from 'nft/utils'\nimport { Dispatch, DispatchWithoutAction, useCallback, useEffect, useMemo, useReducer, useState } from 'react'\nimport styled from 'styled-components'\nimport { BREAKPOINTS } from 'theme'\nimport { ThemedText } from 'theme/components'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\n\nimport { PriceTextInput } from './PriceTextInput'\nimport { RoyaltyTooltip } from './RoyaltyTooltip'\nimport { RemoveIconWrap, SetPriceMethod } from './shared'\n\nconst LastPriceInfo = styled(Column)`\n  text-align: left;\n  display: none;\n  flex: 1;\n\n  @media screen and (min-width: ${BREAKPOINTS.lg}px) {\n    display: flex;\n  }\n`\n\nconst FloorPriceInfo = styled(Column)`\n  text-align: left;\n  display: none;\n  flex: 1;\n\n  @media screen and (min-width: ${BREAKPOINTS.md}px) {\n    display: flex;\n  }\n`\n\nconst RemoveMarketplaceWrap = styled(RemoveIconWrap)`\n  top: 8px;\n  left: 16px;\n  z-index: 3;\n`\n\nconst MarketIconsWrapper = styled(Row)`\n  position: relative;\n  margin-right: 12px;\n  width: 44px;\n  justify-content: flex-end;\n\n  @media screen and (max-width: ${BREAKPOINTS.sm}px) {\n    display: none;\n  }\n`\n\nconst MarketIconWrapper = styled(Column)`\n  position: relative;\n  cursor: pointer;\n`\n\nconst MarketIcon = styled.div<{ index: number }>`\n  width: 20px;\n  height: 20px;\n  border-radius: 4px;\n  z-index: ${({ index }) => 2 - index};\n  margin-left: ${({ index }) => `${index === 0 ? 0 : -8}px`};\n  outline: 1px solid ${({ theme }) => theme.surface3};\n`\n\nconst ExpandMarketIconWrapper = styled.div`\n  cursor: pointer;\n  margin-left: 4px;\n  height: 28px;\n\n  @media screen and (max-width: ${BREAKPOINTS.sm}px) {\n    display: none;\n  }\n`\n\nconst FeeColumnWrapper = styled(Column)`\n  flex: 1;\n  align-items: flex-end;\n  display: none;\n\n  @media screen and (min-width: ${BREAKPOINTS.md}px) {\n    display: flex;\n  }\n`\n\nconst FeeWrapper = styled.div`\n  width: min-content;\n  white-space: nowrap;\n`\n\nconst ReturnColumn = styled(Column)`\n  flex: 1.5;\n  display: none;\n\n  @media screen and (min-width: ${BREAKPOINTS.md}px) {\n    display: flex;\n  }\n`\n\ninterface MarketplaceRowProps {\n  globalPriceMethod?: SetPriceMethod\n  globalPrice?: number\n  setGlobalPrice: Dispatch<number | undefined>\n  selectedMarkets: ListingMarket[]\n  removeMarket?: () => void\n  asset: WalletAsset\n  expandMarketplaceRows?: boolean\n  rowHovered?: boolean\n  toggleExpandMarketplaceRows: DispatchWithoutAction\n}\n\nexport const MarketplaceRow = ({\n  globalPriceMethod,\n  globalPrice,\n  setGlobalPrice,\n  selectedMarkets,\n  removeMarket = undefined,\n  asset,\n  expandMarketplaceRows,\n  toggleExpandMarketplaceRows,\n  rowHovered,\n}: MarketplaceRowProps) => {\n  const { formatNumberOrString, formatDelta } = useFormatter()\n  const setAssetListPrice = useSellAsset((state) => state.setAssetListPrice)\n  const removeAssetMarketplace = useSellAsset((state) => state.removeAssetMarketplace)\n  const [marketIconHovered, toggleMarketIconHovered] = useReducer((s) => !s, false)\n  const [marketRowHovered, toggleMarketRowHovered] = useReducer((s) => !s, false)\n  const [listPrice, setListPrice] = useState<number | undefined>(\n    () =>\n      asset.newListings?.find((listing) =>\n        expandMarketplaceRows ? listing.marketplace.name === selectedMarkets?.[0].name : !!listing.price\n      )?.price\n  )\n  const [globalOverride, setGlobalOverride] = useState(false)\n\n  const showGlobalPrice = globalPriceMethod === SetPriceMethod.SAME_PRICE && !globalOverride\n  const price = showGlobalPrice ? globalPrice : listPrice\n  const setPrice = useCallback(\n    (price?: number) => {\n      showGlobalPrice ? setGlobalPrice(price) : setListPrice(price)\n      for (const marketplace of selectedMarkets) setAssetListPrice(asset, price, marketplace)\n    },\n    [asset, selectedMarkets, setAssetListPrice, setGlobalPrice, showGlobalPrice]\n  )\n\n  const fees = useMemo(() => {\n    let maxFee = 0\n    for (const selectedMarket of selectedMarkets) {\n      const fee = getRoyalty(selectedMarket, asset) + selectedMarket.fee\n      maxFee = Math.max(fee, maxFee)\n    }\n\n    return maxFee\n  }, [asset, selectedMarkets])\n\n  const feeInEth = price && (price * fees) / 100\n  const userReceives = price && feeInEth && price - feeInEth\n\n  useHandleGlobalPriceToggle(globalOverride, setListPrice, setPrice, listPrice, globalPrice)\n  useSyncPriceWithGlobalMethod(\n    asset,\n    setListPrice,\n    setGlobalPrice,\n    setGlobalOverride,\n    listPrice,\n    globalPrice,\n    globalPriceMethod\n  )\n\n  // When in Same Price Mode and not overriding, update local price when global price changes\n  useEffect(() => {\n    if (showGlobalPrice) {\n      setPrice(globalPrice)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [globalPrice])\n\n  return (\n    <Row onMouseEnter={toggleMarketRowHovered} onMouseLeave={toggleMarketRowHovered}>\n      <FloorPriceInfo>\n        <ThemedText.BodyPrimary color=\"neutral2\" lineHeight=\"24px\">\n          {formatNumberOrString({\n            input: asset.floorPrice,\n            type: NumberType.NFTToken,\n          }) + asset.floorPrice\n            ? ' ETH'\n            : ''}\n        </ThemedText.BodyPrimary>\n      </FloorPriceInfo>\n      <LastPriceInfo>\n        <ThemedText.BodyPrimary color=\"neutral2\" lineHeight=\"24px\">\n          {asset.lastPrice ? `${formatNumberOrString({ input: asset.lastPrice, type: NumberType.NFTToken })} ETH` : '-'}\n        </ThemedText.BodyPrimary>\n      </LastPriceInfo>\n\n      <Row flex=\"2\">\n        {(expandMarketplaceRows || selectedMarkets.length > 1) && (\n          <MarketIconsWrapper onMouseEnter={toggleMarketIconHovered} onMouseLeave={toggleMarketIconHovered}>\n            {selectedMarkets.map((market, index) => (\n              <MarketIconWrapper\n                key={market.name + asset.collection?.address + asset.tokenId}\n                onClick={(e) => {\n                  e.stopPropagation()\n                  removeAssetMarketplace(asset, market)\n                  removeMarket && removeMarket()\n                }}\n              >\n                <MarketIcon index={index}>{getMarketplaceIcon(market.name, '20')}</MarketIcon>\n                <RemoveMarketplaceWrap hovered={marketIconHovered && (expandMarketplaceRows ?? false)}>\n                  <img width=\"20px\" src=\"/nft/svgs/minusCircle.svg\" alt=\"Remove item\" />\n                </RemoveMarketplaceWrap>\n              </MarketIconWrapper>\n            ))}\n          </MarketIconsWrapper>\n        )}\n        <PriceTextInput\n          listPrice={price}\n          setListPrice={setPrice}\n          isGlobalPrice={showGlobalPrice}\n          setGlobalOverride={setGlobalOverride}\n          globalOverride={globalOverride}\n          asset={asset}\n        />\n        {rowHovered && ((expandMarketplaceRows && marketRowHovered) || selectedMarkets.length > 1) && (\n          <ExpandMarketIconWrapper onClick={toggleExpandMarketplaceRows}>\n            {expandMarketplaceRows ? <RowsExpandedIcon /> : <RowsCollpsedIcon />}\n          </ExpandMarketIconWrapper>\n        )}\n      </Row>\n\n      <FeeColumnWrapper>\n        <MouseoverTooltip\n          text={<RoyaltyTooltip selectedMarkets={selectedMarkets} asset={asset} fees={feeInEth} />}\n          placement=\"left\"\n        >\n          <FeeWrapper>\n            <ThemedText.BodyPrimary color=\"neutral2\">\n              {fees > 0 ? `${formatDelta(fees)}${selectedMarkets.length > 1 ? t`max` : ''}` : '--%'}\n            </ThemedText.BodyPrimary>\n          </FeeWrapper>\n        </MouseoverTooltip>\n      </FeeColumnWrapper>\n\n      <ReturnColumn>\n        <EthPriceDisplay ethPrice={userReceives} />\n      </ReturnColumn>\n    </Row>\n  )\n}\n\nconst EthPriceDisplay = ({ ethPrice = 0 }: { ethPrice?: number }) => {\n  const { formatNumberOrString } = useFormatter()\n  const ethUsdPrice = useNativeUsdPrice()\n\n  return (\n    <Row width=\"100%\" justify=\"flex-end\">\n      <ThemedText.BodyPrimary lineHeight=\"24px\" color={ethPrice ? 'neutral1' : 'neutral2'} textAlign=\"right\">\n        {ethPrice !== 0 ? (\n          <Column>\n            <span>{formatNumberOrString({ input: ethPrice, type: NumberType.NFTToken })} ETH</span>\n            <ThemedText.BodyPrimary color=\"neutral2\">\n              {formatNumberOrString({ input: ethPrice * ethUsdPrice, type: NumberType.FiatNFTToken })}\n            </ThemedText.BodyPrimary>\n          </Column>\n        ) : (\n          '- ETH'\n        )}\n      </ThemedText.BodyPrimary>\n    </Row>\n  )\n}\n","import Column from 'components/Column'\nimport Row from 'components/Row'\nimport { VerifiedIcon } from 'nft/components/icons'\nimport { useSellAsset } from 'nft/hooks'\nimport { ListingMarket, WalletAsset } from 'nft/types'\nimport { Dispatch, useEffect, useReducer, useState } from 'react'\nimport { Trash2 } from 'react-feather'\nimport styled, { css, useTheme } from 'styled-components'\nimport { BREAKPOINTS } from 'theme'\nimport { ThemedText } from 'theme/components'\n\nimport { MarketplaceRow } from './MarketplaceRow'\nimport { SetPriceMethod } from './shared'\n\nconst IMAGE_THUMBNAIL_SIZE = 60\n\nconst NFTListRowWrapper = styled(Row)`\n  padding: 24px 0px;\n  align-items: center;\n  border-radius: 8px;\n\n  &:hover {\n    background: ${({ theme }) => theme.surface3};\n  }\n`\n\nconst RemoveIconContainer = styled.div`\n  width: ${IMAGE_THUMBNAIL_SIZE}px;\n  height: ${IMAGE_THUMBNAIL_SIZE}px;\n  padding-left: 12px;\n  align-self: flex-start;\n  align-items: center;\n  display: flex;\n\n  @media screen and (max-width: ${BREAKPOINTS.sm}px) {\n    display: none;\n  }\n\n  &:hover {\n    opacity: ${({ theme }) => theme.opacity.hover};\n  }\n`\n\nconst NFTInfoWrapper = styled(Row)`\n  align-items: center;\n  min-width: 0px;\n  flex: 2;\n  margin-bottom: auto;\n\n  @media screen and (min-width: ${BREAKPOINTS.md}px) {\n    flex: 1.5;\n  }\n`\n\nconst NFTImage = styled.img`\n  width: ${IMAGE_THUMBNAIL_SIZE}px;\n  height: ${IMAGE_THUMBNAIL_SIZE}px;\n  border-radius: 8px;\n  margin-right: 8px;\n`\n\nconst HideTextOverflow = css`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`\n\nconst TokenInfoWrapper = styled(Column)`\n  margin-right: 8px;\n  min-width: 0px;\n`\n\nconst TokenName = styled.div`\n  font-weight: 535;\n  font-size: 16px;\n  line-height: 24px;\n  ${HideTextOverflow}\n`\n\nconst CollectionName = styled(ThemedText.BodySmall)`\n  color: ${({ theme }) => theme.neutral2};\n  line-height: 20px;\n  ${HideTextOverflow};\n`\n\nconst MarketPlaceRowWrapper = styled(Column)`\n  gap: 24px;\n  flex: 1.5;\n  margin-right: 12px;\n  padding: 6px 0px;\n\n  @media screen and (min-width: ${BREAKPOINTS.md}px) {\n    flex: 2;\n  }\n\n  @media screen and (min-width: ${BREAKPOINTS.md}px) {\n    flex: 3;\n  }\n`\n\ninterface NFTListRowProps {\n  asset: WalletAsset\n  globalPriceMethod?: SetPriceMethod\n  setGlobalPrice: Dispatch<number | undefined>\n  globalPrice?: number\n  selectedMarkets: ListingMarket[]\n}\n\n/**\n * NFTListRow is the outermost row wrapper for an NFT Listing, which shows either the composite of multiple marketplaces listings\n * or can be expanded to show listings per marketplace\n */\nexport const NFTListRow = ({\n  asset,\n  globalPriceMethod,\n  globalPrice,\n  setGlobalPrice,\n  selectedMarkets,\n}: NFTListRowProps) => {\n  const [expandMarketplaceRows, toggleExpandMarketplaceRows] = useReducer((s) => !s, false)\n  const removeAsset = useSellAsset((state) => state.removeSellAsset)\n  const [localMarkets, setLocalMarkets] = useState<ListingMarket[]>([])\n  const [hovered, toggleHovered] = useReducer((s) => !s, false)\n  const theme = useTheme()\n\n  // Keep localMarkets up to date with changes to globalMarkets\n  useEffect(() => {\n    setLocalMarkets(JSON.parse(JSON.stringify(selectedMarkets)))\n  }, [selectedMarkets])\n\n  return (\n    <NFTListRowWrapper\n      onMouseEnter={() => {\n        !hovered && toggleHovered()\n      }}\n      onMouseLeave={() => {\n        hovered && toggleHovered()\n      }}\n    >\n      <RemoveIconContainer>\n        {hovered && (\n          <Trash2\n            size={20}\n            color={theme.neutral2}\n            cursor=\"pointer\"\n            onClick={() => {\n              removeAsset(asset)\n            }}\n          />\n        )}\n      </RemoveIconContainer>\n\n      <NFTInfoWrapper>\n        <NFTImage alt={asset.name} src={asset.imageUrl || '/nft/svgs/image-placeholder.svg'} />\n        <TokenInfoWrapper>\n          <TokenName>{asset.name ? asset.name : `#${asset.tokenId}`}</TokenName>\n          <CollectionName>\n            {asset.collection?.name}\n            {asset.collectionIsVerified && <VerifiedIcon style={{ marginBottom: '-5px' }} />}\n          </CollectionName>\n        </TokenInfoWrapper>\n      </NFTInfoWrapper>\n      <MarketPlaceRowWrapper>\n        {expandMarketplaceRows && localMarkets.length > 1 ? (\n          localMarkets.map((market) => {\n            return (\n              <MarketplaceRow\n                globalPriceMethod={globalPriceMethod}\n                globalPrice={globalPrice}\n                setGlobalPrice={setGlobalPrice}\n                selectedMarkets={[market]}\n                removeMarket={() => setLocalMarkets(localMarkets.filter((oldMarket) => oldMarket.name !== market.name))}\n                asset={asset}\n                key={asset.name + market.name}\n                expandMarketplaceRows={expandMarketplaceRows}\n                rowHovered={hovered}\n                toggleExpandMarketplaceRows={toggleExpandMarketplaceRows}\n              />\n            )\n          })\n        ) : (\n          <MarketplaceRow\n            globalPriceMethod={globalPriceMethod}\n            globalPrice={globalPrice}\n            setGlobalPrice={setGlobalPrice}\n            selectedMarkets={localMarkets}\n            asset={asset}\n            rowHovered={hovered}\n            toggleExpandMarketplaceRows={toggleExpandMarketplaceRows}\n          />\n        )}\n      </MarketPlaceRowWrapper>\n    </NFTListRowWrapper>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport Column from 'components/Column'\nimport Row from 'components/Row'\nimport { useOnClickOutside } from 'hooks/useOnClickOutside'\nimport { useSellAsset } from 'nft/hooks'\nimport { DropDownOption, ListingMarket } from 'nft/types'\nimport { useMemo, useReducer, useRef, useState } from 'react'\nimport { ChevronDown } from 'react-feather'\nimport styled, { css } from 'styled-components'\nimport { BREAKPOINTS } from 'theme'\n\nimport { Dropdown } from './Dropdown'\nimport { NFTListRow } from './NFTListRow'\nimport { SetPriceMethod } from './shared'\n\nconst TableHeader = styled.div`\n  display: flex;\n  position: sticky;\n  align-items: center;\n  top: 72px;\n  padding-top: 24px;\n  padding-bottom: 24px;\n  z-index: 3;\n  background-color: ${({ theme }) => theme.surface2};\n  color: ${({ theme }) => theme.neutral2};\n  font-size: 14px;\n  font-weight: normal;\n  line-height: 20px;\n  border-radius: 12px;\n\n  @media screen and (min-width: ${BREAKPOINTS.sm}px) {\n    padding-left: 48px;\n  }\n`\n\nconst NFTHeader = styled.div`\n  flex: 2;\n\n  @media screen and (min-width: ${BREAKPOINTS.md}px) {\n    flex: 1.5;\n  }\n`\n\nconst PriceHeaders = styled(Row)`\n  flex: 1.5;\n  margin-right: 12px;\n\n  @media screen and (min-width: ${BREAKPOINTS.md}px) {\n    flex: 3;\n  }\n`\n\nconst LastPriceHeader = styled.div`\n  display: none;\n  flex: 1;\n\n  @media screen and (min-width: ${BREAKPOINTS.lg}px) {\n    display: flex;\n  }\n`\n\nconst FloorPriceHeader = styled.div`\n  display: none;\n  flex: 1;\n\n  @media screen and (min-width: ${BREAKPOINTS.md}px) {\n    display: flex;\n  }\n`\n\nconst DropdownAndHeaderWrapper = styled(Row)`\n  flex: 2;\n  gap: 4px;\n`\n\nconst DropdownPromptContainer = styled(Column)`\n  position: relative;\n  @media screen and (max-width: ${BREAKPOINTS.sm}px) {\n    display: none;\n  }\n`\n\nconst DropdownPrompt = styled(Row)`\n  gap: 4px;\n  background-color: ${({ theme }) => theme.surface3};\n  cursor: pointer;\n  font-weight: 535;\n  font-size: 12px;\n  line-height: 16px;\n  border-radius: 4px;\n  padding: 2px 6px;\n  width: min-content;\n  white-space: nowrap;\n  color: ${({ theme }) => theme.neutral1};\n\n  &:hover {\n    opacity: ${({ theme }) => theme.opacity.hover};\n  }\n`\n\nconst DropdownChevron = styled(ChevronDown)<{ isOpen: boolean }>`\n  height: 16px;\n  width: 16px;\n  color: ${({ theme }) => theme.neutral2};\n  transform: ${({ isOpen }) => isOpen && 'rotate(180deg)'};\n  transition: ${({\n    theme: {\n      transition: { duration, timing },\n    },\n  }) => `transform ${duration.fast} ${timing.ease}`};\n`\n\nconst DropdownContainer = styled.div`\n  position: absolute;\n  top: 36px;\n  right: 0px;\n`\n\nconst FeeUserReceivesSharedStyles = css`\n  display: none;\n  justify-content: flex-end;\n  @media screen and (min-width: ${BREAKPOINTS.md}px) {\n    display: flex;\n  }\n`\n\nconst FeeHeader = styled.div`\n  flex: 1;\n  ${FeeUserReceivesSharedStyles}\n`\n\nconst UserReceivesHeader = styled.div`\n  flex: 1.5;\n  ${FeeUserReceivesSharedStyles}\n`\n\nconst RowDivider = styled.hr`\n  height: 0px;\n  width: 100%;\n  border-radius: 20px;\n  border-width: 0.5px;\n  border-style: solid;\n  margin: 0;\n  border-color: ${({ theme }) => theme.surface3};\n`\n\nexport const NFTListingsGrid = ({ selectedMarkets }: { selectedMarkets: ListingMarket[] }) => {\n  const sellAssets = useSellAsset((state) => state.sellAssets)\n  const [globalPriceMethod, setGlobalPriceMethod] = useState(SetPriceMethod.CUSTOM)\n  const [globalPrice, setGlobalPrice] = useState<number>()\n  const [showDropdown, toggleShowDropdown] = useReducer((s) => !s, false)\n  const dropdownRef = useRef<HTMLDivElement>(null)\n  useOnClickOutside(dropdownRef, showDropdown ? toggleShowDropdown : undefined)\n\n  const priceDropdownOptions: DropDownOption[] = useMemo(\n    () => [\n      {\n        displayText: 'Custom',\n        isSelected: globalPriceMethod === SetPriceMethod.CUSTOM,\n        onClick: () => {\n          setGlobalPriceMethod(SetPriceMethod.CUSTOM)\n          toggleShowDropdown()\n        },\n      },\n      {\n        displayText: 'Floor price',\n        isSelected: globalPriceMethod === SetPriceMethod.FLOOR_PRICE,\n        onClick: () => {\n          setGlobalPriceMethod(SetPriceMethod.FLOOR_PRICE)\n          toggleShowDropdown()\n        },\n      },\n      {\n        displayText: 'Last price',\n        isSelected: globalPriceMethod === SetPriceMethod.LAST_PRICE,\n        onClick: () => {\n          setGlobalPriceMethod(SetPriceMethod.LAST_PRICE)\n          toggleShowDropdown()\n        },\n      },\n      {\n        displayText: 'Same price',\n        isSelected: globalPriceMethod === SetPriceMethod.SAME_PRICE,\n        onClick: () => {\n          setGlobalPriceMethod(SetPriceMethod.SAME_PRICE)\n          toggleShowDropdown()\n        },\n      },\n    ],\n    [globalPriceMethod]\n  )\n\n  let prompt\n  switch (globalPriceMethod) {\n    case SetPriceMethod.CUSTOM:\n      prompt = <Trans>Custom</Trans>\n      break\n    case SetPriceMethod.FLOOR_PRICE:\n      prompt = <Trans>Floor price</Trans>\n      break\n    case SetPriceMethod.LAST_PRICE:\n      prompt = <Trans>Last price</Trans>\n      break\n    case SetPriceMethod.SAME_PRICE:\n      prompt = <Trans>Same price</Trans>\n      break\n    default:\n      break\n  }\n\n  return (\n    <Column>\n      <TableHeader>\n        <NFTHeader>\n          <Trans>NFT</Trans>\n        </NFTHeader>\n        <PriceHeaders>\n          <FloorPriceHeader>\n            <Trans>Floor</Trans>\n          </FloorPriceHeader>\n          <LastPriceHeader>\n            <Trans>Last</Trans>\n          </LastPriceHeader>\n\n          <DropdownAndHeaderWrapper ref={dropdownRef}>\n            <Trans>Price</Trans>\n            <DropdownPromptContainer>\n              <DropdownPrompt onClick={toggleShowDropdown}>\n                {prompt} <DropdownChevron isOpen={showDropdown} />\n              </DropdownPrompt>\n              {showDropdown && (\n                <DropdownContainer>\n                  <Dropdown dropDownOptions={priceDropdownOptions} width={200} />\n                </DropdownContainer>\n              )}\n            </DropdownPromptContainer>\n          </DropdownAndHeaderWrapper>\n\n          <FeeHeader>\n            <Trans>Fees</Trans>\n          </FeeHeader>\n          <UserReceivesHeader>\n            <Trans>You receive</Trans>\n          </UserReceivesHeader>\n        </PriceHeaders>\n      </TableHeader>\n      {sellAssets.map((asset) => {\n        return (\n          <>\n            <NFTListRow\n              asset={asset}\n              globalPriceMethod={globalPriceMethod}\n              globalPrice={globalPrice}\n              setGlobalPrice={setGlobalPrice}\n              selectedMarkets={selectedMarkets}\n            />\n            {sellAssets.indexOf(asset) < sellAssets.length - 1 && <RowDivider />}\n          </>\n        )\n      })}\n    </Column>\n  )\n}\n","import { SMALL_MEDIA_BREAKPOINT } from 'components/Tokens/constants'\nimport { useOnClickOutside } from 'hooks/useOnClickOutside'\nimport { Column, Row } from 'nft/components/Flex'\nimport { ChevronUpIcon } from 'nft/components/icons'\nimport { Checkbox } from 'nft/components/layout/Checkbox'\nimport { buttonTextMedium, caption } from 'nft/css/common.css'\nimport { themeVars } from 'nft/css/sprinkles.css'\nimport { ListingMarket } from 'nft/types'\nimport { getMarketplaceIcon } from 'nft/utils'\nimport { ListingMarkets } from 'nft/utils/listNfts'\nimport { Dispatch, FormEvent, useMemo, useReducer, useRef } from 'react'\nimport styled from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { Z_INDEX } from 'theme/zIndex'\n\nconst MarketplaceRowWrapper = styled(Row)`\n  gap: 6px;\n  height: 44px;\n  width: 100%;\n  cursor: pointer;\n  justify-content: space-between;\n  padding: 0px 16px;\n  &:hover {\n    background-color: ${({ theme }) => theme.surface3};\n  }\n  border-radius: 12px;\n`\n\nconst FeeText = styled.div`\n  color: ${({ theme }) => theme.neutral2};\n`\n\ninterface MarketplaceRowProps {\n  market: ListingMarket\n  setSelectedMarkets: Dispatch<ListingMarket[]>\n  selectedMarkets: ListingMarket[]\n}\n\nconst MarketplaceRow = ({ market, setSelectedMarkets, selectedMarkets }: MarketplaceRowProps) => {\n  const isSelected = selectedMarkets.includes(market)\n  const [hovered, toggleHovered] = useReducer((s) => !s, false)\n\n  const toggleSelected = () => {\n    if (selectedMarkets.length === 1 && isSelected) return\n    isSelected\n      ? setSelectedMarkets(selectedMarkets.filter((selected: ListingMarket) => selected !== market))\n      : setSelectedMarkets([...selectedMarkets, market])\n  }\n\n  const handleCheckbox = (e: FormEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n  }\n  return (\n    <MarketplaceRowWrapper onMouseEnter={toggleHovered} onMouseLeave={toggleHovered} onClick={toggleSelected}>\n      <Row gap=\"12\" onClick={toggleSelected}>\n        {getMarketplaceIcon(market.name, '24')}\n        <Column>\n          <ThemedText.BodyPrimary>{market.name}</ThemedText.BodyPrimary>\n          <FeeText className={caption}>{market.fee}% fee</FeeText>\n        </Column>\n      </Row>\n\n      <Checkbox hovered={hovered} checked={isSelected} onClick={handleCheckbox}>\n        <span />\n      </Checkbox>\n    </MarketplaceRowWrapper>\n  )\n}\n\nconst HeaderButtonWrap = styled(Row)`\n  padding: 12px;\n  border-radius: 12px;\n  width: 180px;\n  justify-content: space-between;\n  background: ${({ theme }) => theme.surface3};\n  cursor: pointer;\n  &:hover {\n    opacity: ${({ theme }) => theme.opacity.hover};\n  }\n  @media screen and (min-width: ${SMALL_MEDIA_BREAKPOINT}) {\n    width: 220px;\n  }\n`\n\nconst HeaderButtonContentWrapper = styled.div`\n  display: flex;\n`\n\nconst MarketIcon = styled.div<{ index: number; totalSelected: number }>`\n  height: 20px;\n  width: 20px;\n  margin-right: 8px;\n  outline: 1px solid ${({ theme }) => theme.surface3};\n  border-radius: 4px;\n  z-index: ${({ index, totalSelected }) => totalSelected - index};\n  margin-left: ${({ index }) => `${index === 0 ? 0 : -18}px`};\n`\n\nconst Chevron = styled(ChevronUpIcon)<{ isOpen: boolean }>`\n  height: 20px;\n  width: 20px;\n  fill: ${({ theme }) => theme.neutral1};\n  transition: ${({\n    theme: {\n      transition: { duration },\n    },\n  }) => `${duration.fast} transform`};\n  transform: ${({ isOpen }) => `rotate(${isOpen ? 0 : 180}deg)`};\n`\n\nconst ModalWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`\n\nconst DropdownWrapper = styled(Column)<{ isOpen: boolean }>`\n  padding: 16px 0px;\n  background-color: ${({ theme }) => theme.surface1};\n  display: ${({ isOpen }) => (isOpen ? 'flex' : 'none')};\n  position: absolute;\n  top: 52px;\n  width: 100%;\n  border-radius: 12px;\n  gap: 12px;\n  z-index: ${Z_INDEX.modalBackdrop};\n  box-shadow: ${({ theme }) => theme.deprecated_deepShadow};\n  border: 0.5px solid ${({ theme }) => theme.surface3};\n`\n\nexport const SelectMarketplacesDropdown = ({\n  setSelectedMarkets,\n  selectedMarkets,\n}: {\n  setSelectedMarkets: Dispatch<ListingMarket[]>\n  selectedMarkets: ListingMarket[]\n}) => {\n  const [isOpen, toggleIsOpen] = useReducer((s) => !s, false)\n  const dropdownDisplayText = useMemo(\n    () => (selectedMarkets.length === 1 ? selectedMarkets[0].name : 'Multiple'),\n    [selectedMarkets]\n  )\n  const ref = useRef<HTMLDivElement>(null)\n  useOnClickOutside(ref, () => isOpen && toggleIsOpen())\n  return (\n    <ModalWrapper ref={ref}>\n      <HeaderButtonWrap className={buttonTextMedium} onClick={toggleIsOpen}>\n        <HeaderButtonContentWrapper>\n          {selectedMarkets.map((market, index) => {\n            return (\n              <MarketIcon key={index} totalSelected={selectedMarkets.length} index={index}>\n                {getMarketplaceIcon(market.name, '20')}\n              </MarketIcon>\n            )\n          })}\n          {dropdownDisplayText}\n        </HeaderButtonContentWrapper>\n\n        <Chevron isOpen={isOpen} secondaryColor={themeVars.colors.neutral1} />\n      </HeaderButtonWrap>\n      <DropdownWrapper isOpen={isOpen}>\n        {ListingMarkets.map((market) => {\n          return MarketplaceRow({ market, setSelectedMarkets, selectedMarkets })\n        })}\n      </DropdownWrapper>\n    </ModalWrapper>\n  )\n}\n","import { Plural } from '@lingui/macro'\nimport { useOnClickOutside } from 'hooks/useOnClickOutside'\nimport ms from 'ms'\nimport { Column, Row } from 'nft/components/Flex'\nimport { NumericInput } from 'nft/components/layout/Input'\nimport { body, caption } from 'nft/css/common.css'\nimport { useSellAsset } from 'nft/hooks'\nimport { DropDownOption } from 'nft/types'\nimport { useEffect, useMemo, useReducer, useRef, useState } from 'react'\nimport { AlertTriangle, ChevronDown } from 'react-feather'\nimport styled from 'styled-components'\nimport { Z_INDEX } from 'theme/zIndex'\n\nimport { Dropdown } from './Dropdown'\n\nconst ModalWrapper = styled(Column)`\n  gap: 4px;\n  position: relative;\n`\n\nconst InputWrapper = styled(Row)<{ isInvalid: boolean }>`\n  padding: 6px 6px 6px 12px;\n  border: 1px solid;\n  position: relative;\n  height: 44px;\n  border-radius: 8px;\n  border-color: ${({ isInvalid, theme }) => (isInvalid ? theme.critical : theme.surface3)};\n  width: 160px;\n  justify-content: space-between;\n`\n\nconst DropdownPrompt = styled(Row)`\n  gap: 4px;\n  background-color: ${({ theme }) => theme.surface3};\n  cursor: pointer;\n  font-weight: 535;\n  font-size: 14px;\n  line-height: 16px;\n  border-radius: 8px;\n  padding: 6px 4px 6px 8px;\n  white-space: nowrap;\n  color: ${({ theme }) => theme.neutral1};\n\n  &:hover {\n    opacity: ${({ theme }) => theme.opacity.hover};\n  }\n`\n\nconst DropdownChevron = styled(ChevronDown)<{ isOpen: boolean }>`\n  height: 20px;\n  width: 20px;\n  color: ${({ theme }) => theme.neutral2};\n  transform: ${({ isOpen }) => isOpen && 'rotate(180deg)'};\n  transition: ${({\n    theme: {\n      transition: { duration, timing },\n    },\n  }) => `transform ${duration.fast} ${timing.ease}`};\n`\n\nconst DropdownContainer = styled.div`\n  position: absolute;\n  top: 48px;\n  right: 0px;\n  z-index: ${Z_INDEX.dropdown};\n`\n\nconst ErrorMessage = styled(Row)`\n  color: ${({ theme }) => theme.critical};\n  gap: 4px;\n  position: absolute;\n  top: 44px;\n  white-space: nowrap;\n`\n\nconst WarningIcon = styled(AlertTriangle)`\n  width: 16px;\n  color: ${({ theme }) => theme.critical};\n`\n\nenum Duration {\n  hour = 'hour',\n  day = 'day',\n  week = 'week',\n  month = 'month',\n}\n\nenum ErrorState {\n  valid,\n  empty,\n  overMax,\n}\n\nexport const SetDurationModal = () => {\n  const [duration, setDuration] = useState(Duration.day)\n  const [amount, setAmount] = useState('7')\n  const [errorState, setErrorState] = useState(ErrorState.valid)\n  const setGlobalExpiration = useSellAsset((state) => state.setGlobalExpiration)\n  const [showDropdown, toggleShowDropdown] = useReducer((s) => !s, false)\n  const durationDropdownRef = useRef<HTMLDivElement>(null)\n  useOnClickOutside(durationDropdownRef, showDropdown ? toggleShowDropdown : undefined)\n\n  const setCustomExpiration = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setAmount(event.target.value.length ? event.target.value : '')\n  }\n\n  const durationOptions: DropDownOption[] = useMemo(\n    () => [\n      {\n        displayText: 'hours',\n        isSelected: duration === Duration.hour,\n        onClick: () => {\n          setDuration(Duration.hour)\n          toggleShowDropdown()\n        },\n      },\n      {\n        displayText: 'days',\n        isSelected: duration === Duration.day,\n        onClick: () => {\n          setDuration(Duration.day)\n          toggleShowDropdown()\n        },\n      },\n      {\n        displayText: 'weeks',\n        isSelected: duration === Duration.week,\n        onClick: () => {\n          setDuration(Duration.week)\n          toggleShowDropdown()\n        },\n      },\n      {\n        displayText: 'months',\n        isSelected: duration === Duration.month,\n        onClick: () => {\n          setDuration(Duration.month)\n          toggleShowDropdown()\n        },\n      },\n    ],\n    [duration]\n  )\n\n  let prompt\n  switch (duration) {\n    case Duration.hour:\n      prompt = <Plural value={amount} _1=\"hour\" other=\"hours\" />\n      break\n    case Duration.day:\n      prompt = <Plural value={amount} _1=\"day\" other=\"days\" />\n      break\n    case Duration.week:\n      prompt = <Plural value={amount} _1=\"week\" other=\"weeks\" />\n      break\n    case Duration.month:\n      prompt = <Plural value={amount} _1=\"month\" other=\"months\" />\n      break\n    default:\n      break\n  }\n\n  useEffect(() => {\n    const expiration = convertDurationToExpiration(parseFloat(amount), duration)\n\n    if (expiration * 1000 - Date.now() < ms(`60s`) || isNaN(expiration)) setErrorState(ErrorState.empty)\n    else if (expiration * 1000 - Date.now() > ms(`180d`)) setErrorState(ErrorState.overMax)\n    else setErrorState(ErrorState.valid)\n    setGlobalExpiration(expiration)\n  }, [amount, duration, setGlobalExpiration])\n\n  return (\n    <ModalWrapper ref={durationDropdownRef}>\n      <InputWrapper isInvalid={errorState !== ErrorState.valid}>\n        <NumericInput\n          as=\"input\"\n          type=\"number\"\n          pattern=\"[0-9]\"\n          borderStyle=\"none\"\n          className={body}\n          color={{ placeholder: 'neutral2', default: 'neutral1' }}\n          value={amount}\n          width=\"40\"\n          marginRight=\"4\"\n          backgroundColor=\"none\"\n          onChange={setCustomExpiration}\n          flexShrink=\"0\"\n        />\n        <DropdownPrompt onClick={toggleShowDropdown}>\n          {prompt} <DropdownChevron isOpen={showDropdown} />\n        </DropdownPrompt>\n        {showDropdown && (\n          <DropdownContainer>\n            <Dropdown dropDownOptions={durationOptions} width={125} />\n          </DropdownContainer>\n        )}\n      </InputWrapper>\n      {errorState !== ErrorState.valid && (\n        <ErrorMessage className={caption}>\n          {' '}\n          <WarningIcon /> {errorState === ErrorState.overMax ? 'Maximum 6 months' : 'Set duration'}\n        </ErrorMessage>\n      )}\n    </ModalWrapper>\n  )\n}\n\nconst convertDurationToExpiration = (amount: number, duration: Duration) => {\n  const durationFactor = () => {\n    switch (duration) {\n      case Duration.hour:\n        return 1\n      case Duration.day:\n        return 24\n      case Duration.week:\n        return 24 * 7\n      default: // month\n        return 24 * 30\n    }\n  }\n  return Math.round((Date.now() + ms(`1h`) * durationFactor() * amount) / 1000)\n}\n","import { Trans } from '@lingui/macro'\nimport { InterfaceModalName, NFTEventName } from '@uniswap/analytics-events'\nimport { useWeb3React } from '@web3-react/core'\nimport { sendAnalyticsEvent, useTrace } from 'analytics'\nimport Column from 'components/Column'\nimport Row from 'components/Row'\nimport { useStablecoinValue } from 'hooks/useStablecoinPrice'\nimport useNativeCurrency from 'lib/hooks/useNativeCurrency'\nimport tryParseCurrencyAmount from 'lib/utils/tryParseCurrencyAmount'\nimport { ListingButton } from 'nft/components/profile/list/ListingButton'\nimport {\n  approveCollectionRow,\n  getTotalEthValue,\n  useSubscribeListingState,\n  verifyStatus,\n} from 'nft/components/profile/list/utils'\nimport { useIsMobile, useNFTList, useProfilePageState, useSellAsset } from 'nft/hooks'\nimport { LIST_PAGE_MARGIN, LIST_PAGE_MARGIN_MOBILE } from 'nft/pages/profile/shared'\nimport { looksRareNonceFetcher } from 'nft/queries/looksRare'\nimport { ProfilePageStateType } from 'nft/types'\nimport { ListingMarkets } from 'nft/utils/listNfts'\nimport { useEffect, useMemo, useReducer, useState } from 'react'\nimport { ArrowLeft } from 'react-feather'\nimport styled from 'styled-components'\nimport { BREAKPOINTS } from 'theme'\nimport { ThemedText } from 'theme/components'\nimport { Z_INDEX } from 'theme/zIndex'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\n\nimport { ListModal } from './Modal/ListModal'\nimport { NFTListingsGrid } from './NFTListingsGrid'\nimport { SelectMarketplacesDropdown } from './SelectMarketplacesDropdown'\nimport { SetDurationModal } from './SetDurationModal'\n\nconst ListingHeader = styled(Column)`\n  gap: 16px;\n  margin-top: 36px;\n\n  @media screen and (min-width: ${BREAKPOINTS.xs}px) {\n    gap: 4px;\n  }\n`\n\nconst ArrowContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 4px;\n\n  @media screen and (min-width: ${BREAKPOINTS.sm}px) {\n    height: 40px;\n    width: 40px;\n  }\n`\n\nconst BackArrow = styled(ArrowLeft)`\n  height: 16px;\n  width: 16px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.neutral2};\n\n  @media screen and (min-width: ${BREAKPOINTS.sm}px) {\n    height: 20px;\n    width: 20px;\n  }\n`\n\nconst TitleWrapper = styled(Row)`\n  gap: 4px;\n  margin-bottom: 12px;\n  white-space: nowrap;\n  width: min-content;\n  font-weight: 535;\n  font-size: 20px;\n  line-height: 28px;\n\n  @media screen and (min-width: ${BREAKPOINTS.xs}px) {\n    margin-bottom: 0px;\n    font-weight: 535;\n    font-size: 28px;\n    line-height: 36px;\n  }\n`\n\nconst ButtonsWrapper = styled(Row)`\n  gap: 12px;\n  width: min-content;\n`\n\nconst MarketWrap = styled.section`\n  gap: 48px;\n  margin: 0px auto;\n  width: 100%;\n  max-width: 1200px;\n`\n\nconst ListingHeaderRow = styled(Row)`\n  align-items: center;\n  justify-content: space-between;\n  flex-wrap: wrap;\n\n  @media screen and (min-width: ${BREAKPOINTS.sm}px) {\n    padding-left: 40px;\n  }\n`\n\nconst GridWrapper = styled.div`\n  margin-top: 24px;\n  margin-bottom: 48px;\n`\n\nconst FloatingConfirmationBar = styled(Row)<{ issues: boolean }>`\n  padding: 12px 12px 12px 32px;\n  border: 1px solid;\n  border-color: ${({ theme, issues }) => (issues ? theme.surface3 : theme.accent1)};\n  border-radius: 20px;\n  white-space: nowrap;\n  justify-content: space-between;\n  background: ${({ theme }) => theme.surface1};\n  position: fixed;\n  bottom: 32px;\n  width: calc(100vw - ${LIST_PAGE_MARGIN * 2}px);\n  left: 50%;\n  transform: translateX(-50%);\n  max-width: ${({ theme }) => theme.maxWidth};\n  z-index: ${Z_INDEX.under_dropdown};\n  box-shadow: ${({ theme }) => theme.deprecated_shallowShadow};\n\n  @media screen and (max-width: ${BREAKPOINTS.lg}px) {\n    bottom: 68px;\n  }\n\n  @media screen and (max-width: ${BREAKPOINTS.sm}px) {\n    width: calc(100% - ${LIST_PAGE_MARGIN_MOBILE * 2}px);\n    padding: 8px 8px 8px 16px;\n  }\n`\n\nconst Overlay = styled.div`\n  position: fixed;\n  bottom: 0px;\n  left: 0px;\n  height: 158px;\n  width: 100vw;\n  background: ${({ theme }) => `linear-gradient(180deg, rgba(0, 0, 0, 0) 0%, ${theme.surface2} 100%)`};\n`\n\nconst UsdValue = styled(ThemedText.SubHeader)`\n  line-height: 24px;\n  color: ${({ theme }) => theme.neutral2};\n  display: none;\n\n  @media screen and (min-width: ${BREAKPOINTS.lg}px) {\n    display: flex;\n  }\n`\n\nconst ProceedsAndButtonWrapper = styled(Row)`\n  width: min-content;\n  gap: 40px;\n\n  @media screen and (max-width: ${BREAKPOINTS.sm}px) {\n    gap: 20px;\n  }\n`\n\nconst ProceedsWrapper = styled(Row)`\n  width: min-content;\n  gap: 16px;\n`\n\nconst EthValueWrapper = styled.span<{ totalEthListingValue: boolean }>`\n  font-weight: 535;\n  font-size: 20px;\n  line-height: 28px;\n  color: ${({ theme, totalEthListingValue }) => (totalEthListingValue ? theme.neutral1 : theme.neutral2)};\n\n  @media screen and (max-width: ${BREAKPOINTS.sm}px) {\n    font-size: 16px;\n    line-height: 24px;\n  }\n`\n\nexport const ListPage = () => {\n  const { formatNumberOrString } = useFormatter()\n  const { setProfilePageState: setSellPageState } = useProfilePageState()\n  const { provider, chainId } = useWeb3React()\n  const isMobile = useIsMobile()\n  const trace = useTrace({ modal: InterfaceModalName.NFT_LISTING })\n  const { formatCurrencyAmount } = useFormatter()\n  const { setGlobalMarketplaces, sellAssets, issues } = useSellAsset(\n    ({ setGlobalMarketplaces, sellAssets, issues }) => ({\n      setGlobalMarketplaces,\n      sellAssets,\n      issues,\n    })\n  )\n  const { listings, collectionsRequiringApproval, setLooksRareNonce, setCollectionStatusAndCallback } = useNFTList(\n    ({ listings, collectionsRequiringApproval, setLooksRareNonce, setCollectionStatusAndCallback }) => ({\n      listings,\n      collectionsRequiringApproval,\n      setLooksRareNonce,\n      setCollectionStatusAndCallback,\n    })\n  )\n\n  const totalEthListingValue = useMemo(() => getTotalEthValue(sellAssets), [sellAssets])\n  const nativeCurrency = useNativeCurrency(chainId)\n  const parsedAmount = tryParseCurrencyAmount(totalEthListingValue.toString(), nativeCurrency)\n  const usdcValue = useStablecoinValue(parsedAmount)\n  const usdcAmount = formatCurrencyAmount({\n    amount: usdcValue,\n    type: NumberType.FiatTokenPrice,\n  })\n  const [showListModal, toggleShowListModal] = useReducer((s) => !s, false)\n  const [selectedMarkets, setSelectedMarkets] = useState([ListingMarkets[0]]) // default marketplace: x2y2\n  const signer = provider?.getSigner()\n\n  // instantiate listings and collections to approve when users modify input data\n  useSubscribeListingState()\n\n  useEffect(() => {\n    setGlobalMarketplaces(selectedMarkets)\n  }, [selectedMarkets, setGlobalMarketplaces])\n\n  const startListingEventProperties = {\n    collection_addresses: sellAssets.map((asset) => asset.asset_contract.address),\n    token_ids: sellAssets.map((asset) => asset.tokenId),\n    marketplaces: Array.from(new Set(listings.map((asset) => asset.marketplace.name))),\n    list_quantity: listings.length,\n    usd_value: usdcAmount,\n    ...trace,\n  }\n\n  const startListingFlow = async () => {\n    if (!signer) return\n    sendAnalyticsEvent(NFTEventName.NFT_SELL_START_LISTING, { ...startListingEventProperties })\n    const signerAddress = await signer.getAddress()\n    const nonce = await looksRareNonceFetcher(signerAddress)\n    setLooksRareNonce(nonce ?? 0)\n\n    // for all unique collection, marketplace combos -> approve collections\n    for (const collectionRow of collectionsRequiringApproval) {\n      verifyStatus(collectionRow.status) &&\n        (isMobile\n          ? await approveCollectionRow(collectionRow, signer, setCollectionStatusAndCallback)\n          : approveCollectionRow(collectionRow, signer, setCollectionStatusAndCallback))\n    }\n  }\n\n  const showModalAndStartListing = () => {\n    toggleShowListModal()\n    startListingFlow()\n  }\n\n  const BannerText = isMobile ? (\n    <ThemedText.SubHeader>\n      <Trans>Receive</Trans>\n    </ThemedText.SubHeader>\n  ) : (\n    <ThemedText.HeadlineSmall lineHeight=\"28px\">\n      <Trans>You receive</Trans>\n    </ThemedText.HeadlineSmall>\n  )\n\n  return (\n    <Column>\n      <MarketWrap>\n        <ListingHeader>\n          <Row>\n            <ArrowContainer>\n              <BackArrow onClick={() => setSellPageState(ProfilePageStateType.VIEWING)} />\n            </ArrowContainer>\n            <ThemedText.BodySmall lineHeight=\"20px\" color=\"neutral2\">\n              <Trans>My NFTs</Trans>\n            </ThemedText.BodySmall>\n          </Row>\n          <ListingHeaderRow>\n            <TitleWrapper>\n              <Trans>Sell NFTs</Trans>\n            </TitleWrapper>\n            <ButtonsWrapper>\n              <SelectMarketplacesDropdown setSelectedMarkets={setSelectedMarkets} selectedMarkets={selectedMarkets} />\n              <SetDurationModal />\n            </ButtonsWrapper>\n          </ListingHeaderRow>\n        </ListingHeader>\n        <GridWrapper>\n          <NFTListingsGrid selectedMarkets={selectedMarkets} />\n        </GridWrapper>\n      </MarketWrap>\n\n      <FloatingConfirmationBar issues={!!issues}>\n        {BannerText}\n        <ProceedsAndButtonWrapper>\n          <ProceedsWrapper>\n            <EthValueWrapper totalEthListingValue={!!totalEthListingValue}>\n              {totalEthListingValue > 0\n                ? formatNumberOrString({ input: totalEthListingValue, type: NumberType.NFTToken })\n                : '-'}{' '}\n              ETH\n            </EthValueWrapper>\n            {!!usdcValue && <UsdValue>{usdcAmount}</UsdValue>}\n          </ProceedsWrapper>\n          <ListingButton onClick={showModalAndStartListing} />\n        </ProceedsAndButtonWrapper>\n      </FloatingConfirmationBar>\n      <Overlay />\n\n      {showListModal && <ListModal overlayClick={toggleShowListModal} />}\n    </Column>\n  )\n}\n","const looksRareApiAddress = 'https://api.looksrare.org/api/v1'\n\nexport const looksRareNonceFetcher = async (address: any): Promise<number | undefined> => {\n  const res = await fetch(`${looksRareApiAddress}/orders/nonce?address=${address}`)\n\n  if (res.status !== 200) {\n    console.log(`LooksRare nonce API errored with status ${res.statusText}`)\n    return\n  }\n\n  const json = await res.json()\n\n  return parseFloat(json.data)\n}\n","import { ScrollBarStyles } from 'components/Common'\nimport { LoadingBubble } from 'components/Tokens/loading'\nimport { AnimatedBox, Box } from 'nft/components/Box'\nimport { Column, Row } from 'nft/components/Flex'\nimport { XMarkIcon } from 'nft/components/icons'\nimport { Checkbox } from 'nft/components/layout/Checkbox'\nimport { checkbox } from 'nft/components/layout/Checkbox.css'\nimport { Input } from 'nft/components/layout/Input'\nimport { subhead } from 'nft/css/common.css'\nimport { themeVars } from 'nft/css/sprinkles.css'\nimport { useFiltersExpanded, useIsMobile, useWalletCollections } from 'nft/hooks'\nimport { WalletCollection } from 'nft/types'\nimport {\n  CSSProperties,\n  Dispatch,\n  FormEvent,\n  SetStateAction,\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useState,\n} from 'react'\nimport { easings, useSpring } from 'react-spring'\nimport AutoSizer from 'react-virtualized-auto-sizer'\nimport { FixedSizeList, ListOnItemsRenderedProps } from 'react-window'\nimport InfiniteLoader from 'react-window-infinite-loader'\nimport styled from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { TRANSITION_DURATIONS } from 'theme/styles'\nimport noop from 'utils/noop'\n\nimport { WALLET_COLLECTIONS_PAGINATION_LIMIT } from './ProfilePage'\nimport * as styles from './ProfilePage.css'\n\nconst COLLECTION_ROW_HEIGHT = 44\n\nconst ItemsContainer = styled(Column)`\n  ${ScrollBarStyles}\n  height: 100vh;\n`\n\nconst LongLoadingBubble = styled(LoadingBubble)`\n  min-height: 15px;\n  width: 75%;\n`\n\nconst SmallLoadingBubble = styled(LoadingBubble)`\n  height: 20px;\n  width: 20px;\n  margin-right: 8px;\n`\n\nconst MobileMenuHeader = styled(Row)`\n  justify-content: space-between;\n  padding-bottom: 8px;\n`\n\nconst LoadingCollectionItem = ({ style }: { style?: CSSProperties }) => {\n  return (\n    <Row display=\"flex\" justifyContent=\"space-between\" style={style} paddingLeft=\"12\" paddingRight=\"16\">\n      <Row display=\"flex\" flex=\"1\">\n        <SmallLoadingBubble />\n        <LongLoadingBubble />\n      </Row>\n      <Box as=\"span\" borderColor=\"surface3\" className={checkbox} aria-hidden=\"true\" />\n    </Row>\n  )\n}\n\ninterface CollectionFilterRowProps {\n  index: number\n  style: CSSProperties\n}\n\ninterface FilterSidebarProps {\n  fetchNextPage: () => void\n  hasNextPage?: boolean\n  isFetchingNextPage: boolean\n  walletCollections: WalletCollection[]\n}\n\nexport const FilterSidebar = ({\n  fetchNextPage,\n  hasNextPage,\n  isFetchingNextPage,\n  walletCollections,\n}: FilterSidebarProps) => {\n  const collectionFilters = useWalletCollections((state) => state.collectionFilters)\n  const setCollectionFilters = useWalletCollections((state) => state.setCollectionFilters)\n\n  const [isFiltersExpanded, setFiltersExpanded] = useFiltersExpanded()\n  const isMobile = useIsMobile()\n\n  const { sidebarX } = useSpring({\n    sidebarX: isFiltersExpanded ? 0 : -360,\n    config: {\n      duration: TRANSITION_DURATIONS.medium,\n      easing: easings.easeOutSine,\n    },\n  })\n\n  const hideSearch = useMemo(\n    () => (walletCollections && walletCollections?.length >= WALLET_COLLECTIONS_PAGINATION_LIMIT) || isFetchingNextPage,\n    [walletCollections, isFetchingNextPage]\n  )\n\n  return (\n    // @ts-ignore\n    <AnimatedBox\n      position={{ sm: 'fixed', md: 'sticky' }}\n      top={{ sm: '0', md: '72' }}\n      left={{ sm: '0', md: 'unset' }}\n      width={{ sm: 'full', md: '332', lg: '332' }}\n      height={{ sm: 'full', md: 'auto' }}\n      zIndex={{ sm: 'modal', md: 'auto' }}\n      display={isFiltersExpanded ? 'flex' : 'none'}\n      style={{ transform: isMobile ? undefined : sidebarX.to((x) => `translateX(${x}px)`) }}\n      background=\"surface2\"\n    >\n      <Box\n        paddingTop={{ sm: '24', md: '0' }}\n        paddingLeft={{ sm: '16', md: '0' }}\n        paddingRight=\"16\"\n        width={{ sm: 'full', md: '332', lg: '332' }}\n      >\n        {isMobile && (\n          <MobileMenuHeader>\n            <ThemedText.HeadlineSmall>Filter</ThemedText.HeadlineSmall>\n            <XMarkIcon\n              height={28}\n              width={28}\n              fill={themeVars.colors.neutral1}\n              onClick={() => setFiltersExpanded(false)}\n            />\n          </MobileMenuHeader>\n        )}\n        <CollectionSelect\n          collections={walletCollections}\n          collectionFilters={collectionFilters}\n          setCollectionFilters={setCollectionFilters}\n          fetchNextPage={fetchNextPage}\n          hasNextPage={hasNextPage}\n          isFetchingNextPage={isFetchingNextPage}\n          hideSearch={hideSearch}\n        />\n      </Box>\n    </AnimatedBox>\n  )\n}\n\nconst CollectionSelect = ({\n  collections,\n  collectionFilters,\n  setCollectionFilters,\n  fetchNextPage,\n  hasNextPage,\n  isFetchingNextPage,\n  hideSearch,\n}: {\n  collections: WalletCollection[]\n  collectionFilters: Array<string>\n  setCollectionFilters: (address: string) => void\n  fetchNextPage: () => void\n  hasNextPage?: boolean\n  isFetchingNextPage: boolean\n  hideSearch: boolean\n}) => {\n  const [collectionSearchText, setCollectionSearchText] = useState('')\n  const [displayCollections, setDisplayCollections] = useState(collections)\n\n  useEffect(() => {\n    if (collectionSearchText) {\n      const filtered = collections.filter((collection) =>\n        collection.name?.toLowerCase().includes(collectionSearchText.toLowerCase())\n      )\n      setDisplayCollections(filtered)\n    } else {\n      setDisplayCollections(collections)\n    }\n  }, [collectionSearchText, collections])\n\n  const itemKey = useCallback((index: number, data: WalletCollection[]) => {\n    if (!data) return index\n    const collection = data[index]\n    return `${collection.address}_${index}`\n  }, [])\n\n  // If there are more items to be loaded then add an extra row to hold a loading indicator.\n  const itemCount = hasNextPage ? displayCollections.length + 1 : displayCollections.length\n\n  // Only load 1 page of items at a time.\n  // Pass an empty callback to InfiniteLoader in case it asks us to load more than once.\n  const loadMoreItems = isFetchingNextPage ? noop : fetchNextPage\n\n  // Every row is loaded except for our loading indicator row.\n  const isItemLoaded = useCallback(\n    (index: number) => !hasNextPage || index < displayCollections.length,\n    [displayCollections.length, hasNextPage]\n  )\n\n  const CollectionFilterRow = useCallback(\n    ({ index, style }: CollectionFilterRowProps) => {\n      const collection = !!displayCollections && displayCollections[index]\n      if (!collection || isFetchingNextPage) {\n        return <LoadingCollectionItem style={style} key={index} />\n      }\n      return (\n        <CollectionItem\n          style={style}\n          key={itemKey(index, displayCollections)}\n          collection={displayCollections[index]}\n          collectionFilters={collectionFilters}\n          setCollectionFilters={setCollectionFilters}\n        />\n      )\n    },\n    [displayCollections, isFetchingNextPage, itemKey, collectionFilters, setCollectionFilters]\n  )\n\n  return (\n    <>\n      <Box className={subhead} marginTop=\"12\" marginBottom=\"16\" width=\"276\">\n        Collections\n      </Box>\n      <Box paddingBottom=\"12\" borderRadius=\"8\">\n        <Column as=\"ul\" paddingLeft=\"0\" gap=\"10\" style={{ maxHeight: '80vh' }}>\n          {!hideSearch && (\n            <CollectionFilterSearch\n              collectionSearchText={collectionSearchText}\n              setCollectionSearchText={setCollectionSearchText}\n            />\n          )}\n          <ItemsContainer>\n            <AutoSizer disableWidth>\n              {({ height }) => (\n                <InfiniteLoader isItemLoaded={isItemLoaded} itemCount={itemCount} loadMoreItems={loadMoreItems}>\n                  {({\n                    onItemsRendered,\n                    ref,\n                  }: {\n                    onItemsRendered: (props: ListOnItemsRenderedProps) => any\n                    ref: any\n                  }) => (\n                    <FixedSizeList\n                      height={height}\n                      width=\"100%\"\n                      itemCount={itemCount}\n                      itemSize={COLLECTION_ROW_HEIGHT}\n                      onItemsRendered={onItemsRendered}\n                      itemKey={itemKey}\n                      ref={ref}\n                    >\n                      {CollectionFilterRow}\n                    </FixedSizeList>\n                  )}\n                </InfiniteLoader>\n              )}\n            </AutoSizer>\n          </ItemsContainer>\n        </Column>\n      </Box>\n    </>\n  )\n}\n\nconst CollectionFilterSearch = ({\n  collectionSearchText,\n  setCollectionSearchText,\n}: {\n  collectionSearchText: string\n  setCollectionSearchText: Dispatch<SetStateAction<string>>\n}) => {\n  return (\n    <Input\n      placeholder=\"Search\"\n      marginTop=\"8\"\n      marginBottom=\"8\"\n      autoComplete=\"off\"\n      position=\"static\"\n      width=\"full\"\n      value={collectionSearchText}\n      onChange={(e: FormEvent<HTMLInputElement>) => setCollectionSearchText(e.currentTarget.value)}\n    />\n  )\n}\n\nconst CollectionItem = ({\n  collection,\n  collectionFilters,\n  setCollectionFilters,\n  style,\n}: {\n  collection: WalletCollection\n  collectionFilters: Array<string>\n  setCollectionFilters: (address: string) => void\n  style?: CSSProperties\n}) => {\n  const [isCheckboxSelected, setCheckboxSelected] = useState(false)\n  const [hovered, toggleHovered] = useReducer((state) => {\n    return !state\n  }, false)\n  const isChecked = useCallback(\n    (address: string) => {\n      return collectionFilters.some((collection) => collection === address)\n    },\n    [collectionFilters]\n  )\n  const handleCheckbox = () => {\n    setCheckboxSelected(!isCheckboxSelected)\n    setCollectionFilters(collection.address)\n  }\n  return (\n    <Row\n      maxWidth=\"full\"\n      overflowX=\"hidden\"\n      overflowY=\"hidden\"\n      fontWeight=\"book\"\n      className={styles.subRowHover}\n      justifyContent=\"space-between\"\n      cursor=\"pointer\"\n      paddingLeft=\"12\"\n      paddingRight=\"16\"\n      borderRadius=\"12\"\n      style={{\n        paddingBottom: '22px',\n        paddingTop: '22px',\n        ...style,\n      }}\n      maxHeight={`${COLLECTION_ROW_HEIGHT}`}\n      as=\"li\"\n      onMouseEnter={toggleHovered}\n      onMouseLeave={toggleHovered}\n      onClick={handleCheckbox}\n    >\n      <Row>\n        <Box as=\"img\" borderRadius=\"round\" width=\"20\" height=\"20\" src={collection.image} />\n        <Box\n          as=\"span\"\n          whiteSpace=\"nowrap\"\n          textOverflow=\"ellipsis\"\n          overflow=\"hidden\"\n          paddingLeft=\"12\"\n          paddingRight=\"14\"\n          style={{ minHeight: 15, maxWidth: '180px' }}\n        >\n          {collection.name}{' '}\n        </Box>\n      </Row>\n\n      <Checkbox checked={isChecked(collection.address)} hovered={hovered} onChange={handleCheckbox}>\n        <Box as=\"span\" color=\"neutral3\" marginRight=\"12\" marginLeft=\"auto\">\n          {collection.count}\n        </Box>\n      </Checkbox>\n    </Row>\n  )\n}\n","import \"src/nft/css/sprinkles.css.ts.vanilla.css!=!../../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/css/sprinkles.css.ts.vanilla.css\\\",\\\"source\\\":\\\"#\\\"}!../../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nimport \"src/nft/css/common.css.ts.vanilla.css!=!../../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/css/common.css.ts.vanilla.css\\\",\\\"source\\\":\\\"Ll8xMjdsOGhkYTo6YmVmb3JlIHsKICBjb250ZW50OiAiIjsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgaW5zZXQ6IC0xcHg7CiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCAjRkM3MkZGODAgMCUsICNGQzcyRkY4MCAxMDAuMTMlKSBib3JkZXItYm94OwogIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7CiAgLXdlYmtpdC1tYXNrOiBsaW5lYXItZ3JhZGllbnQoI2ZmZiAwIDApIHBhZGRpbmctYm94LCBsaW5lYXItZ3JhZGllbnQoI2ZmZiAwIDApOzsKICAtd2Via2l0LW1hc2stY29tcG9zaXRlOiB4b3I7OwogIG1hc2stY29tcG9zaXRlOiBleGNsdWRlOwogIGJvcmRlci1zdHlsZTogc29saWQ7CiAgYm9yZGVyLXdpZHRoOiAxcHg7CiAgYm9yZGVyLXJhZGl1czogaW5oZXJpdDsKICBwb2ludGVyLWV2ZW50czogbm9uZTsKfQouXzEyN2w4aGRiOjpiZWZvcmUgewogIG9wYWNpdHk6IDA7CiAgLXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDAuMjVzIGVhc2U7CiAgLW1vei10cmFuc2l0aW9uOiBvcGFjaXR5IDAuMjVzIGVhc2U7CiAgLW1zLXRyYW5zaXRpb246IG9wYWNpdHkgMC4yNXMgZWFzZTsKICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMjVzIGVhc2Utb3V0Owp9Ci5fMTI3bDhoZGI6aG92ZXI6OmJlZm9yZSB7CiAgb3BhY2l0eTogMTsKfQ==\\\"}!../../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nimport \"src/nft/components/profile/view/ProfilePage.css.ts.vanilla.css!=!../../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/components/profile/view/ProfilePage.css.ts.vanilla.css\\\",\\\"source\\\":\\\"Ll8xYnc1ZGxyMSB7CiAgbWF4LXdpZHRoOiAxMDAwcHg7CiAgbWFyZ2luOiAwIGF1dG87Cn0KLl8xYnc1ZGxyMiB7CiAgbWFyZ2luLWJvdHRvbTogLTNweDsKfQouXzFidzVkbHIzOmhvdmVyIHsKICBiYWNrZ3JvdW5kOiB2YXIoLS1nZW5pZS1jb2xvcnMtc3VyZmFjZTMpOwp9Ci5fMWJ3NWRscjQgewogIGhlaWdodDogMTJweDsKICB3aWR0aDogMTJweDsKICBtYXJnaW4tbGVmdDogMnB4OwogIG1hcmdpbi1ib3R0b206IC0ycHg7CiAgYm94LXNpemluZzogYm9yZGVyLWJveDsKfQouXzFidzVkbHI1IHsKICB3aWR0aDogMTkwcHg7Cn0KLl8xYnc1ZGxyNiB7CiAgYm94LXNoYWRvdzogdmFyKC0tcmd3NmV6aik7Cn0KLl8xYnc1ZGxyNyB7CiAgYm94LXNoYWRvdzogMCAxNHB4IDE2cHggMCByZ2JhKDcwLCAxMTUsIDI1MCwgMC40KTsKfQouXzFidzVkbHI4IHsKICB3aGl0ZS1zcGFjZTogbm93cmFwOwogIG1heC13aWR0aDogMTAwcHg7CiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKfQ==\\\"}!../../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nexport var activeDropDown = '_1bw5dlr6';\nexport var activeDropDownItems = '_1bw5dlr7';\nexport var collectionFilterBubbleText = '_1bw5dlr8';\nexport var dropDown = '_1bw5dlr5';\nexport var ethIcon = '_1bw5dlr2';\nexport var section = '_1bw5dlr1 rgw6ez2e4 rgw6ez2co rgw6ez2jm rgw6ez2i6';\nexport var subRowHover = '_1bw5dlr3 rgw6ezd4 rgw6ezba rgw6ezds';\nexport var verifiedBadge = '_1bw5dlr4';","import { Box } from 'nft/components/Box'\nimport { assetList } from 'nft/components/collection/CollectionNfts.css'\nimport { loadingAsset } from 'nft/css/loading.css'\nimport styled from 'styled-components'\n\nimport { DEFAULT_WALLET_ASSET_QUERY_AMOUNT } from './ProfilePage'\n\nconst SkeletonBodyWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  gap: 18px;\n`\n\nconst SkeletonRowWrapper = styled.div`\n  display: flex;\n  flex-direct: row;\n  width: 100%;\n`\n\nconst AccountDetailsSkeletonWrapper = styled(SkeletonRowWrapper)`\n  gap: 12px;\n  margin-bottom: 30px;\n`\n\nconst ProfileDetailsSkeleton = styled.div`\n  width: 180px;\n  height: 36px;\n  border-radius: 12px;\n`\n\nconst FilterBarSkeletonWrapper = styled(SkeletonRowWrapper)`\n  justify-content: space-between;\n`\n\nconst FilterButtonSkeleton = styled.div`\n  width: 92px;\n  height: 44px;\n  border-radius: 12px;\n`\n\nconst SellButtonSkeleton = styled.div`\n  width: 80px;\n  height: 44px;\n  border-radius: 12px;\n`\n\nconst ProfileAssetCardSkeleton = styled.div`\n  width: 100%;\n  height: 330px;\n  border-radius: 20px;\n`\n\nconst ProfileAssetCardDisplaySectionSkeleton = () => {\n  return (\n    <Box width=\"full\" className={assetList}>\n      {Array.from(Array(DEFAULT_WALLET_ASSET_QUERY_AMOUNT), (_, index) => (\n        <ProfileAssetCardSkeleton key={index} className={loadingAsset} />\n      ))}\n    </Box>\n  )\n}\n\nexport const ProfileBodyLoadingSkeleton = () => {\n  return (\n    <SkeletonBodyWrapper>\n      <AccountDetailsSkeletonWrapper>\n        <ProfileDetailsSkeleton className={loadingAsset} />\n      </AccountDetailsSkeletonWrapper>\n      <FilterBarSkeletonWrapper>\n        <FilterButtonSkeleton className={loadingAsset} />\n        <SellButtonSkeleton className={loadingAsset} />\n      </FilterBarSkeletonWrapper>\n      <ProfileAssetCardDisplaySectionSkeleton />\n    </SkeletonBodyWrapper>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { NFTEventName } from '@uniswap/analytics-events'\nimport { sendAnalyticsEvent, useTrace } from 'analytics'\nimport { NftCard, NftCardDisplayProps } from 'nft/components/card'\nimport { detailsHref } from 'nft/components/card/utils'\nimport { VerifiedIcon } from 'nft/components/icons'\nimport { useBag, useIsMobile, useSellAsset } from 'nft/hooks'\nimport { WalletAsset } from 'nft/types'\nimport { useMemo } from 'react'\nimport { useNavigate } from 'react-router-dom'\n\ninterface ViewMyNftsAssetProps {\n  asset: WalletAsset\n  mediaShouldBePlaying: boolean\n  setCurrentTokenPlayingMedia: (tokenId: string | undefined) => void\n  hideDetails: boolean\n}\n\nexport const ViewMyNftsAsset = ({\n  asset,\n  mediaShouldBePlaying,\n  setCurrentTokenPlayingMedia,\n  hideDetails,\n}: ViewMyNftsAssetProps) => {\n  const sellAssets = useSellAsset((state) => state.sellAssets)\n  const selectSellAsset = useSellAsset((state) => state.selectSellAsset)\n  const removeSellAsset = useSellAsset((state) => state.removeSellAsset)\n  const cartExpanded = useBag((state) => state.bagExpanded)\n  const toggleCart = useBag((state) => state.toggleBag)\n  const isMobile = useIsMobile()\n  const navigate = useNavigate()\n\n  const isSelected = useMemo(() => {\n    return sellAssets.some(\n      (item) => item.tokenId === asset.tokenId && item.asset_contract.address === asset.asset_contract.address\n    )\n  }, [asset, sellAssets])\n\n  const trace = useTrace()\n  const toggleSelect = () => handleSelect(isSelected)\n\n  const handleSelect = (removeAsset: boolean) => {\n    if (removeAsset) {\n      removeSellAsset(asset)\n    } else {\n      selectSellAsset(asset)\n      sendAnalyticsEvent(NFTEventName.NFT_SELL_ITEM_ADDED, {\n        collection_address: asset.asset_contract.address,\n        token_id: asset.tokenId,\n        ...trace,\n      })\n    }\n    if (\n      !cartExpanded &&\n      !sellAssets.find(\n        (x) => x.tokenId === asset.tokenId && x.asset_contract.address === asset.asset_contract.address\n      ) &&\n      !isMobile\n    )\n      toggleCart()\n  }\n\n  const isDisabled = asset.susFlag\n\n  const display: NftCardDisplayProps = useMemo(() => {\n    return {\n      primaryInfo: !!asset.asset_contract.name && asset.asset_contract.name,\n      primaryInfoIcon: asset.collectionIsVerified && <VerifiedIcon height=\"16px\" width=\"16px\" />,\n      secondaryInfo: asset.name || asset.tokenId ? asset.name ?? `#${asset.tokenId}` : null,\n      selectedInfo: <Trans>Remove from bag</Trans>,\n      notSelectedInfo: <Trans>List for sale</Trans>,\n      disabledInfo: <Trans>Unavailable for listing</Trans>,\n    }\n  }, [asset.asset_contract.name, asset.collectionIsVerified, asset.name, asset.tokenId])\n\n  return (\n    <NftCard\n      asset={asset}\n      display={display}\n      isSelected={isSelected}\n      isDisabled={Boolean(isDisabled)}\n      selectAsset={() => handleSelect(false)}\n      unselectAsset={() => handleSelect(true)}\n      onButtonClick={toggleSelect}\n      onCardClick={() => {\n        if (!hideDetails) navigate(detailsHref(asset))\n      }}\n      mediaShouldBePlaying={mediaShouldBePlaying}\n      setCurrentTokenPlayingMedia={setCurrentTokenPlayingMedia}\n      testId=\"nft-profile-asset\"\n    />\n  )\n}\n","import { useNftBalance } from 'graphql/data/nft/NftBalance'\nimport { AnimatedBox, Box } from 'nft/components/Box'\nimport { LoadingAssets } from 'nft/components/collection/CollectionAssetLoading'\nimport { assetList } from 'nft/components/collection/CollectionNfts.css'\nimport { FilterButton } from 'nft/components/collection/FilterButton'\nimport { ClearAllButton } from 'nft/components/collection/shared'\nimport { Column, Row } from 'nft/components/Flex'\nimport { CrossIcon } from 'nft/components/icons'\nimport { FilterSidebar } from 'nft/components/profile/view/FilterSidebar'\nimport { subhead } from 'nft/css/common.css'\nimport {\n  useBag,\n  useFiltersExpanded,\n  useIsMobile,\n  useSellAsset,\n  useWalletBalance,\n  useWalletCollections,\n} from 'nft/hooks'\nimport { ScreenBreakpointsPaddings } from 'nft/pages/collection/index.css'\nimport { OSCollectionsFetcher } from 'nft/queries/openSea'\nimport { WalletCollection } from 'nft/types'\nimport { Dispatch, SetStateAction, Suspense, useCallback, useEffect, useMemo, useState } from 'react'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport { useInfiniteQuery } from 'react-query'\nimport { easings, useSpring } from 'react-spring'\nimport styled from 'styled-components'\n\nimport { EmptyWalletModule } from './EmptyWalletContent'\nimport * as styles from './ProfilePage.css'\nimport { ProfileBodyLoadingSkeleton } from './ProfilePageLoadingSkeleton'\nimport { ViewMyNftsAsset } from './ViewMyNftsAsset'\n\nconst ProfilePageColumn = styled(Column)`\n  ${ScreenBreakpointsPaddings}\n`\n\nconst ProfileHeader = styled.div`\n  font-size: 28px;\n  font-weight: 535;\n  line-height: 38px;\n  padding-bottom: 16px;\n  margin-bottom: 8px;\n  border-bottom: 1px solid ${({ theme }) => theme.surface3};\n\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.sm}px`}) {\n    font-size: 20px;\n    line-height: 28px;\n    margin-bottom: 0px;\n  }\n`\n\nconst EmptyStateContainer = styled.div`\n  margin-top: 164px;\n`\n\nexport const DEFAULT_WALLET_ASSET_QUERY_AMOUNT = 25\nexport const WALLET_COLLECTIONS_PAGINATION_LIMIT = 300\nconst FILTER_SIDEBAR_WIDTH = 300\nconst PADDING = 16\n\nexport const ProfilePage = () => {\n  const { address } = useWalletBalance()\n  const walletCollections = useWalletCollections((state) => state.walletCollections)\n  const setWalletCollections = useWalletCollections((state) => state.setWalletCollections)\n  const { resetSellAssets } = useSellAsset(({ reset }) => ({\n    resetSellAssets: reset,\n  }))\n  const sellAssets = useSellAsset((state) => state.sellAssets)\n  const toggleBag = useBag((state) => state.toggleBag)\n  const [isFiltersExpanded, setFiltersExpanded] = useFiltersExpanded()\n  const isMobile = useIsMobile()\n\n  const getOwnerCollections = async ({ pageParam = 0 }) => {\n    const res = await OSCollectionsFetcher({\n      params: {\n        asset_owner: address,\n        offset: `${pageParam * WALLET_COLLECTIONS_PAGINATION_LIMIT}`,\n        limit: `${WALLET_COLLECTIONS_PAGINATION_LIMIT}`,\n      },\n    })\n    return {\n      data: res,\n      nextPage: pageParam + 1,\n    }\n  }\n\n  const {\n    data: ownerCollectionsData,\n    fetchNextPage,\n    hasNextPage,\n    isFetchingNextPage,\n    isSuccess,\n  } = useInfiniteQuery(['ownerCollections', { address }], getOwnerCollections, {\n    getNextPageParam: (lastGroup) => (lastGroup.data.length === 0 ? undefined : lastGroup.nextPage),\n    refetchInterval: 15000,\n    refetchIntervalInBackground: false,\n    refetchOnWindowFocus: false,\n    refetchOnMount: false,\n  })\n\n  const ownerCollections = useMemo(\n    () => (isSuccess ? ownerCollectionsData?.pages.map((page) => page.data).flat() : null),\n    [isSuccess, ownerCollectionsData]\n  )\n\n  useEffect(() => {\n    ownerCollections && setWalletCollections(ownerCollections)\n  }, [ownerCollections, setWalletCollections])\n\n  return (\n    <ProfilePageColumn width=\"full\" paddingTop={{ sm: `${PADDING}`, md: '40' }}>\n      <>\n        <ProfileHeader>My NFTs</ProfileHeader>\n        <Row alignItems=\"flex-start\" position=\"relative\">\n          <FilterSidebar\n            fetchNextPage={fetchNextPage}\n            hasNextPage={hasNextPage}\n            isFetchingNextPage={isFetchingNextPage}\n            walletCollections={walletCollections}\n          />\n          {(!isMobile || !isFiltersExpanded) && (\n            <Suspense fallback={<ProfileBodyLoadingSkeleton />}>\n              <ProfilePageNfts\n                walletCollections={walletCollections}\n                isFiltersExpanded={isFiltersExpanded}\n                setFiltersExpanded={setFiltersExpanded}\n              />\n            </Suspense>\n          )}\n        </Row>\n      </>\n      {sellAssets.length > 0 && (\n        <Row\n          display={{ sm: 'flex', md: 'none' }}\n          position=\"fixed\"\n          left=\"16\"\n          height=\"56\"\n          borderRadius=\"12\"\n          paddingX=\"16\"\n          paddingY=\"12\"\n          background=\"surface1\"\n          borderStyle=\"solid\"\n          borderColor=\"surface3\"\n          borderWidth=\"1px\"\n          style={{ bottom: '68px', width: 'calc(100% - 32px)', lineHeight: '24px' }}\n          className={subhead}\n        >\n          {sellAssets.length} NFT{sellAssets.length === 1 ? '' : 's'}\n          <Box\n            fontWeight=\"medium\"\n            fontSize=\"14\"\n            cursor=\"pointer\"\n            color=\"neutral2\"\n            marginRight=\"20\"\n            marginLeft=\"auto\"\n            onClick={resetSellAssets}\n            lineHeight=\"16\"\n          >\n            Clear\n          </Box>\n          <Box\n            color=\"white\"\n            marginRight=\"0\"\n            fontWeight=\"medium\"\n            fontSize=\"14\"\n            cursor=\"pointer\"\n            backgroundColor=\"accent1\"\n            onClick={toggleBag}\n            lineHeight=\"16\"\n            borderRadius=\"12\"\n            paddingY=\"8\"\n            paddingX=\"28\"\n          >\n            List for sale\n          </Box>\n        </Row>\n      )}\n    </ProfilePageColumn>\n  )\n}\n\nconst ProfilePageNfts = ({\n  walletCollections,\n  isFiltersExpanded,\n  setFiltersExpanded,\n}: {\n  walletCollections: WalletCollection[]\n  isFiltersExpanded: boolean\n  setFiltersExpanded: (filtersExpanded: boolean) => void\n}) => {\n  const { address } = useWalletBalance()\n  const setCollectionFilters = useWalletCollections((state) => state.setCollectionFilters)\n  const collectionFilters = useWalletCollections((state) => state.collectionFilters)\n  const clearCollectionFilters = useWalletCollections((state) => state.clearCollectionFilters)\n  const isBagExpanded = useBag((state) => state.bagExpanded)\n  const [currentTokenPlayingMedia, setCurrentTokenPlayingMedia] = useState<string | undefined>()\n  const isMobile = useIsMobile()\n  const sellAssets = useSellAsset((state) => state.sellAssets)\n\n  const {\n    walletAssets: ownerAssets,\n    loading,\n    hasNext,\n    loadMore,\n  } = useNftBalance(address, collectionFilters, [], DEFAULT_WALLET_ASSET_QUERY_AMOUNT)\n\n  const { gridX } = useSpring({\n    gridX: isFiltersExpanded ? FILTER_SIDEBAR_WIDTH : -PADDING,\n    config: {\n      duration: 250,\n      easing: easings.easeOutSine,\n    },\n  })\n\n  if (loading) return <ProfileBodyLoadingSkeleton />\n\n  return (\n    <Column width=\"full\">\n      {ownerAssets?.length === 0 ? (\n        <EmptyStateContainer>\n          <EmptyWalletModule />\n        </EmptyStateContainer>\n      ) : (\n        <AnimatedBox\n          flexShrink=\"0\"\n          position={isMobile && isBagExpanded ? 'fixed' : 'static'}\n          style={{\n            transform: gridX.to(\n              (x) => `translate(${Number(x) - (!isMobile && isFiltersExpanded ? FILTER_SIDEBAR_WIDTH : -PADDING)}px)`\n            ),\n          }}\n          paddingY=\"20\"\n        >\n          <Row gap=\"8\" flexWrap=\"nowrap\" justifyContent=\"space-between\">\n            <FilterButton\n              isMobile={isMobile}\n              isFiltersExpanded={isFiltersExpanded}\n              onClick={() => setFiltersExpanded(!isFiltersExpanded)}\n            />\n          </Row>\n          <Row>\n            <CollectionFiltersRow\n              collections={walletCollections}\n              collectionFilters={collectionFilters}\n              setCollectionFilters={setCollectionFilters}\n              clearCollectionFilters={clearCollectionFilters}\n            />\n          </Row>\n          <InfiniteScroll\n            next={loadMore}\n            hasMore={hasNext ?? false}\n            loader={\n              Boolean(hasNext && ownerAssets?.length) && <LoadingAssets count={DEFAULT_WALLET_ASSET_QUERY_AMOUNT} />\n            }\n            dataLength={ownerAssets?.length ?? 0}\n            className={ownerAssets?.length ? assetList : undefined}\n            style={{ overflow: 'unset' }}\n          >\n            {ownerAssets?.length\n              ? ownerAssets.map((asset, index) => (\n                  <div key={index}>\n                    <ViewMyNftsAsset\n                      asset={asset}\n                      mediaShouldBePlaying={asset.tokenId === currentTokenPlayingMedia}\n                      setCurrentTokenPlayingMedia={setCurrentTokenPlayingMedia}\n                      hideDetails={sellAssets.length > 0}\n                    />\n                  </div>\n                ))\n              : null}\n          </InfiniteScroll>\n        </AnimatedBox>\n      )}\n    </Column>\n  )\n}\n\nconst CollectionFiltersRow = ({\n  collections,\n  collectionFilters,\n  setCollectionFilters,\n  clearCollectionFilters,\n}: {\n  collections: WalletCollection[]\n  collectionFilters: Array<string>\n  setCollectionFilters: (address: string) => void\n  clearCollectionFilters: Dispatch<SetStateAction<void>>\n}) => {\n  const getCollection = (collectionAddress: string) => {\n    return collections?.find((collection) => collection.address === collectionAddress)\n  }\n  const handleClearAllClick = useCallback(() => clearCollectionFilters(), [clearCollectionFilters])\n  return (\n    <Row paddingY=\"18\" gap=\"8\" flexWrap=\"wrap\">\n      {Boolean(collectionFilters?.length) &&\n        collectionFilters.map((collectionAddress, index) => (\n          <CollectionFilterItem\n            collection={getCollection(collectionAddress)}\n            key={`CollectionFilterItem-${collectionAddress}-${index}`}\n            setCollectionFilters={setCollectionFilters}\n          />\n        ))}\n      {Boolean(collectionFilters?.length) && <ClearAllButton onClick={handleClearAllClick}>Clear all</ClearAllButton>}\n    </Row>\n  )\n}\n\nconst CollectionFilterItem = ({\n  collection,\n  setCollectionFilters,\n}: {\n  collection?: WalletCollection\n  setCollectionFilters: (address: string) => void\n}) => {\n  if (!collection) return null\n  return (\n    <Row\n      justifyContent=\"center\"\n      paddingTop=\"6\"\n      paddingRight=\"6\"\n      paddingBottom=\"6\"\n      paddingLeft=\"12\"\n      borderRadius=\"8\"\n      background=\"surface3\"\n      fontSize=\"14\"\n    >\n      <Box as=\"img\" borderRadius=\"round\" width=\"20\" height=\"20\" src={collection.image} />\n      <Box marginLeft=\"6\" className={styles.collectionFilterBubbleText}>\n        {collection?.name}\n      </Box>\n      <Box\n        color=\"neutral2\"\n        background=\"none\"\n        height=\"28\"\n        width=\"28\"\n        padding=\"0\"\n        as=\"button\"\n        border=\"none\"\n        cursor=\"pointer\"\n        onClick={() => setCollectionFilters(collection.address)}\n      >\n        <CrossIcon />\n      </Box>\n    </Row>\n  )\n}\n","import { WalletCollection } from '../../types'\n\nexport const OSCollectionsFetcher = async ({ params }: any): Promise<WalletCollection[]> => {\n  let hasEmptyFields = false\n\n  for (const v of Object.values(params)) {\n    if (v === undefined) {\n      hasEmptyFields = true\n    }\n  }\n  if (hasEmptyFields) return []\n\n  const r = await fetch(`https://api.opensea.io/api/v1/collections?${new URLSearchParams(params).toString()}`)\n  const walletCollections = await r.json()\n  if (walletCollections) {\n    return walletCollections\n      .filter((collection: any) => collection.primary_asset_contracts.length)\n      .map((collection: any) => ({\n        address: collection.primary_asset_contracts[0].address,\n        name: collection.name,\n        image: collection.image_url,\n        count: collection.owned_asset_count,\n      }))\n  } else {\n    return []\n  }\n}\n","import { Trans } from '@lingui/macro'\nimport { InterfacePageName } from '@uniswap/analytics-events'\nimport { useWeb3React } from '@web3-react/core'\nimport { Trace } from 'analytics'\nimport { useToggleAccountDrawer } from 'components/AccountDrawer'\nimport { ButtonPrimary } from 'components/Button'\nimport { XXXL_BAG_WIDTH } from 'nft/components/bag/Bag'\nimport { ListPage } from 'nft/components/profile/list/ListPage'\nimport { ProfilePage } from 'nft/components/profile/view/ProfilePage'\nimport { useBag, useProfilePageState, useSellAsset, useWalletCollections } from 'nft/hooks'\nimport { ProfilePageStateType } from 'nft/types'\nimport { useEffect, useRef } from 'react'\nimport styled from 'styled-components'\nimport { BREAKPOINTS } from 'theme'\nimport { ThemedText } from 'theme/components'\n\nimport { LIST_PAGE_MARGIN, LIST_PAGE_MARGIN_MOBILE } from './shared'\n\nconst ProfilePageWrapper = styled.div`\n  height: 100%;\n  width: 100%;\n  scrollbar-width: none;\n\n  @media screen and (min-width: ${BREAKPOINTS.lg}px) {\n    height: auto;\n  }\n`\n\nconst LoadedAccountPage = styled.div<{ cartExpanded: boolean; isListingNfts: boolean }>`\n  width: calc(\n    100% -\n      ${({ cartExpanded, isListingNfts }) =>\n        isListingNfts ? LIST_PAGE_MARGIN * 2 : cartExpanded ? XXXL_BAG_WIDTH : 0}px\n  );\n  margin: 0px ${({ isListingNfts }) => (isListingNfts ? LIST_PAGE_MARGIN : 0)}px;\n\n  @media screen and (max-width: ${BREAKPOINTS.sm}px) {\n    width: calc(100% - ${({ isListingNfts }) => (isListingNfts ? LIST_PAGE_MARGIN_MOBILE * 2 : 0)}px);\n    margin: 0px ${({ isListingNfts }) => (isListingNfts ? LIST_PAGE_MARGIN_MOBILE : 0)}px;\n  }\n`\n\nconst Center = styled.div`\n  left: 50%;\n  top: 40%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: fixed;\n  white-space: nowrap;\n`\n\nconst ConnectWalletButton = styled(ButtonPrimary)`\n  width: min-content;\n  white-space: nowrap;\n  border-radius: 12px;\n  padding: 14px 18px;\n  border: none;\n`\n\nexport default function Profile() {\n  const sellPageState = useProfilePageState((state) => state.state)\n  const setSellPageState = useProfilePageState((state) => state.setProfilePageState)\n  const resetSellAssets = useSellAsset((state) => state.reset)\n  const clearCollectionFilters = useWalletCollections((state) => state.clearCollectionFilters)\n\n  const { account } = useWeb3React()\n  const accountRef = useRef(account)\n  const toggleWalletDrawer = useToggleAccountDrawer()\n\n  useEffect(() => {\n    if (accountRef.current !== account) {\n      accountRef.current = account\n      resetSellAssets()\n      setSellPageState(ProfilePageStateType.VIEWING)\n      clearCollectionFilters()\n    }\n  }, [account, resetSellAssets, setSellPageState, clearCollectionFilters])\n  const cartExpanded = useBag((state) => state.bagExpanded)\n  const isListingNfts = sellPageState === ProfilePageStateType.LISTING\n\n  return (\n    <Trace page={InterfacePageName.NFT_PROFILE_PAGE} shouldLogImpression>\n      <ProfilePageWrapper>\n        {account ? (\n          <LoadedAccountPage cartExpanded={cartExpanded} isListingNfts={isListingNfts}>\n            {!isListingNfts ? <ProfilePage /> : <ListPage />}\n          </LoadedAccountPage>\n        ) : (\n          <Center>\n            <ThemedText.HeadlineMedium lineHeight=\"36px\" color=\"neutral2\" fontWeight=\"535\" marginBottom=\"24px\">\n              <Trans>No items to display</Trans>\n            </ThemedText.HeadlineMedium>\n            <ConnectWalletButton onClick={toggleWalletDrawer}>\n              <ThemedText.SubHeader color=\"white\" lineHeight=\"20px\">\n                <Trans>Connect wallet</Trans>\n              </ThemedText.SubHeader>\n            </ConnectWalletButton>\n          </Center>\n        )}\n      </ProfilePageWrapper>\n    </Trace>\n  )\n}\n","export const LIST_PAGE_MARGIN = 40\nexport const LIST_PAGE_MARGIN_MOBILE = 16\n"],"names":["ModalWrapper","styled","Column","Z_INDEX","modal","theme","surface1","surface3","deprecated_deepShadow","BREAKPOINTS","sm","CloseIconWrapper","div","CloseIcon","X","HazardIconWrap","ContinueButton","ButtonPrimary","EditListings","span","accent1","BelowFloorWarningModal","listingsBelowFloor","closeModal","startListing","useTheme","formatDelta","useFormatter","Portal","width","height","onClick","AlertTriangle","color","critical","ThemedText","HeadlineSmall","lineHeight","textAlign","BodyPrimary","length","price","floorPrice","e","preventDefault","stopPropagation","Overlay","RemoveIconWrap","hovered","TitleRow","Row","SetPriceMethod","SAME_PRICE","FLOOR_PRICE","LAST_PRICE","CUSTOM","WarningType","BELOW_FLOOR","ALREADY_LISTED","NONE","LOOKSRARE_MARKETPLACE_CONTRACT_721","OPENSEA_DEFAULT_CROSS_CHAIN_CONDUIT_KEY","OPENSEA_CROSS_CHAIN_CONDUIT","OPENSEA_SEAPORT_V1_5_CONTRACT","OPENSEA_KEY_TO_CONDUIT","INVERSE_BASIS_POINTS","newX2Y2Order","async","payload","body","JSON","stringify","ac","AbortController","req","Request","method","headers","signal","timeout","setTimeout","abort","res","fetch","json","code","clearTimeout","getX2Y2OrderId","collectionAddress","tokenId","url","r","data","id","createLooksRareOrder","success","orderItemParamType","orderParamTypes","orderParamType","signOrderData","web3Provider","order","orderData","defaultAbiCoder","encode","salt","user","network","intent","delegateType","deadline","currency","dataMask","items","orderHash","keccak256","orderSig","send","slice","s","v","parseInt","fixSignature","encodeOrder","createSellOrder","nftStandard","NftStandard","Erc721","randomHex","BigNumber","from","randomBytes","toHexString","hexZeroPad","randomSalt","AddressZero","map","item","tokens","signVersion","ListingMarkets","name","fee","createConsiderationItem","basisPoints","recipient","amount","getConsiderationItems","asset","signerAddress","creatorFeeBasisPoints","openSeaBasisPoints","find","market","sellerBasisPoints","creatorFee","mul","toString","sellerFee","openSeaFee","asset_contract","payout_address","undefined","signListing","marketplace","signer","provider","looksRareNonce","setStatus","seaport","Seaport","conduitKeyToConduit","overrides","defaultConduitKey","seaportVersion","getAddress","listingPrice","newListings","listing","expirationTime","address","listingInWei","parseEther","considerationItems","filter","executeAllActions","createOrder","offer","itemType","tokenType","ItemType","ERC721","ERC1155","token","identifier","consideration","endTime","zone","ZERO_ADDRESS","allowPartialFills","seaportV15Order","protocol_address","ListingStatus","PENDING","ms","PostOpenSeaSellOrder","APPROVED","FAILED","error","REJECTED","addresses","addressesByNetwork","SupportedChainId","MAINNET","currentTime","Math","round","Date","now","makerOrder","isOrderAsk","collection","strategy","STRATEGY_STANDARD_SALE","WETH","nonce","startTime","minPercentageToAsk","sub","toNumber","params","signatureHash","signMakerOrder","signature","orderItem","prevOrderId","isBundle","bundleName","bundleDesc","orderIds","changePrice","Boolean","isCollection","resp","approveCollectionRow","collectionRow","setCollectionStatusAndCallback","callback","SIGNING","spender","TRANSFER_MANAGER_ERC721","operator","contract","Contract","isApprovedForAll","approvalTransaction","setApprovalForAll","wait","status","approveCollection","newStatus","signListingRow","getLooksRareNonce","setLooksRareNonce","setListingStatusAndCallback","getTotalEthValue","sellAssets","total","reduce","maxListing","a","b","maxFee","Number","EPSILON","useSubscribeListingState","useSellAsset","state","setListings","setCollectionsRequiringApproval","useNFTList","useEffect","newCollectionsToApprove","forEach","marketplaces","newListing","image","smallImageUrl","DEFINED","push","some","newCollectionRow","image_url","isVerified","collectionIsVerified","getListings","getRoyalty","listingMarket","StyledListingButton","BaseButton","showResolveIssues","deprecated_accentTextLightPrimary","missingPrices","ListingButton","toggleShowResolveIssues","issues","setIssues","showWarning","setShowWarning","useState","isMobile","useIsMobile","listingsMissingPrice","useMemo","missingExpiration","overMaxExpiration","listingsAboveSellOrderFloor","isNaN","overrideFloorPrice","floor_sell_order_price","Erc1155","findListingIssues","foundIssues","ContentColumn","failed","opacify","ContentRowWrapper","active","CollectionIcon","img","AssetIcon","MarketplaceIcon","ContentName","SubHeaderSmall","neutral1","ProceedText","neutral2","FailedText","StyledVerifiedIcon","VerifiedIcon","IconWrapper","ButtonRow","failedButtonStyle","css","RemoveButton","button","RetryButton","ContentRow","row","isCollectionApprovalSection","removeRow","rowRef","useRef","current","ref","src","getMarketplaceIcon","Loader","stroke","neutral3","Check","XOctagon","justify","SectionHeader","SectionTitle","SubHeader","approved","SectionArrow","ChevronUpIcon","TRANSITION_DURATIONS","medium","SectionBody","colors","gray650","ScrollBarStyles","StyledInfoIcon","Info","ContentRowContainer","Section","APPROVE","SIGN","ListModalSection","sectionType","content","toggleSection","removeAssetMarketplace","allContentApproved","uniqueCollections","collections","Set","listingRow","ListingModalWindowActive","fill","ListingModalWindowClosed","marginLeft","secondaryColor","marginBottom","BodySmall","MouseoverTooltip","text","SuccessImage","numImages","SuccessImageWrapper","ProceedsColumn","buttonStyle","ReturnButton","TweetButton","TweetRow","SuccessScreen","overlayClick","formatNumberOrString","chainId","useWeb3React","nativeCurrency","useNativeCurrency","formatCurrencyAmount","totalEthListingValue","parsedAmount","tryParseCurrencyAmount","usdcValue","useStablecoinValue","pluralize","size","cursor","imageUrl","align","input","type","NumberType","NFTToken","FiatTokenPrice","flexWrap","window","location","reload","href","generateTweetForList","target","rel","Twitter","ListModalWrapper","ListModal","getSigner","trace","useTrace","InterfaceModalName","NFT_LISTING","collectionsRequiringApproval","listings","openSection","toggleOpenSection","useReducer","usdcAmount","allCollectionsApproved","every","allListingsApproved","sendAnalyticsEvent","NFTEventName","NFT_LISTING_COMPLETED","signatures_approved","list_quantity","usd_value","signListings","closeModalOnClick","useCallback","Trace","DropdownWrapper","$width","DropdownRow","Dropdown","dropDownOptions","option","displayText","isSelected","PriceTextInputWrapper","InputWrapper","borderColor","CurrencyWrapper","listPrice","GlobalPriceIcon","WarningRow","WarningMessage","$color","md","WarningAction","getWarningMessage","warning","message","PriceTextInput","setListPrice","isGlobalPrice","setGlobalOverride","globalOverride","warningType","setWarningType","removeSellAsset","inputRef","percentBelowFloor","warningColor","red400","deprecated_accentWarning","value","useUpdateInputAndWarnings","NumericInput","as","pattern","borderStyle","className","placeholder","default","backgroundColor","onChange","event","includes","parseFloat","val","BrokenLinkIcon","Link","FeeWrap","RoyaltyContainer","iconStyles","MarketIcon","FeePercent","MaxFeeContainer","RoyaltyTooltip","selectedMarkets","fees","maxRoyalty","max","marginRight","LastPriceInfo","lg","FloorPriceInfo","RemoveMarketplaceWrap","MarketIconsWrapper","MarketIconWrapper","index","ExpandMarketIconWrapper","FeeColumnWrapper","FeeWrapper","ReturnColumn","MarketplaceRow","globalPriceMethod","globalPrice","setGlobalPrice","removeMarket","expandMarketplaceRows","toggleExpandMarketplaceRows","rowHovered","setAssetListPrice","marketIconHovered","toggleMarketIconHovered","marketRowHovered","toggleMarketRowHovered","showGlobalPrice","setPrice","selectedMarket","feeInEth","userReceives","useHandleGlobalPriceToggle","lastPrice","useSyncPriceWithGlobalMethod","onMouseEnter","onMouseLeave","flex","alt","RowsExpandedIcon","RowsCollpsedIcon","placement","EthPriceDisplay","ethPrice","ethUsdPrice","useNativeUsdPrice","FiatNFTToken","NFTListRowWrapper","RemoveIconContainer","opacity","hover","NFTInfoWrapper","NFTImage","HideTextOverflow","TokenInfoWrapper","TokenName","CollectionName","MarketPlaceRowWrapper","NFTListRow","removeAsset","localMarkets","setLocalMarkets","toggleHovered","parse","Trash2","style","oldMarket","TableHeader","surface2","NFTHeader","PriceHeaders","LastPriceHeader","FloorPriceHeader","DropdownAndHeaderWrapper","DropdownPromptContainer","DropdownPrompt","DropdownChevron","ChevronDown","isOpen","transition","duration","timing","fast","ease","DropdownContainer","FeeUserReceivesSharedStyles","FeeHeader","UserReceivesHeader","RowDivider","hr","NFTListingsGrid","setGlobalPriceMethod","showDropdown","toggleShowDropdown","dropdownRef","useOnClickOutside","priceDropdownOptions","prompt","indexOf","MarketplaceRowWrapper","FeeText","HeaderButtonWrap","SMALL_MEDIA_BREAKPOINT","HeaderButtonContentWrapper","totalSelected","Chevron","modalBackdrop","SelectMarketplacesDropdown","setSelectedMarkets","toggleIsOpen","dropdownDisplayText","buttonTextMedium","themeVars","toggleSelected","selected","gap","caption","Checkbox","checked","isInvalid","dropdown","ErrorMessage","WarningIcon","Duration","hour","day","week","month","ErrorState","valid","empty","overMax","SetDurationModal","setDuration","setAmount","errorState","setErrorState","setGlobalExpiration","durationDropdownRef","durationOptions","expiration","convertDurationToExpiration","flexShrink","durationFactor","ListingHeader","xs","ArrowContainer","BackArrow","ArrowLeft","TitleWrapper","ButtonsWrapper","MarketWrap","section","ListingHeaderRow","GridWrapper","FloatingConfirmationBar","LIST_PAGE_MARGIN","maxWidth","under_dropdown","deprecated_shallowShadow","LIST_PAGE_MARGIN_MOBILE","UsdValue","ProceedsAndButtonWrapper","ProceedsWrapper","EthValueWrapper","ListPage","setProfilePageState","setSellPageState","useProfilePageState","setGlobalMarketplaces","showListModal","toggleShowListModal","startListingEventProperties","collection_addresses","token_ids","Array","startListingFlow","NFT_SELL_START_LISTING","console","log","statusText","looksRareNonceFetcher","PAUSED","BannerText","ProfilePageStateType","VIEWING","ItemsContainer","LongLoadingBubble","LoadingBubble","SmallLoadingBubble","MobileMenuHeader","LoadingCollectionItem","display","justifyContent","paddingLeft","paddingRight","Box","checkbox","aria-hidden","FilterSidebar","fetchNextPage","hasNextPage","isFetchingNextPage","walletCollections","collectionFilters","useWalletCollections","setCollectionFilters","isFiltersExpanded","setFiltersExpanded","useFiltersExpanded","sidebarX","useSpring","config","easing","easings","easeOutSine","hideSearch","WALLET_COLLECTIONS_PAGINATION_LIMIT","AnimatedBox","position","top","left","zIndex","transform","to","x","background","paddingTop","XMarkIcon","CollectionSelect","collectionSearchText","setCollectionSearchText","displayCollections","setDisplayCollections","filtered","toLowerCase","itemKey","itemCount","loadMoreItems","noop","isItemLoaded","CollectionFilterRow","CollectionItem","subhead","marginTop","paddingBottom","borderRadius","maxHeight","CollectionFilterSearch","AutoSizer","disableWidth","InfiniteLoader","onItemsRendered","FixedSizeList","itemSize","Input","autoComplete","currentTarget","isCheckboxSelected","setCheckboxSelected","isChecked","handleCheckbox","overflowX","overflowY","fontWeight","whiteSpace","textOverflow","overflow","minHeight","count","SkeletonBodyWrapper","SkeletonRowWrapper","AccountDetailsSkeletonWrapper","ProfileDetailsSkeleton","FilterBarSkeletonWrapper","FilterButtonSkeleton","SellButtonSkeleton","ProfileAssetCardSkeleton","ProfileAssetCardDisplaySectionSkeleton","assetList","DEFAULT_WALLET_ASSET_QUERY_AMOUNT","_","loadingAsset","ProfileBodyLoadingSkeleton","ViewMyNftsAsset","mediaShouldBePlaying","setCurrentTokenPlayingMedia","hideDetails","selectSellAsset","cartExpanded","useBag","bagExpanded","toggleCart","toggleBag","navigate","useNavigate","handleSelect","NFT_SELL_ITEM_ADDED","collection_address","token_id","isDisabled","susFlag","primaryInfo","primaryInfoIcon","secondaryInfo","selectedInfo","notSelectedInfo","disabledInfo","NftCard","selectAsset","unselectAsset","onButtonClick","onCardClick","detailsHref","testId","ProfilePageColumn","ScreenBreakpointsPaddings","ProfileHeader","breakpoint","EmptyStateContainer","ProfilePage","useWalletBalance","setWalletCollections","resetSellAssets","reset","ownerCollectionsData","isSuccess","useInfiniteQuery","pageParam","hasEmptyFields","Object","values","URLSearchParams","primary_asset_contracts","owned_asset_count","OSCollectionsFetcher","asset_owner","offset","limit","nextPage","getNextPageParam","lastGroup","refetchInterval","refetchIntervalInBackground","refetchOnWindowFocus","refetchOnMount","ownerCollections","pages","page","flat","alignItems","Suspense","fallback","ProfilePageNfts","paddingX","paddingY","borderWidth","bottom","fontSize","clearCollectionFilters","isBagExpanded","currentTokenPlayingMedia","walletAssets","ownerAssets","loading","hasNext","loadMore","useNftBalance","gridX","EmptyWalletModule","FilterButton","CollectionFiltersRow","InfiniteScroll","next","hasMore","loader","LoadingAssets","dataLength","getCollection","handleClearAllClick","CollectionFilterItem","ClearAllButton","padding","border","CrossIcon","ProfilePageWrapper","LoadedAccountPage","isListingNfts","XXXL_BAG_WIDTH","Center","ConnectWalletButton","Profile","sellPageState","account","accountRef","toggleWalletDrawer","useToggleAccountDrawer","LISTING","InterfacePageName","NFT_PROFILE_PAGE","shouldLogImpression","HeadlineMedium"],"sourceRoot":""}