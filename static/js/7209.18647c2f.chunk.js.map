{"version":3,"file":"static/js/7209.18647c2f.chunk.js","mappings":"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","sources":["components/Icons/Share.tsx","components/Tokens/TokenTable/FilterOption.tsx","components/Tokens/TokenTable/TimeSelector.tsx","components/Tokens/TokenDetails/AddressSection.tsx","components/Tokens/TokenDetails/BalanceSummary.tsx","components/Charts/AnimatedInLineChart.tsx","components/Charts/FadeInLineChart.tsx","components/Charts/PriceChart/ChartModel.ts","components/Charts/PriceChart/format.ts","components/Charts/PriceChart/index.tsx","components/Tokens/TokenDetails/TimeSelector.tsx","components/Tokens/TokenDetails/ChartSection.tsx","components/Tokens/TokenDetails/MobileBalanceSummaryFooter.tsx","components/Tokens/TokenDetails/ShareButton.tsx","components/TokenSafety/TokenSafetyMessage.tsx","hooks/useGlobalChainSwitch.ts","assets/svg/eye.svg","components/Tokens/TokenDetails/InvalidTokenDetails.tsx","hooks/useSelectChain.ts","components/Icons/Globe.tsx","components/Icons/TwitterX.tsx","components/Tokens/TokenDetails/TokenDescription.tsx","components/Tokens/TokenDetails/index.tsx","pages/TokenDetails/index.tsx","utils/addressesAreEquivalent.ts"],"sourcesContent":["import { ComponentProps } from 'react'\n\nexport const Share = (props: ComponentProps<'svg'>) => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <path\n      d=\"M13 4.99092C13 4.09592 14.094 3.66096 14.709 4.31196L20.637 10.582C21.121 11.094 21.121 11.894 20.637 12.406L14.709 18.676C14.094 19.326 13 18.891 13 17.997V14.4919C5.437 14.4919 4.93602 16.962 4.96802 19.529C4.97402 20.019 4.32501 20.1811 4.08301 19.7561C3.46701 18.6751 3 17.1999 3 15.4909C3 8.99592 10 8.49702 13 8.49702V4.99092Z\"\n      fill=\"#9B9B9B\"\n    />\n  </svg>\n)\n","import styled from 'styled-components'\nconst FilterOption = styled.button<{ active: boolean; highlight?: boolean }>`\n  height: 100%;\n  color: ${({ theme, active }) => (active ? theme.neutral1 : theme.neutral1)};\n  background-color: ${({ theme, active }) => (active ? theme.surface1 : theme.surface1)};\n  margin: 0;\n  padding: 6px 6px 6px 14px;\n  border-radius: 12px;\n  font-size: 16px;\n  line-height: 24px;\n  font-weight: 535;\n  transition-duration: ${({ theme }) => theme.transition.duration.fast};\n  border: 1px solid ${({ theme }) => theme.surface3};\n  outline: ${({ theme, active, highlight }) => (active && highlight ? `1px solid ${theme.accent1}` : 'none')};\n\n  :hover {\n    cursor: pointer;\n    background-color: ${({ theme, active }) => (active ? theme.accent2 : theme.surface2)};\n    opacity: ${({ theme, active }) => (active ? theme.opacity.hover : 1)};\n  }\n  :focus {\n    background-color: ${({ theme, active }) => (active ? theme.surface2 : theme.surface3)};\n  }\n`\nexport default FilterOption\n","import { Trans } from '@lingui/macro'\nimport { useInfoExplorePageEnabled } from 'featureFlags/flags/infoExplore'\nimport { TimePeriod } from 'graphql/data/util'\nimport { useOnClickOutside } from 'hooks/useOnClickOutside'\nimport { useAtom } from 'jotai'\nimport { useRef } from 'react'\nimport { Check, ChevronDown, ChevronUp } from 'react-feather'\nimport { useModalIsOpen, useToggleModal } from 'state/application/hooks'\nimport { ApplicationModal } from 'state/application/reducer'\nimport styled, { css, useTheme } from 'styled-components'\n\nimport { MOBILE_MEDIA_BREAKPOINT, SMALL_MEDIA_BREAKPOINT } from '../constants'\nimport { filterTimeAtom } from '../state'\nimport FilterOption from './FilterOption'\n\nexport const DISPLAYS: Record<TimePeriod, string> = {\n  [TimePeriod.HOUR]: '1H',\n  [TimePeriod.DAY]: '1D',\n  [TimePeriod.WEEK]: '1W',\n  [TimePeriod.MONTH]: '1M',\n  [TimePeriod.YEAR]: '1Y',\n}\n\nexport const ORDERED_TIMES: TimePeriod[] = [\n  TimePeriod.HOUR,\n  TimePeriod.DAY,\n  TimePeriod.WEEK,\n  TimePeriod.MONTH,\n  TimePeriod.YEAR,\n]\n\nconst InternalMenuItem = styled.div`\n  flex: 1;\n  padding: 8px;\n  color: ${({ theme }) => theme.neutral1};\n  border-radius: 8px;\n\n  :hover {\n    cursor: pointer;\n    text-decoration: none;\n  }\n`\nconst InternalLinkMenuItem = styled(InternalMenuItem)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 12px 8px;\n  justify-content: space-between;\n  text-decoration: none;\n  cursor: pointer;\n\n  :hover {\n    background-color: ${({ theme }) => theme.surface3};\n    text-decoration: none;\n  }\n`\nconst MenuTimeFlyout = styled.span<{ isInfoExplorePageEnabled: boolean }>`\n  min-width: ${({ isInfoExplorePageEnabled }) => (isInfoExplorePageEnabled ? '150px' : '240px')};\n  max-height: 300px;\n  overflow: auto;\n  background-color: ${({ theme }) => theme.surface1};\n  box-shadow: ${({ theme }) => theme.deprecated_deepShadow};\n  border: 0.5px solid ${({ theme }) => theme.surface3};\n  border-radius: 12px;\n  padding: 8px;\n  display: flex;\n  flex-direction: column;\n  font-size: 16px;\n  position: absolute;\n  top: 48px;\n  z-index: 100;\n  left: 0px;\n\n  ${({ isInfoExplorePageEnabled }) =>\n    !isInfoExplorePageEnabled &&\n    css`\n      @media only screen and (max-width: ${SMALL_MEDIA_BREAKPOINT}) {\n        left: unset;\n        right: 0px;\n      }\n    `}\n`\nconst StyledMenu = styled.div<{ isInfoExplorePageEnabled: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  border: none;\n  text-align: left;\n\n  ${({ isInfoExplorePageEnabled }) =>\n    !isInfoExplorePageEnabled &&\n    css`\n      @media only screen and (max-width: ${MOBILE_MEDIA_BREAKPOINT}) {\n        width: 72px;\n      }\n    `}\n`\nconst StyledMenuContent = styled.div<{ isInfoExplorePageEnabled: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  gap: 8px;\n  align-items: center;\n  border: none;\n  width: 100%;\n  vertical-align: middle;\n  ${({ isInfoExplorePageEnabled }) => isInfoExplorePageEnabled && 'white-space: nowrap;'}\n`\nconst Chevron = styled.span<{ open: boolean }>`\n  padding-top: 1px;\n  color: ${({ open, theme }) => (open ? theme.neutral1 : theme.neutral2)};\n`\n\n// TODO: change this to reflect data pipeline\nexport default function TimeSelector() {\n  const theme = useTheme()\n  const node = useRef<HTMLDivElement | null>(null)\n  const open = useModalIsOpen(ApplicationModal.TIME_SELECTOR)\n  const toggleMenu = useToggleModal(ApplicationModal.TIME_SELECTOR)\n  useOnClickOutside(node, open ? toggleMenu : undefined)\n  const [activeTime, setTime] = useAtom(filterTimeAtom)\n\n  const isInfoExplorePageEnabled = useInfoExplorePageEnabled()\n\n  return (\n    <StyledMenu ref={node} isInfoExplorePageEnabled={isInfoExplorePageEnabled}>\n      <FilterOption onClick={toggleMenu} aria-label=\"timeSelector\" active={open} data-testid=\"time-selector\">\n        <StyledMenuContent isInfoExplorePageEnabled={isInfoExplorePageEnabled}>\n          {isInfoExplorePageEnabled ? (\n            <>\n              {DISPLAYS[activeTime]} <Trans>volume</Trans>\n            </>\n          ) : (\n            DISPLAYS[activeTime]\n          )}\n          <Chevron open={open}>\n            {open ? (\n              <ChevronUp width={20} height={15} viewBox=\"0 0 24 20\" />\n            ) : (\n              <ChevronDown width={20} height={15} viewBox=\"0 0 24 20\" />\n            )}\n          </Chevron>\n        </StyledMenuContent>\n      </FilterOption>\n      {open && (\n        <MenuTimeFlyout isInfoExplorePageEnabled={isInfoExplorePageEnabled}>\n          {ORDERED_TIMES.map((time) => (\n            <InternalLinkMenuItem\n              key={DISPLAYS[time]}\n              data-testid={DISPLAYS[time]}\n              onClick={() => {\n                setTime(time)\n                toggleMenu()\n              }}\n            >\n              {isInfoExplorePageEnabled ? (\n                <div>\n                  {DISPLAYS[time]} <Trans>volume</Trans>\n                </div>\n              ) : (\n                <div>{DISPLAYS[time]}</div>\n              )}\n              {time === activeTime && <Check color={theme.accent1} size={16} />}\n            </InternalLinkMenuItem>\n          ))}\n        </MenuTimeFlyout>\n      )}\n    </StyledMenu>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport styled from 'styled-components'\nimport { CopyContractAddress, ThemedText } from 'theme/components'\nimport { shortenAddress } from 'utils/addresses'\n\nconst ContractAddressSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  color: ${({ theme }) => theme.neutral2};\n  font-size: 0.9em;\n  gap: 4px;\n  padding: 4px 0px;\n`\n\nconst ContractAddress = styled.button`\n  display: flex;\n  color: ${({ theme }) => theme.neutral1};\n  gap: 10px;\n  align-items: center;\n  background: transparent;\n  border: none;\n  min-height: 38px;\n  padding: 0px;\n`\n\nexport default function AddressSection({ address }: { address: string }) {\n  return (\n    <ContractAddressSection>\n      <ThemedText.SubHeaderSmall>\n        <Trans>Contract address</Trans>\n      </ThemedText.SubHeaderSmall>\n      <ContractAddress>\n        <CopyContractAddress address={address} truncatedAddress={shortenAddress(address, 2, 3)} />\n      </ContractAddress>\n    </ContractAddressSection>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { Currency } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport { PortfolioLogo } from 'components/AccountDrawer/MiniPortfolio/PortfolioLogo'\nimport { getChainInfo } from 'constants/chainInfo'\nimport { asSupportedChain } from 'constants/chains'\nimport { SupportedChainId } from 'constants/types'\nimport { useStablecoinValue } from 'hooks/useStablecoinPrice'\nimport useCurrencyBalance from 'lib/hooks/useCurrencyBalance'\nimport { useMemo } from 'react'\nimport styled, { useTheme } from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\n\nconst BalancesCard = styled.div`\n  border-radius: 16px;\n  color: ${({ theme }) => theme.neutral1};\n  display: none;\n  height: fit-content;\n  padding: 16px;\n  width: 100%;\n\n  // 768 hardcoded to match NFT-redesign navbar breakpoints\n  // src/nft/css/sprinkles.css.ts\n  // change to match theme breakpoints when this navbar is updated\n  @media screen and (min-width: 768px) {\n    display: flex;\n  }\n`\nconst BalanceSection = styled.div`\n  height: fit-content;\n  width: 100%;\n`\nconst BalanceRow = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n  margin-top: 12px;\n`\nconst BalanceItem = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst BalanceContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 8px;\n  flex: 1;\n`\n\nconst BalanceAmountsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`\n\nconst StyledNetworkLabel = styled.div`\n  color: ${({ color }) => color};\n  font-size: 12px;\n  line-height: 16px;\n`\n\nexport default function BalanceSummary({ token }: { token: Currency }) {\n  const { account, chainId } = useWeb3React()\n  const theme = useTheme()\n  const { label, color } = getChainInfo(asSupportedChain(chainId) ?? SupportedChainId.MAINNET)\n  const balance = useCurrencyBalance(account, token)\n  const { formatCurrencyAmount } = useFormatter()\n  const formattedBalance = formatCurrencyAmount({\n    amount: balance,\n    type: NumberType.TokenNonTx,\n  })\n  const formattedUsdValue = formatCurrencyAmount({\n    amount: useStablecoinValue(balance),\n    type: NumberType.FiatTokenStats,\n  })\n\n  const currencies = useMemo(() => [token], [token])\n\n  if (!account || !balance) {\n    return null\n  }\n  return (\n    <BalancesCard>\n      <BalanceSection>\n        <ThemedText.SubHeaderSmall color={theme.neutral1}>\n          <Trans>Your balance on {label}</Trans>\n        </ThemedText.SubHeaderSmall>\n        <BalanceRow>\n          <PortfolioLogo currencies={currencies} chainId={token.chainId} size=\"2rem\" />\n          <BalanceContainer>\n            <BalanceAmountsContainer>\n              <BalanceItem>\n                <ThemedText.SubHeader>\n                  {formattedBalance} {token.symbol}\n                </ThemedText.SubHeader>\n              </BalanceItem>\n              <BalanceItem>\n                <ThemedText.BodyPrimary>{formattedUsdValue}</ThemedText.BodyPrimary>\n              </BalanceItem>\n            </BalanceAmountsContainer>\n            <StyledNetworkLabel color={color}>{label}</StyledNetworkLabel>\n          </BalanceContainer>\n        </BalanceRow>\n      </BalanceSection>\n    </BalancesCard>\n  )\n}\n","import { Group } from '@visx/group'\nimport { LinePath } from '@visx/shape'\nimport { easeSinOut } from 'd3'\nimport ms from 'ms'\nimport React from 'react'\nimport { useEffect, useRef, useState } from 'react'\nimport { animated, useSpring } from 'react-spring'\nimport { useTheme } from 'styled-components'\n\nimport { LineChartProps } from './LineChart'\n\ntype AnimatedInLineChartProps<T> = Omit<LineChartProps<T>, 'height' | 'width' | 'children'>\n\nconst config = {\n  duration: ms(`0.8s`),\n  easing: easeSinOut,\n}\n\n// code reference: https://airbnb.io/visx/lineradial\n\nfunction AnimatedInLineChart<T>({\n  data,\n  getX,\n  getY,\n  marginTop,\n  curve,\n  color,\n  strokeWidth,\n}: AnimatedInLineChartProps<T>) {\n  const lineRef = useRef<SVGPathElement>(null)\n  const [lineLength, setLineLength] = useState(0)\n  const [shouldAnimate, setShouldAnimate] = useState(false)\n  const [hasAnimatedIn, setHasAnimatedIn] = useState(false)\n\n  const spring = useSpring({\n    frame: shouldAnimate ? 0 : 1,\n    config,\n    onRest: () => {\n      setShouldAnimate(false)\n      setHasAnimatedIn(true)\n    },\n  })\n\n  // We need to check to see after the \"invisble\" line has been drawn\n  // what the length is to be able to animate in the line for the first time\n  // This will run on each render to see if there is a new line length\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => {\n    if (lineRef.current) {\n      const length = lineRef.current.getTotalLength()\n      if (length !== lineLength) {\n        setLineLength(length)\n      }\n      if (length > 0 && !shouldAnimate && !hasAnimatedIn) {\n        setShouldAnimate(true)\n      }\n    }\n  })\n  const theme = useTheme()\n  const lineColor = color ?? theme.accent1\n\n  return (\n    <Group top={marginTop}>\n      <LinePath curve={curve} x={getX} y={getY}>\n        {({ path }) => {\n          const d = path(data) || ''\n          return (\n            <>\n              <animated.path\n                d={d}\n                ref={lineRef}\n                strokeWidth={strokeWidth}\n                strokeOpacity={hasAnimatedIn ? 1 : 0}\n                fill=\"none\"\n                stroke={lineColor}\n              />\n              {shouldAnimate && lineLength !== 0 && (\n                <animated.path\n                  d={d}\n                  strokeWidth={strokeWidth}\n                  fill=\"none\"\n                  stroke={lineColor}\n                  strokeDashoffset={spring.frame.to((v) => v * lineLength)}\n                  strokeDasharray={lineLength}\n                />\n              )}\n            </>\n          )\n        }}\n      </LinePath>\n    </Group>\n  )\n}\n\nexport default React.memo(AnimatedInLineChart) as typeof AnimatedInLineChart\n","import { Group } from '@visx/group'\nimport { LinePath } from '@visx/shape'\nimport { easeCubicInOut } from 'd3'\nimport React from 'react'\nimport { useEffect, useRef, useState } from 'react'\nimport { animated, useSpring } from 'react-spring'\nimport { useTheme } from 'styled-components'\n\nimport { LineChartProps } from './LineChart'\n\ntype FadedInLineChartProps<T> = Omit<LineChartProps<T>, 'height' | 'width' | 'children'> & { dashed?: boolean }\n\nconst config = {\n  duration: 3000,\n  easing: easeCubicInOut,\n}\n\n// code reference: https://airbnb.io/visx/lineradial\n\nfunction FadedInLineChart<T>({\n  data,\n  getX,\n  getY,\n  marginTop,\n  curve,\n  color,\n  strokeWidth,\n  dashed,\n}: FadedInLineChartProps<T>) {\n  const lineRef = useRef<SVGPathElement>(null)\n  const [lineLength, setLineLength] = useState(0)\n  const [shouldAnimate, setShouldAnimate] = useState(false)\n  const [hasAnimatedIn, setHasAnimatedIn] = useState(false)\n\n  const spring = useSpring({\n    frame: shouldAnimate ? 0 : 1,\n    config,\n    onRest: () => {\n      setShouldAnimate(false)\n      setHasAnimatedIn(true)\n    },\n  })\n\n  // We need to check to see after the \"invisble\" line has been drawn\n  // what the length is to be able to animate in the line for the first time\n  // This will run on each render to see if there is a new line length\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => {\n    if (lineRef.current) {\n      const length = lineRef.current.getTotalLength()\n      if (length !== lineLength) {\n        setLineLength(length)\n      }\n      if (length > 0 && !shouldAnimate && !hasAnimatedIn) {\n        setShouldAnimate(true)\n      }\n    }\n  })\n  const theme = useTheme()\n  const lineColor = color ?? theme.accent1\n\n  return (\n    <Group top={marginTop}>\n      <LinePath curve={curve} x={getX} y={getY}>\n        {({ path }) => {\n          const d = path(data) || ''\n          return (\n            <>\n              <animated.path\n                d={d}\n                ref={lineRef}\n                strokeWidth={strokeWidth}\n                strokeOpacity={hasAnimatedIn ? 1 : spring.frame.to((v) => 1 - v)}\n                fill=\"none\"\n                stroke={lineColor}\n                strokeDasharray={dashed ? '4,4' : undefined}\n              />\n            </>\n          )\n        }}\n      </LinePath>\n    </Group>\n  )\n}\n\nexport default React.memo(FadedInLineChart) as typeof FadedInLineChart\n","import { ScaleLinear, scaleLinear } from 'd3'\nimport { PricePoint } from 'graphql/data/util'\n\nimport { cleanPricePoints, getPriceBounds } from './utils'\n\nexport enum ChartErrorType {\n  NO_DATA_AVAILABLE,\n  NO_RECENT_VOLUME,\n  INVALID_CHART,\n}\n\ntype ChartDimensions = {\n  width: number\n  height: number\n  marginTop: number\n  marginBottom: number\n}\n\nexport type ErroredChartModel = { error: ChartErrorType; dimensions: ChartDimensions }\n\nexport type ChartModel = {\n  prices: PricePoint[]\n  startingPrice: PricePoint\n  endingPrice: PricePoint\n  lastValidPrice: PricePoint\n  blanks: PricePoint[][]\n  timeScale: ScaleLinear<number, number>\n  priceScale: ScaleLinear<number, number>\n  dimensions: ChartDimensions\n  error: undefined\n}\n\ntype ChartModelArgs = { prices?: PricePoint[]; dimensions: ChartDimensions }\nexport function buildChartModel({ dimensions, prices }: ChartModelArgs): ChartModel | ErroredChartModel {\n  if (!prices) {\n    return { error: ChartErrorType.NO_DATA_AVAILABLE, dimensions }\n  }\n\n  const innerHeight = dimensions.height - dimensions.marginTop - dimensions.marginBottom\n  if (innerHeight < 0) {\n    return { error: ChartErrorType.INVALID_CHART, dimensions }\n  }\n\n  const { prices: fixedPrices, blanks, lastValidPrice } = cleanPricePoints(prices)\n  if (fixedPrices.length < 2 || !lastValidPrice) {\n    return { error: ChartErrorType.NO_RECENT_VOLUME, dimensions }\n  }\n\n  const startingPrice = prices[0]\n  const endingPrice = prices[prices.length - 1]\n  const { min, max } = getPriceBounds(prices)\n\n  // x-axis scale\n  const timeScale = scaleLinear().domain([startingPrice.timestamp, endingPrice.timestamp]).range([0, dimensions.width])\n\n  // y-axis scale\n  const priceScale = scaleLinear().domain([min, max]).range([innerHeight, 0])\n\n  return {\n    prices: fixedPrices,\n    startingPrice,\n    endingPrice,\n    lastValidPrice,\n    blanks,\n    timeScale,\n    priceScale,\n    dimensions,\n    error: undefined,\n  }\n}\n","import { NumberValue } from 'd3'\nimport { TimePeriod } from 'graphql/data/util'\n\nconst HOUR_OPTIONS = { hour: 'numeric', minute: 'numeric', hour12: true } as const // e.g. '12:00 PM'\nconst DAY_HOUR_OPTIONS = { month: 'short', day: 'numeric', hour: 'numeric', minute: '2-digit', hour12: true } as const // e.g. 'Jul 4, 12:00 PM'\nconst MONTH_DAY_OPTIONS = { month: 'long', day: 'numeric' } as const // e.g. 'July 4'\nconst MONTH_YEAR_DAY_OPTIONS = { month: 'short', year: 'numeric', day: 'numeric' } as const // e.g. 'Jul 4, 2021'\nconst MONTH_OPTIONS = { month: 'long' } as const // e.g. 'July'\nconst WEEK_OPTIONS = { weekday: 'long' } as const // e.g. 'Sunday'\n\n// Timestamps are formatted differently based on their location/usage in charts\nexport enum TimestampFormatterType {\n  TICK = 'tick',\n  CROSSHAIR = 'crosshair',\n}\n\nconst TIME_PERIOD_TO_FORMAT_OPTIONS: Record<TimePeriod, Record<TimestampFormatterType, Intl.DateTimeFormatOptions>> = {\n  [TimePeriod.HOUR]: {\n    [TimestampFormatterType.TICK]: HOUR_OPTIONS,\n    [TimestampFormatterType.CROSSHAIR]: DAY_HOUR_OPTIONS,\n  },\n  [TimePeriod.DAY]: {\n    [TimestampFormatterType.TICK]: HOUR_OPTIONS,\n    [TimestampFormatterType.CROSSHAIR]: DAY_HOUR_OPTIONS,\n  },\n  [TimePeriod.WEEK]: {\n    [TimestampFormatterType.TICK]: WEEK_OPTIONS,\n    [TimestampFormatterType.CROSSHAIR]: DAY_HOUR_OPTIONS,\n  },\n  [TimePeriod.MONTH]: {\n    [TimestampFormatterType.TICK]: MONTH_DAY_OPTIONS,\n    [TimestampFormatterType.CROSSHAIR]: DAY_HOUR_OPTIONS,\n  },\n  [TimePeriod.YEAR]: {\n    [TimestampFormatterType.TICK]: MONTH_OPTIONS,\n    [TimestampFormatterType.CROSSHAIR]: MONTH_YEAR_DAY_OPTIONS,\n  },\n}\n\n/**\n * Returns a function to format timestamps, specialized by timePeriod and type to display ('tick' or 'crosshair'),\n * localized for the given locale.\n */\nexport function getTimestampFormatter(\n  timePeriod: TimePeriod,\n  locale: string,\n  formatterType: TimestampFormatterType\n): (n: NumberValue) => string {\n  // Choose appropriate formatting options based on type and timePeriod\n  const options = TIME_PERIOD_TO_FORMAT_OPTIONS[timePeriod][formatterType]\n  const dateTimeFormatter = new Intl.DateTimeFormat(locale, options)\n\n  return (timestamp: NumberValue): string => {\n    const epochTimeInMilliseconds = timestamp.valueOf() * 1000\n    return dateTimeFormatter.format(epochTimeInMilliseconds)\n  }\n}\n","import { Trans } from '@lingui/macro'\nimport { AxisBottom } from '@visx/axis'\nimport { localPoint } from '@visx/event'\nimport { EventType } from '@visx/event/lib/types'\nimport { GlyphCircle } from '@visx/glyph'\nimport { Line } from '@visx/shape'\nimport AnimatedInLineChart from 'components/Charts/AnimatedInLineChart'\nimport FadedInLineChart from 'components/Charts/FadeInLineChart'\nimport { buildChartModel, ChartErrorType, ChartModel, ErroredChartModel } from 'components/Charts/PriceChart/ChartModel'\nimport { getTimestampFormatter, TimestampFormatterType } from 'components/Charts/PriceChart/format'\nimport { getNearestPricePoint, getTicks } from 'components/Charts/PriceChart/utils'\nimport { MouseoverTooltip } from 'components/Tooltip'\nimport { curveCardinal } from 'd3'\nimport { PricePoint, TimePeriod } from 'graphql/data/util'\nimport { useActiveLocale } from 'hooks/useActiveLocale'\nimport { ReactNode, useCallback, useEffect, useMemo, useState } from 'react'\nimport { Info } from 'react-feather'\nimport styled, { useTheme } from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { textFadeIn } from 'theme/styles'\nimport { useFormatter } from 'utils/formatNumbers'\n\nimport { calculateDelta, DeltaArrow } from '../../Tokens/TokenDetails/Delta'\n\nconst CHART_MARGIN = { top: 100, bottom: 48, crosshair: 72 }\n\nconst ChartHeaderWrapper = styled.div<{ stale?: boolean }>`\n  position: absolute;\n  ${textFadeIn};\n  animation-duration: ${({ theme }) => theme.transition.duration.medium};\n  ${({ theme, stale }) => stale && `color: ${theme.neutral2}`};\n`\nconst PriceContainer = styled.div`\n  display: flex;\n  gap: 6px;\n  font-size: 24px;\n  line-height: 44px;\n`\nconst DeltaContainer = styled.div`\n  height: 16px;\n  display: flex;\n  align-items: center;\n  margin-top: 4px;\n  color: ${({ theme }) => theme.neutral2};\n`\n\ninterface ChartDeltaProps {\n  startingPrice: PricePoint\n  endingPrice: PricePoint\n  noColor?: boolean\n}\n\nfunction ChartDelta({ startingPrice, endingPrice, noColor }: ChartDeltaProps) {\n  const delta = calculateDelta(startingPrice.value, endingPrice.value)\n  const { formatDelta } = useFormatter()\n\n  return (\n    <DeltaContainer>\n      {formatDelta(delta)}\n      <DeltaArrow delta={delta} noColor={noColor} />\n    </DeltaContainer>\n  )\n}\n\ninterface ChartHeaderProps {\n  crosshairPrice?: PricePoint\n  chart: ChartModel\n}\n\nfunction ChartHeader({ crosshairPrice, chart }: ChartHeaderProps) {\n  const { formatFiatPrice } = useFormatter()\n\n  const { startingPrice, endingPrice, lastValidPrice } = chart\n\n  const priceOutdated = lastValidPrice !== endingPrice\n  const displayPrice = crosshairPrice ?? (priceOutdated ? lastValidPrice : endingPrice)\n\n  const displayIsStale = priceOutdated && !crosshairPrice\n  return (\n    <ChartHeaderWrapper data-cy=\"chart-header\" stale={displayIsStale}>\n      <PriceContainer>\n        <ThemedText.HeadlineLarge color=\"inherit\">\n          {formatFiatPrice({ price: displayPrice.value })}\n        </ThemedText.HeadlineLarge>\n        {displayIsStale && (\n          <MouseoverTooltip text={<Trans>This price may not be up-to-date due to low trading volume.</Trans>}>\n            <Info size={16} data-testid=\"chart-stale-icon\" />\n          </MouseoverTooltip>\n        )}\n      </PriceContainer>\n      <ChartDelta startingPrice={startingPrice} endingPrice={displayPrice} noColor={priceOutdated} />\n    </ChartHeaderWrapper>\n  )\n}\n\nfunction ChartBody({ chart, timePeriod }: { chart: ChartModel; timePeriod: TimePeriod }) {\n  const locale = useActiveLocale()\n\n  const { prices, blanks, timeScale, priceScale, dimensions } = chart\n\n  const { ticks, tickTimestampFormatter, crosshairTimestampFormatter } = useMemo(() => {\n    // Limits the number of ticks based on graph width\n    const maxTicks = Math.floor(dimensions.width / 100)\n\n    const ticks = getTicks(chart.startingPrice.timestamp, chart.endingPrice.timestamp, timePeriod, maxTicks)\n    const tickTimestampFormatter = getTimestampFormatter(timePeriod, locale, TimestampFormatterType.TICK)\n    const crosshairTimestampFormatter = getTimestampFormatter(timePeriod, locale, TimestampFormatterType.CROSSHAIR)\n\n    return { ticks, tickTimestampFormatter, crosshairTimestampFormatter }\n  }, [dimensions.width, chart.startingPrice.timestamp, chart.endingPrice.timestamp, timePeriod, locale])\n\n  const theme = useTheme()\n  const [crosshair, setCrosshair] = useState<{ x: number; y: number; price: PricePoint }>()\n  const resetCrosshair = useCallback(() => setCrosshair(undefined), [setCrosshair])\n\n  const setCrosshairOnHover = useCallback(\n    (event: Element | EventType) => {\n      const { x } = localPoint(event) || { x: 0 }\n      const price = getNearestPricePoint(x, prices, timeScale)\n\n      if (price) {\n        const x = timeScale(price.timestamp)\n        const y = priceScale(price.value)\n        setCrosshair({ x, y, price })\n      }\n    },\n    [priceScale, timeScale, prices]\n  )\n\n  // Resets the crosshair when the time period is changed, to avoid stale UI\n  useEffect(() => resetCrosshair(), [resetCrosshair, timePeriod])\n\n  const crosshairEdgeMax = dimensions.width * 0.85\n  const crosshairAtEdge = !!crosshair && crosshair.x > crosshairEdgeMax\n\n  // Default curve doesn't look good for the HOUR chart.\n  // Higher values make the curve more rigid, lower values smooth the curve but make it less \"sticky\" to real data points,\n  // making it unacceptable for shorter durations / smaller variances.\n  const curveTension = timePeriod === TimePeriod.HOUR ? 1 : 0.9\n\n  const getX = useCallback((p: PricePoint) => timeScale(p.timestamp), [timeScale])\n  const getY = useCallback((p: PricePoint) => priceScale(p.value), [priceScale])\n  const curve = useMemo(() => curveCardinal.tension(curveTension), [curveTension])\n\n  return (\n    <>\n      <ChartHeader chart={chart} crosshairPrice={crosshair?.price} />\n      <svg data-cy=\"price-chart\" width={dimensions.width} height={dimensions.height} style={{ minWidth: '100%' }}>\n        <AnimatedInLineChart\n          data={prices}\n          getX={getX}\n          getY={getY}\n          marginTop={dimensions.marginTop}\n          curve={curve}\n          strokeWidth={2}\n        />\n        {blanks.map((blank, index) => (\n          <FadedInLineChart\n            key={index}\n            data={blank}\n            getX={getX}\n            getY={getY}\n            marginTop={dimensions.marginTop}\n            curve={curve}\n            strokeWidth={2}\n            color={theme.neutral3}\n            dashed\n          />\n        ))}\n        {crosshair !== undefined ? (\n          <g>\n            <AxisBottom\n              top={dimensions.height - 1}\n              scale={timeScale}\n              stroke={theme.surface3}\n              hideTicks={true}\n              tickValues={ticks}\n              tickFormat={tickTimestampFormatter}\n              tickLabelProps={() => ({\n                fill: theme.neutral2,\n                fontSize: 12,\n                textAnchor: 'middle',\n                transform: 'translate(0 -29)',\n              })}\n            />\n            <text\n              x={crosshair.x + (crosshairAtEdge ? -4 : 4)}\n              y={CHART_MARGIN.crosshair + 10}\n              textAnchor={crosshairAtEdge ? 'end' : 'start'}\n              fontSize={12}\n              fill={theme.neutral2}\n            >\n              {crosshairTimestampFormatter(crosshair.price.timestamp)}\n            </text>\n            <Line\n              from={{ x: crosshair.x, y: CHART_MARGIN.crosshair }}\n              to={{ x: crosshair.x, y: dimensions.height }}\n              stroke={theme.surface3}\n              strokeWidth={1}\n              pointerEvents=\"none\"\n              strokeDasharray=\"4,4\"\n            />\n            <GlyphCircle\n              left={crosshair.x}\n              top={crosshair.y + dimensions.marginTop}\n              size={50}\n              fill={theme.accent1}\n              stroke={theme.surface3}\n              strokeWidth={0.5}\n            />\n          </g>\n        ) : (\n          <AxisBottom\n            hideAxisLine={true}\n            scale={timeScale}\n            stroke={theme.surface3}\n            top={dimensions.height - 1}\n            hideTicks\n          />\n        )}\n        {!dimensions.width && (\n          // Ensures an axis is drawn even if the width is not yet initialized.\n          <line\n            x1={0}\n            y1={dimensions.height - 1}\n            x2=\"100%\"\n            y2={dimensions.height - 1}\n            fill=\"transparent\"\n            shapeRendering=\"crispEdges\"\n            stroke={theme.surface3}\n            strokeWidth={1}\n          />\n        )}\n        <rect\n          x={0}\n          y={0}\n          width={dimensions.width}\n          height={dimensions.height}\n          fill=\"transparent\"\n          onTouchStart={setCrosshairOnHover}\n          onTouchMove={setCrosshairOnHover}\n          onMouseMove={setCrosshairOnHover}\n          onMouseLeave={resetCrosshair}\n        />\n      </svg>\n    </>\n  )\n}\n\nconst CHART_ERROR_MESSAGES: Record<ChartErrorType, ReactNode> = {\n  [ChartErrorType.NO_DATA_AVAILABLE]: <Trans>Missing chart data</Trans>,\n  [ChartErrorType.NO_RECENT_VOLUME]: <Trans>Missing price data due to recently low trading volume on Uniswap v3</Trans>,\n  [ChartErrorType.INVALID_CHART]: <Trans>Invalid chart</Trans>,\n}\n\nfunction MissingPriceChart({ chart }: { chart: ErroredChartModel }) {\n  const theme = useTheme()\n  const midPoint = chart.dimensions.height / 2 + 45\n\n  return (\n    <>\n      <ChartHeaderWrapper data-cy=\"chart-header\">\n        <ThemedText.HeadlineLarge fontSize={24} color=\"neutral3\">\n          Price unavailable\n        </ThemedText.HeadlineLarge>\n        <ThemedText.BodySmall color=\"neutral3\">{CHART_ERROR_MESSAGES[chart.error]}</ThemedText.BodySmall>\n      </ChartHeaderWrapper>\n      <svg\n        data-cy=\"missing-chart\"\n        width={chart.dimensions.width}\n        height={chart.dimensions.height}\n        style={{ minWidth: '100%' }}\n      >\n        <path\n          d={`M 0 ${midPoint} Q 104 ${midPoint - 70}, 208 ${midPoint} T 416 ${midPoint}\n          M 416 ${midPoint} Q 520 ${midPoint - 70}, 624 ${midPoint} T 832 ${midPoint}`}\n          stroke={theme.surface3}\n          fill=\"transparent\"\n          strokeWidth=\"2\"\n        />\n      </svg>\n    </>\n  )\n}\n\ninterface PriceChartProps {\n  width: number\n  height: number\n  prices?: PricePoint[]\n  timePeriod: TimePeriod\n}\n\nexport function PriceChart({ width, height, prices, timePeriod }: PriceChartProps) {\n  const chart = useMemo(\n    () =>\n      buildChartModel({\n        dimensions: { width, height, marginBottom: CHART_MARGIN.bottom, marginTop: CHART_MARGIN.top },\n        prices,\n      }),\n    [width, height, prices]\n  )\n\n  if (chart.error !== undefined) {\n    return <MissingPriceChart chart={chart} />\n  }\n\n  return <ChartBody chart={chart} timePeriod={timePeriod} />\n}\n","import { TimePeriod } from 'graphql/data/util'\nimport { startTransition, useState } from 'react'\nimport styled from 'styled-components'\n\nimport { MEDIUM_MEDIA_BREAKPOINT } from '../constants'\nimport { DISPLAYS, ORDERED_TIMES } from '../TokenTable/TimeSelector'\n\nconst TimeOptionsWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n`\nconst TimeOptionsContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 4px;\n  gap: 4px;\n  border-radius: 16px;\n  height: 40px;\n  padding: 4px;\n  width: fit-content;\n\n  @media only screen and (max-width: ${MEDIUM_MEDIA_BREAKPOINT}) {\n    width: 100%;\n    justify-content: space-between;\n    border: none;\n  }\n`\nconst TimeButton = styled.button<{ active: boolean }>`\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ theme, active }) => (active ? theme.surface3 : 'transparent')};\n  font-weight: 535;\n  font-size: 16px;\n  padding: 6px 12px;\n  border-radius: 12px;\n  line-height: 20px;\n  border: none;\n  cursor: pointer;\n  color: ${({ theme, active }) => (active ? theme.neutral1 : theme.neutral2)};\n  transition-duration: ${({ theme }) => theme.transition.duration.fast};\n  :hover {\n    ${({ active, theme }) => !active && `opacity: ${theme.opacity.hover};`}\n  }\n`\n\nexport default function TimePeriodSelector({\n  currentTimePeriod,\n  onTimeChange,\n}: {\n  currentTimePeriod: TimePeriod\n  onTimeChange: (t: TimePeriod) => void\n}) {\n  const [timePeriod, setTimePeriod] = useState(currentTimePeriod)\n  return (\n    <TimeOptionsWrapper>\n      <TimeOptionsContainer>\n        {ORDERED_TIMES.map((time) => (\n          <TimeButton\n            key={DISPLAYS[time]}\n            active={timePeriod === time}\n            onClick={() => {\n              startTransition(() => onTimeChange(time))\n              setTimePeriod(time)\n            }}\n          >\n            {DISPLAYS[time]}\n          </TimeButton>\n        ))}\n      </TimeOptionsContainer>\n    </TimeOptionsWrapper>\n  )\n}\n","import { ParentSize } from '@visx/responsive'\nimport { ChartContainer, LoadingChart } from 'components/Tokens/TokenDetails/Skeleton'\nimport { TokenPriceQuery } from 'graphql/data/TokenPrice'\nimport { isPricePoint, PricePoint } from 'graphql/data/util'\nimport { TimePeriod } from 'graphql/data/util'\nimport { useAtomValue } from 'jotai/utils'\nimport { pageTimePeriodAtom } from 'pages/TokenDetails'\nimport { startTransition, Suspense, useMemo } from 'react'\n\nimport { PriceChart } from '../../Charts/PriceChart'\nimport TimePeriodSelector from './TimeSelector'\n\nfunction usePriceHistory(tokenPriceData: TokenPriceQuery): PricePoint[] | undefined {\n  // Appends the current price to the end of the priceHistory array\n  const priceHistory = useMemo(() => {\n    const market = tokenPriceData.token?.market\n    const priceHistory = market?.priceHistory?.filter(isPricePoint)\n    const currentPrice = market?.price?.value\n    if (Array.isArray(priceHistory) && currentPrice !== undefined) {\n      const timestamp = Date.now() / 1000\n      return [...priceHistory, { timestamp, value: currentPrice }]\n    }\n    return priceHistory\n  }, [tokenPriceData])\n\n  return priceHistory\n}\nexport default function ChartSection({\n  tokenPriceQuery,\n  onChangeTimePeriod,\n}: {\n  tokenPriceQuery?: TokenPriceQuery\n  onChangeTimePeriod: OnChangeTimePeriod\n}) {\n  if (!tokenPriceQuery) {\n    return <LoadingChart />\n  }\n\n  return (\n    <Suspense fallback={<LoadingChart />}>\n      <ChartContainer>\n        <Chart tokenPriceQuery={tokenPriceQuery} onChangeTimePeriod={onChangeTimePeriod} />\n      </ChartContainer>\n    </Suspense>\n  )\n}\n\nexport type OnChangeTimePeriod = (t: TimePeriod) => void\nfunction Chart({\n  tokenPriceQuery,\n  onChangeTimePeriod,\n}: {\n  tokenPriceQuery: TokenPriceQuery\n  onChangeTimePeriod: OnChangeTimePeriod\n}) {\n  const prices = usePriceHistory(tokenPriceQuery)\n  // Initializes time period to global & maintain separate time period for subsequent changes\n  const timePeriod = useAtomValue(pageTimePeriodAtom)\n\n  return (\n    <ChartContainer data-testid=\"chart-container\">\n      <ParentSize>\n        {({ width }) => <PriceChart prices={prices} width={width} height={392} timePeriod={timePeriod} />}\n      </ParentSize>\n      <TimePeriodSelector\n        currentTimePeriod={timePeriod}\n        onTimeChange={(t: TimePeriod) => {\n          startTransition(() => onChangeTimePeriod(t))\n        }}\n      />\n    </ChartContainer>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { Currency } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport { NATIVE_CHAIN_ID } from 'constants/tokens'\nimport { CHAIN_ID_TO_BACKEND_NAME } from 'graphql/data/util'\nimport { useStablecoinValue } from 'hooks/useStablecoinPrice'\nimport useCurrencyBalance from 'lib/hooks/useCurrencyBalance'\nimport styled from 'styled-components'\nimport { StyledInternalLink } from 'theme/components'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\n\nconst Wrapper = styled.div`\n  align-content: center;\n  align-items: center;\n  border: 1px solid ${({ theme }) => theme.surface3};\n  border-bottom: none;\n  background-color: ${({ theme }) => theme.surface1};\n  border-radius: 20px 20px 0px 0px;\n  bottom: 52px;\n  color: ${({ theme }) => theme.neutral2};\n  display: flex;\n  flex-direction: row;\n  font-weight: 535;\n  font-size: 14px;\n  height: fit-content;\n  justify-content: space-between;\n  left: 0;\n  line-height: 20px;\n  padding: 12px 16px;\n  position: fixed;\n  width: 100%;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.md}px) {\n    bottom: 0px;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.lg}px) {\n    display: none;\n  }\n`\nconst BalanceValue = styled.div`\n  color: ${({ theme }) => theme.neutral1};\n  font-size: 20px;\n  line-height: 28px;\n  display: flex;\n  gap: 8px;\n`\nconst Balance = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: 8px;\n`\nconst BalanceInfo = styled.div`\n  display: flex;\n  flex: 10 1 auto;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nconst FiatValue = styled.span`\n  font-size: 12px;\n  line-height: 16px;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.sm}px) {\n    line-height: 24px;\n  }\n`\nconst SwapButton = styled(StyledInternalLink)`\n  background-color: ${({ theme }) => theme.accent1};\n  border: none;\n  border-radius: 12px;\n  color: ${({ theme }) => theme.deprecated_accentTextLightPrimary};\n  display: flex;\n  flex: 1 1 auto;\n  padding: 12px 16px;\n  font-size: 1em;\n  font-weight: 535;\n  height: 44px;\n  justify-content: center;\n  margin: auto;\n  max-width: 100vw;\n`\n\nexport default function MobileBalanceSummaryFooter({ token }: { token: Currency }) {\n  const { account } = useWeb3React()\n  const balance = useCurrencyBalance(account, token)\n  const { formatCurrencyAmount } = useFormatter()\n  const formattedBalance = formatCurrencyAmount({\n    amount: balance,\n    type: NumberType.TokenNonTx,\n  })\n  const formattedUsdValue = formatCurrencyAmount({\n    amount: useStablecoinValue(balance),\n    type: NumberType.FiatTokenStats,\n  })\n  const chain = CHAIN_ID_TO_BACKEND_NAME[token.chainId].toLowerCase()\n\n  return (\n    <Wrapper>\n      {Boolean(account && balance) && (\n        <BalanceInfo>\n          <Trans>Your {token.symbol} balance</Trans>\n          <Balance>\n            <BalanceValue>\n              {formattedBalance} {token.symbol}\n            </BalanceValue>\n            <FiatValue>{formattedUsdValue}</FiatValue>\n          </Balance>\n        </BalanceInfo>\n      )}\n      <SwapButton to={`/swap?chainName=${chain}&outputCurrency=${token.isNative ? NATIVE_CHAIN_ID : token.address}`}>\n        <Trans>Swap</Trans>\n      </SwapButton>\n    </Wrapper>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { Currency } from '@uniswap/sdk-core'\nimport { Share as ShareIcon } from 'components/Icons/Share'\nimport { NATIVE_CHAIN_ID } from 'constants/tokens'\nimport { chainIdToBackendName } from 'graphql/data/util'\nimport useDisableScrolling from 'hooks/useDisableScrolling'\nimport { useOnClickOutside } from 'hooks/useOnClickOutside'\nimport { useRef } from 'react'\nimport { Link, Twitter } from 'react-feather'\nimport { useModalIsOpen, useToggleModal } from 'state/application/hooks'\nimport { ApplicationModal } from 'state/application/reducer'\nimport styled, { useTheme } from 'styled-components'\nimport { colors } from 'theme/colors'\nimport { ClickableStyle, CopyHelperRefType } from 'theme/components'\nimport { CopyHelper } from 'theme/components'\nimport { opacify } from 'theme/utils'\nimport { Z_INDEX } from 'theme/zIndex'\n\nconst TWITTER_WIDTH = 560\nconst TWITTER_HEIGHT = 480\n\nconst ShareButtonDisplay = styled.div`\n  display: flex;\n  position: relative;\n`\n\nconst Share = styled(ShareIcon)<{ open: boolean }>`\n  height: 24px;\n  width: 24px;\n  ${ClickableStyle}\n  ${({ open, theme }) => open && `opacity: ${theme.opacity.click} !important`};\n`\n\nconst ShareActions = styled.div`\n  position: absolute;\n  z-index: ${Z_INDEX.dropdown};\n  width: 240px;\n  top: 36px;\n  right: 0px;\n  justify-content: center;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n  padding: 8px;\n  background-color: ${({ theme }) => theme.surface1};\n  border: 0.5px solid ${({ theme }) => theme.surface3};\n  box-shadow: ${({ theme }) => theme.deprecated_deepShadow};\n  border-radius: 12px;\n`\nconst ShareAction = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 8px;\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 485;\n  gap: 12px;\n  height: 40px;\n  color: ${({ theme }) => theme.neutral1};\n  cursor: pointer;\n  :hover {\n    background-color: ${({ theme }) => opacify(10, theme.darkMode ? colors.gray200 : colors.gray300)};\n  }\n`\n\nexport default function ShareButton({ currency }: { currency: Currency }) {\n  const theme = useTheme()\n  const node = useRef<HTMLDivElement | null>(null)\n  const open = useModalIsOpen(ApplicationModal.SHARE)\n  const toggleShare = useToggleModal(ApplicationModal.SHARE)\n  useOnClickOutside(node, open ? toggleShare : undefined)\n  const positionX = (window.screen.width - TWITTER_WIDTH) / 2\n  const positionY = (window.screen.height - TWITTER_HEIGHT) / 2\n  const address = currency.isNative ? NATIVE_CHAIN_ID : currency.wrapped.address\n  useDisableScrolling(open)\n\n  const shareTweet = () => {\n    toggleShare()\n    window.open(\n      `https://twitter.com/intent/tweet?text=Check%20out%20${currency.name}%20(${\n        currency.symbol\n      })%20https://app.uniswap.org/%23/tokens/${chainIdToBackendName(\n        currency.chainId\n      ).toLowerCase()}/${address}%20via%20@uniswap`,\n      'newwindow',\n      `left=${positionX}, top=${positionY}, width=${TWITTER_WIDTH}, height=${TWITTER_HEIGHT}`\n    )\n  }\n\n  const copyHelperRef = useRef<CopyHelperRefType>(null)\n\n  return (\n    <ShareButtonDisplay ref={node}>\n      <Share onClick={toggleShare} aria-label=\"ShareOptions\" open={open} />\n      {open && (\n        <ShareActions>\n          <ShareAction onClick={() => copyHelperRef.current?.forceCopy()}>\n            <CopyHelper\n              InitialIcon={Link}\n              color={theme.neutral1}\n              iconPosition=\"left\"\n              gap={12}\n              toCopy={window.location.href}\n              ref={copyHelperRef}\n            >\n              <Trans>Copy Link</Trans>\n            </CopyHelper>\n          </ShareAction>\n\n          <ShareAction onClick={shareTweet}>\n            <Twitter color={theme.neutral1} size={20} strokeWidth={1.5} />\n            <Trans>Share to Twitter</Trans>\n          </ShareAction>\n        </ShareActions>\n      )}\n    </ShareButtonDisplay>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { displayWarningLabel, getWarningCopy, TOKEN_SAFETY_ARTICLE, Warning } from 'constants/tokenSafety'\nimport { useTokenWarningColor, useTokenWarningTextColor } from 'hooks/useTokenWarningColor'\nimport { AlertTriangle, Slash } from 'react-feather'\nimport { Text } from 'rebass'\nimport styled from 'styled-components'\nimport { ExternalLink } from 'theme/components'\n\nconst Label = styled.div<{ color: string; backgroundColor: string }>`\n  width: 100%;\n  padding: 12px 20px 16px;\n  background-color: ${({ backgroundColor }) => backgroundColor};\n  border-radius: 16px;\n  border: 1px solid ${({ theme }) => theme.surface3};\n  color: ${({ color }) => color};\n`\n\nconst TitleRow = styled.div`\n  align-items: center;\n  font-weight: 535;\n  display: inline-flex;\n`\n\nconst Title = styled(Text)`\n  font-weight: 535;\n  font-size: 16px;\n  line-height: 24px;\n  margin-left: 7px;\n`\n\nconst DetailsRow = styled.div`\n  margin-top: 8px;\n  font-size: 12px;\n  line-height: 16px;\n  color: ${({ theme }) => theme.neutral2};\n`\n\nconst StyledLink = styled(ExternalLink)`\n  color: ${({ theme }) => theme.accent1};\n\n  font-weight: 535;\n`\n\ntype TokenSafetyMessageProps = {\n  warning: Warning\n  tokenAddress: string\n}\n\nexport default function TokenSafetyMessage({ warning, tokenAddress }: TokenSafetyMessageProps) {\n  const backgroundColor = useTokenWarningColor(warning.level)\n  const textColor = useTokenWarningTextColor(warning.level)\n  const { heading, description } = getWarningCopy(warning)\n\n  return (\n    <Label data-cy=\"token-safety-message\" color={textColor} backgroundColor={backgroundColor}>\n      {displayWarningLabel(warning) && (\n        <TitleRow>\n          {warning.canProceed ? <AlertTriangle size=\"16px\" /> : <Slash size=\"16px\" />}\n          <Title marginLeft=\"7px\">{warning.message}</Title>\n        </TitleRow>\n      )}\n\n      <DetailsRow>\n        {heading}\n        {Boolean(heading) && ' '}\n        {description}\n        {Boolean(description) && ' '}\n        {tokenAddress && (\n          <StyledLink href={TOKEN_SAFETY_ARTICLE}>\n            <Trans>Learn more</Trans>\n          </StyledLink>\n        )}\n      </DetailsRow>\n    </Label>\n  )\n}\n","import { useWeb3React } from '@web3-react/core'\nimport { Chain } from 'graphql/data/Token'\nimport { chainIdToBackendName } from 'graphql/data/util'\nimport { useEffect, useRef } from 'react'\n\nexport const useOnGlobalChainSwitch = (callback: (chain: Chain) => void) => {\n  const { chainId: connectedChainId } = useWeb3React()\n  const globalChainName = chainIdToBackendName(connectedChainId)\n  const prevGlobalChainRef = useRef(globalChainName)\n  useEffect(() => {\n    if (prevGlobalChainRef.current !== globalChainName) {\n      callback(globalChainName)\n    }\n    prevGlobalChainRef.current = globalChainName\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [globalChainName])\n}\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgEye(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.75 12C14.75 13.517 13.517 14.75 12 14.75C10.483 14.75 9.25004 13.517 9.25004 12C9.25004 11.651 9.32196 11.32 9.44096 11.012C9.63496 11.166 9.86903 11.272 10.136 11.272C10.763 11.272 11.272 10.763 11.272 10.136C11.272 9.86899 11.166 9.63492 11.012 9.44092C11.32 9.32192 11.651 9.25 12 9.25C13.517 9.25 14.75 10.483 14.75 12ZM20.5921 13.4771C19.3651 15.5311 16.609 19 12 19C7.39104 19 4.635 15.5311 3.408 13.4771C2.864 12.5671 2.864 11.4329 3.408 10.5229C4.635 8.46895 7.39104 5 12 5C16.609 5 19.3651 8.46895 20.5921 10.5229C21.1361 11.4329 21.1361 12.5671 20.5921 13.4771ZM16.25 12C16.25 9.657 14.344 7.75 12 7.75C9.65604 7.75 7.75004 9.657 7.75004 12C7.75004 14.343 9.65604 16.25 12 16.25C14.344 16.25 16.25 14.343 16.25 12Z\",\n    fill: \"currentColor\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgEye);\nexport default __webpack_public_path__ + \"static/media/eye.0b7e1ea0bf8a719e75d97cfc5cd4e72d.svg\";\nexport { ForwardRef as ReactComponent };","import { Trans } from '@lingui/macro'\nimport { useWeb3React } from '@web3-react/core'\nimport { ButtonPrimary } from 'components/Button'\nimport { getChainInfo } from 'constants/chainInfo'\nimport { SupportedChainId } from 'constants/types'\nimport useSelectChain from 'hooks/useSelectChain'\nimport { useNavigate } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ThemedText } from 'theme/components'\n\nimport { ReactComponent as EyeIcon } from '../../../assets/svg/eye.svg'\n\nconst InvalidDetailsContainer = styled.div`\n  padding-top: 128px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst InvalidDetailsText = styled.span`\n  margin-top: 28px;\n  margin-bottom: 20px;\n\n  text-align: center;\n\n  color: ${({ theme }) => theme.neutral2};\n  font-size: 20px;\n  font-weight: 535;\n  line-height: 28px;\n`\n\nconst TokenExploreButton = styled(ButtonPrimary)`\n  width: fit-content;\n  padding: 12px 16px;\n  border-radius: 12px;\n\n  color: ${({ theme }) => theme.neutral1};\n  font-size: 16px;\n  font-weight: 535;\n`\n\nexport default function InvalidTokenDetails({\n  pageChainId,\n  isInvalidAddress,\n}: {\n  pageChainId: SupportedChainId\n  isInvalidAddress?: boolean\n}) {\n  const { chainId } = useWeb3React()\n  const navigate = useNavigate()\n  const selectChain = useSelectChain()\n\n  // if the token's address is valid and the chains match, it's a non-existant token\n  const isNonExistantToken = !isInvalidAddress && pageChainId === chainId\n\n  const connectedChainLabel = chainId ? getChainInfo(chainId)?.label : undefined\n\n  return (\n    <InvalidDetailsContainer>\n      <EyeIcon />\n      {isInvalidAddress || isNonExistantToken ? (\n        <>\n          <InvalidDetailsText>\n            <Trans>This token doesn&apos;t exist</Trans>\n          </InvalidDetailsText>\n          <TokenExploreButton onClick={() => navigate('/tokens')}>\n            <ThemedText.SubHeader>\n              <Trans>Explore tokens</Trans>\n            </ThemedText.SubHeader>\n          </TokenExploreButton>\n        </>\n      ) : (\n        <>\n          {connectedChainLabel && (\n            <InvalidDetailsText>\n              <Trans>This token doesn&apos;t exist on {connectedChainLabel}</Trans>\n            </InvalidDetailsText>\n          )}\n          <TokenExploreButton onClick={() => selectChain(pageChainId)}>\n            <ThemedText.SubHeader>\n              <Trans>Switch to {getChainInfo(pageChainId).label}</Trans>\n            </ThemedText.SubHeader>\n          </TokenExploreButton>\n        </>\n      )}\n    </InvalidDetailsContainer>\n  )\n}\n","import { useWeb3React } from '@web3-react/core'\nimport { getConnection } from 'connection'\nimport { didUserReject } from 'connection/utils'\nimport { CHAIN_IDS_TO_NAMES, isSupportedChain } from 'constants/chains'\nimport { SupportedChainId } from 'constants/types'\nimport { useCallback } from 'react'\nimport { useSearchParams } from 'react-router-dom'\nimport { addPopup, PopupType } from 'state/application/reducer'\nimport { useAppDispatch } from 'state/hooks'\n\nimport { useSwitchChain } from './useSwitchChain'\n\nexport default function useSelectChain() {\n  const dispatch = useAppDispatch()\n  const { connector } = useWeb3React()\n  const switchChain = useSwitchChain()\n  const [searchParams, setSearchParams] = useSearchParams()\n\n  return useCallback(\n    async (targetChain: SupportedChainId) => {\n      if (!connector) return\n\n      const connection = getConnection(connector)\n      try {\n        await switchChain(connector, targetChain)\n        if (isSupportedChain(targetChain)) {\n          searchParams.set('chain', CHAIN_IDS_TO_NAMES[targetChain])\n          setSearchParams(searchParams)\n        }\n      } catch (error) {\n        if (!didUserReject(connection, error) && error.code !== -32002 /* request already pending */) {\n          console.error('Failed to switch networks', error)\n          dispatch(\n            addPopup({\n              content: { failedSwitchNetwork: targetChain, type: PopupType.FailedSwitchNetwork },\n              key: 'failed-network-switch',\n            })\n          )\n        }\n      }\n    },\n    [connector, dispatch, searchParams, setSearchParams, switchChain]\n  )\n}\n","import { ComponentProps } from 'react'\n\nexport const Globe = (props: ComponentProps<'svg'>) => (\n  <svg\n    width=\"18\"\n    height=\"18\"\n    viewBox=\"0 0 18 18\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    stroke=\"transparent\"\n    {...props}\n  >\n    <path\n      d=\"M5.12245 9.5625C5.23495 11.8725 6.01495 14.2275 7.37245 16.32C4.19245 15.615 1.76996 12.8925 1.52246 9.5625H5.12245ZM7.37245 1.67999C4.19245 2.38499 1.76996 5.1075 1.52246 8.4375H5.12245C5.23495 6.1275 6.01495 3.77249 7.37245 1.67999ZM9.14997 1.5H8.84995L8.62496 1.82249C7.19996 3.84749 6.36745 6.1725 6.24745 8.4375H11.7525C11.6325 6.1725 10.8 3.84749 9.37496 1.82249L9.14997 1.5ZM6.24745 9.5625C6.36745 11.8275 7.19996 14.1525 8.62496 16.1775L8.84995 16.5H9.14997L9.37496 16.1775C10.8 14.1525 11.6325 11.8275 11.7525 9.5625H6.24745ZM12.8775 9.5625C12.765 11.8725 11.985 14.2275 10.6275 16.32C13.8075 15.615 16.23 12.8925 16.4775 9.5625H12.8775ZM16.4775 8.4375C16.23 5.1075 13.8075 2.38499 10.6275 1.67999C11.985 3.77249 12.765 6.1275 12.8775 8.4375H16.4775Z\"\n      fill={props.fill ?? '#607BEE'}\n    />\n  </svg>\n)\n","import { ComponentProps } from 'react'\n\nexport const TwitterXLogo = (props: ComponentProps<'svg'>) => (\n  <svg\n    width=\"18\"\n    height=\"18\"\n    viewBox=\"0 0 18 18\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    stroke=\"transparent\"\n    {...props}\n  >\n    <path\n      d=\"M12.8761 3H14.9451L10.4251 8.16609L15.7425 15.196H11.579L8.31797 10.9324L4.58662 15.196H2.51644L7.35104 9.67026L2.25 3H6.51922L9.46689 6.89708L12.8761 3ZM12.15 13.9576H13.2964L5.89628 4.17332H4.66605L12.15 13.9576Z\"\n      fill={props.fill ?? '#607BEE'}\n    />\n  </svg>\n)\n","import { Trans } from '@lingui/macro'\nimport Column from 'components/Column'\nimport { EtherscanLogo } from 'components/Icons/Etherscan'\nimport { Globe } from 'components/Icons/Globe'\nimport { TwitterXLogo } from 'components/Icons/TwitterX'\nimport Row from 'components/Row'\nimport { FOTTooltipContent } from 'components/swap/SwapLineItem'\nimport { NoInfoAvailable, truncateDescription, TruncateDescriptionButton } from 'components/Tokens/TokenDetails/shared'\nimport { MouseoverTooltip, TooltipSize } from 'components/Tooltip'\nimport { SupportedChainId } from 'constants/types'\nimport { useTokenProjectQuery } from 'graphql/data/__generated__/types-and-hooks'\nimport { chainIdToBackendName } from 'graphql/data/util'\nimport useCopyClipboard from 'hooks/useCopyClipboard'\nimport { useSwapTaxes } from 'hooks/useSwapTaxes'\nimport { useCallback, useReducer } from 'react'\nimport { Copy } from 'react-feather'\nimport styled, { useTheme } from 'styled-components'\nimport { BREAKPOINTS } from 'theme'\nimport { ClickableStyle, EllipsisStyle, ExternalLink, ThemedText } from 'theme/components'\nimport { opacify } from 'theme/utils'\nimport { shortenAddress } from 'utils'\nimport { useFormatter } from 'utils/formatNumbers'\nimport { ExplorerDataType, getExplorerLink } from 'utils/getExplorerLink'\nimport { getNativeTokenDBAddress } from 'utils/nativeTokens'\n\nconst TokenInfoSection = styled(Column)`\n  gap: 16px;\n  width: 100%;\n\n  @media (max-width: ${BREAKPOINTS.lg - 1}px) and (min-width: ${BREAKPOINTS.sm}px) {\n    max-width: 45%;\n  }\n`\n\nconst TokenNameRow = styled(Row)`\n  gap: 8px;\n  width: 100%;\n`\n\nconst TokenButtonRow = styled(TokenNameRow)`\n  flex-wrap: wrap;\n`\n\nconst TokenInfoButton = styled(Row)<{ tokenColor: string }>`\n  gap: 8px;\n  padding: 8px 12px;\n  border-radius: 20px;\n  color: ${({ tokenColor }) => tokenColor};\n  background-color: ${({ tokenColor }) => opacify(12, tokenColor)};\n  font-size: 14px;\n  font-weight: 535;\n  line-height: 16px;\n  width: max-content;\n  ${ClickableStyle}\n`\n\nconst TokenDescriptionContainer = styled(ThemedText.BodyPrimary)`\n  ${EllipsisStyle}\n  max-width: 100%;\n  // max-height: fit-content;\n  line-height: 24px;\n  white-space: pre-wrap;\n`\n\nconst DescriptionVisibilityWrapper = styled.span<{ $visible: boolean }>`\n  display: ${({ $visible }) => ($visible ? 'inline' : 'none')};\n`\n\nconst TRUNCATE_CHARACTER_COUNT = 75\n\nexport function TokenDescription({\n  tokenAddress,\n  chainId = SupportedChainId.MAINNET,\n  isNative = false,\n  characterCount = TRUNCATE_CHARACTER_COUNT,\n}: {\n  tokenAddress: string\n  chainId?: number\n  isNative?: boolean\n  characterCount?: number\n}) {\n  const color = useTheme().neutral1\n  const chainName = chainIdToBackendName(chainId)\n  const { data: tokenQuery } = useTokenProjectQuery({\n    variables: {\n      address: isNative ? getNativeTokenDBAddress(chainName) : tokenAddress,\n      chain: chainName,\n    },\n    errorPolicy: 'all',\n  })\n  const tokenProject = tokenQuery?.token?.project\n  const description = tokenProject?.description\n  const explorerUrl = getExplorerLink(\n    chainId,\n    tokenAddress,\n    isNative ? ExplorerDataType.NATIVE : ExplorerDataType.TOKEN\n  )\n\n  const [, setCopied] = useCopyClipboard()\n  const copy = useCallback(() => {\n    setCopied(tokenAddress)\n  }, [tokenAddress, setCopied])\n\n  const [isDescriptionTruncated, toggleIsDescriptionTruncated] = useReducer((x) => !x, true)\n  const truncatedDescription = truncateDescription(description ?? '', characterCount)\n  const shouldTruncate = !!description && description.length > characterCount\n  const showTruncatedDescription = shouldTruncate && isDescriptionTruncated\n  const { inputTax: sellFee, outputTax: buyFee } = useSwapTaxes(tokenAddress, tokenAddress)\n  const { formatPercent } = useFormatter()\n  const { sellFeeString, buyFeeString } = {\n    sellFeeString: formatPercent(sellFee),\n    buyFeeString: formatPercent(buyFee),\n  }\n  const hasFee = Boolean(parseFloat(sellFeeString)) || Boolean(parseFloat(buyFee.toFixed(2)))\n  const sameFee = sellFeeString === buyFeeString\n\n  return (\n    <TokenInfoSection>\n      <ThemedText.HeadlineSmall>\n        <Trans>Info</Trans>\n      </ThemedText.HeadlineSmall>\n      <TokenButtonRow>\n        {!isNative && (\n          <TokenInfoButton tokenColor={color} onClick={copy}>\n            <Copy width=\"18px\" height=\"18px\" color={color} />\n            {shortenAddress(tokenAddress)}\n          </TokenInfoButton>\n        )}\n        <ExternalLink href={explorerUrl}>\n          <TokenInfoButton tokenColor={color}>\n            <EtherscanLogo width=\"18px\" height=\"18px\" fill={color} />\n            {chainId === SupportedChainId.MAINNET ? <Trans>Etherscan</Trans> : <Trans>Explorer</Trans>}\n          </TokenInfoButton>\n        </ExternalLink>\n        {!!tokenProject?.homepageUrl && (\n          <ExternalLink href={tokenProject.homepageUrl}>\n            <TokenInfoButton tokenColor={color}>\n              <Globe width=\"18px\" height=\"18px\" fill={color} />\n              <Trans>Website</Trans>\n            </TokenInfoButton>\n          </ExternalLink>\n        )}\n        {!!tokenProject?.twitterName && (\n          <ExternalLink href={`https://x.com/${tokenProject.twitterName}`}>\n            <TokenInfoButton tokenColor={color}>\n              <TwitterXLogo width=\"18px\" height=\"18px\" fill={color} />\n              <Trans>Twitter</Trans>\n            </TokenInfoButton>\n          </ExternalLink>\n        )}\n      </TokenButtonRow>\n      <TokenDescriptionContainer>\n        {!description && (\n          <NoInfoAvailable>\n            <Trans>No token information available</Trans>\n          </NoInfoAvailable>\n        )}\n        {description && (\n          <>\n            <DescriptionVisibilityWrapper data-testid=\"token-description-full\" $visible={!showTruncatedDescription}>\n              {description}\n            </DescriptionVisibilityWrapper>\n            <DescriptionVisibilityWrapper data-testid=\"token-description-truncated\" $visible={showTruncatedDescription}>\n              {truncatedDescription}\n            </DescriptionVisibilityWrapper>\n          </>\n        )}\n        {shouldTruncate && (\n          <TruncateDescriptionButton\n            onClick={toggleIsDescriptionTruncated}\n            data-testid=\"token-description-show-more-button\"\n          >\n            {isDescriptionTruncated ? <Trans>Show more</Trans> : <Trans>Hide</Trans>}\n          </TruncateDescriptionButton>\n        )}\n      </TokenDescriptionContainer>\n      {hasFee && (\n        <MouseoverTooltip\n          placement=\"left\"\n          size={TooltipSize.Small}\n          text={\n            <ThemedText.Caption color=\"neutral2\">\n              <FOTTooltipContent />\n            </ThemedText.Caption>\n          }\n        >\n          <Column gap=\"sm\">\n            {sameFee ? (\n              <ThemedText.BodyPrimary>\n                {tokenQuery?.token?.symbol}&nbsp;\n                <Trans>fee:</Trans>&nbsp;{sellFeeString}\n              </ThemedText.BodyPrimary>\n            ) : (\n              <>\n                <ThemedText.BodyPrimary>\n                  {tokenQuery?.token?.symbol}&nbsp;\n                  <Trans>buy fee:</Trans>&nbsp;{buyFeeString}\n                </ThemedText.BodyPrimary>{' '}\n                <ThemedText.BodyPrimary>\n                  {tokenQuery?.token?.symbol}&nbsp;\n                  <Trans>sell fee:</Trans>&nbsp;{sellFeeString}\n                </ThemedText.BodyPrimary>{' '}\n              </>\n            )}\n          </Column>\n        </MouseoverTooltip>\n      )}\n    </TokenInfoSection>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { InterfacePageName } from '@uniswap/analytics-events'\nimport { useWeb3React } from '@web3-react/core'\nimport { Trace } from 'analytics'\nimport { PortfolioLogo } from 'components/AccountDrawer/MiniPortfolio/PortfolioLogo'\nimport { AboutSection } from 'components/Tokens/TokenDetails/About'\nimport AddressSection from 'components/Tokens/TokenDetails/AddressSection'\nimport BalanceSummary from 'components/Tokens/TokenDetails/BalanceSummary'\nimport { BreadcrumbNav, BreadcrumbNavLink } from 'components/Tokens/TokenDetails/BreadcrumbNavLink'\nimport ChartSection from 'components/Tokens/TokenDetails/ChartSection'\nimport MobileBalanceSummaryFooter from 'components/Tokens/TokenDetails/MobileBalanceSummaryFooter'\nimport ShareButton from 'components/Tokens/TokenDetails/ShareButton'\nimport TokenDetailsSkeleton, {\n  Hr,\n  LeftPanel,\n  RightPanel,\n  TokenDetailsLayout,\n  TokenInfoContainer,\n  TokenNameCell,\n} from 'components/Tokens/TokenDetails/Skeleton'\nimport StatsSection from 'components/Tokens/TokenDetails/StatsSection'\nimport TokenSafetyMessage from 'components/TokenSafety/TokenSafetyMessage'\nimport TokenSafetyModal from 'components/TokenSafety/TokenSafetyModal'\nimport { NATIVE_CHAIN_ID, nativeOnChain } from 'constants/tokens'\nimport { checkWarning } from 'constants/tokenSafety'\nimport { useInfoExplorePageEnabled } from 'featureFlags/flags/infoExplore'\nimport { useInfoTDPEnabled } from 'featureFlags/flags/infoTDP'\nimport { TokenPriceQuery } from 'graphql/data/__generated__/types-and-hooks'\nimport { Chain, TokenQuery, TokenQueryData } from 'graphql/data/Token'\nimport { getTokenDetailsURL, gqlToCurrency, InterfaceGqlChain, supportedChainIdFromGQLChain } from 'graphql/data/util'\nimport { useOnGlobalChainSwitch } from 'hooks/useGlobalChainSwitch'\nimport { UNKNOWN_TOKEN_SYMBOL, useTokenFromActiveNetwork } from 'lib/hooks/useCurrency'\nimport { Swap } from 'pages/Swap'\nimport { useCallback, useMemo, useState, useTransition } from 'react'\nimport { ArrowLeft, ChevronRight } from 'react-feather'\nimport { useNavigate } from 'react-router-dom'\nimport { Field } from 'state/swap/actions'\nimport { SwapState } from 'state/swap/reducer'\nimport styled from 'styled-components'\nimport { CopyContractAddress } from 'theme/components'\nimport { isAddress, shortenAddress } from 'utils'\nimport { addressesAreEquivalent } from 'utils/addressesAreEquivalent'\n\nimport { OnChangeTimePeriod } from './ChartSection'\nimport InvalidTokenDetails from './InvalidTokenDetails'\nimport { TokenDescription } from './TokenDescription'\n\nconst TokenSymbol = styled.span`\n  text-transform: uppercase;\n  color: ${({ theme }) => theme.neutral2};\n  margin-left: 8px;\n`\nconst TokenActions = styled.div`\n  display: flex;\n  gap: 16px;\n  color: ${({ theme }) => theme.neutral2};\n`\nconst TokenTitle = styled.div`\n  display: flex;\n  @media screen and (max-width: ${({ theme }) => theme.breakpoint.md}px) {\n    display: inline;\n  }\n`\n\nfunction useOnChainToken(address: string | undefined, skip: boolean) {\n  const token = useTokenFromActiveNetwork(skip || !address ? undefined : address)\n\n  if (skip || !address || (token && token?.symbol === UNKNOWN_TOKEN_SYMBOL)) {\n    return undefined\n  } else {\n    return token\n  }\n}\n\n// Selects most relevant token based on data available, preferring native > query > on-chain\n// Token will be null if still loading from on-chain, and undefined if unavailable\nfunction useRelevantToken(\n  address: string | undefined,\n  pageChainId: number,\n  tokenQueryData: TokenQueryData | undefined\n) {\n  const { chainId: activeChainId } = useWeb3React()\n  const queryToken = useMemo(() => {\n    if (!address) return undefined\n    if (address === NATIVE_CHAIN_ID) return nativeOnChain(pageChainId)\n    if (tokenQueryData) return gqlToCurrency(tokenQueryData)\n    return undefined\n  }, [pageChainId, address, tokenQueryData])\n  // fetches on-chain token if query data is missing and page chain matches global chain (else fetch won't work)\n  const skipOnChainFetch = Boolean(queryToken) || pageChainId !== activeChainId\n  const onChainToken = useOnChainToken(address, skipOnChainFetch)\n\n  return useMemo(\n    () => ({ token: queryToken ?? onChainToken, didFetchFromChain: !queryToken }),\n    [onChainToken, queryToken]\n  )\n}\n\ntype TokenDetailsProps = {\n  urlAddress?: string\n  inputTokenAddress?: string\n  chain: InterfaceGqlChain\n  tokenQuery: TokenQuery\n  tokenPriceQuery?: TokenPriceQuery\n  onChangeTimePeriod: OnChangeTimePeriod\n}\nexport default function TokenDetails({\n  urlAddress,\n  inputTokenAddress,\n  chain,\n  tokenQuery,\n  tokenPriceQuery,\n  onChangeTimePeriod,\n}: TokenDetailsProps) {\n  if (!urlAddress) {\n    throw new Error('Invalid token details route: tokenAddress param is undefined')\n  }\n  const address = useMemo(\n    () => (urlAddress === NATIVE_CHAIN_ID ? urlAddress : isAddress(urlAddress) || undefined),\n    [urlAddress]\n  )\n\n  const { chainId: connectedChainId } = useWeb3React()\n  const pageChainId = supportedChainIdFromGQLChain(chain)\n  const tokenQueryData = tokenQuery.token\n  const crossChainMap = useMemo(\n    () =>\n      tokenQueryData?.project?.tokens.reduce((map, current) => {\n        if (current) map[current.chain] = current.address\n        return map\n      }, {} as { [key: string]: string | undefined }) ?? {},\n    [tokenQueryData]\n  )\n\n  const { token: detailedToken, didFetchFromChain } = useRelevantToken(address, pageChainId, tokenQueryData)\n\n  const tokenWarning = address ? checkWarning(address) : null\n  const isBlockedToken = tokenWarning?.canProceed === false\n  const navigate = useNavigate()\n\n  const isInfoExplorePageEnabled = useInfoExplorePageEnabled()\n  const isInfoTDPEnabled = useInfoTDPEnabled()\n\n  // Wrapping navigate in a transition prevents Suspense from unnecessarily showing fallbacks again.\n  const [isPending, startTokenTransition] = useTransition()\n  const navigateToTokenForChain = useCallback(\n    (update: Chain) => {\n      if (!address) return\n      const bridgedAddress = crossChainMap[update]\n      if (bridgedAddress) {\n        startTokenTransition(() =>\n          navigate(\n            getTokenDetailsURL({\n              address: bridgedAddress,\n              chain: update,\n              isInfoExplorePageEnabled,\n            })\n          )\n        )\n      } else if (didFetchFromChain || detailedToken?.isNative) {\n        startTokenTransition(() => navigate(getTokenDetailsURL({ address, chain: update, isInfoExplorePageEnabled })))\n      }\n    },\n    [address, crossChainMap, didFetchFromChain, detailedToken?.isNative, navigate, isInfoExplorePageEnabled]\n  )\n  useOnGlobalChainSwitch(navigateToTokenForChain)\n\n  const handleCurrencyChange = useCallback(\n    (tokens: Pick<SwapState, Field.INPUT | Field.OUTPUT>) => {\n      if (\n        addressesAreEquivalent(tokens[Field.INPUT]?.currencyId, address) ||\n        addressesAreEquivalent(tokens[Field.OUTPUT]?.currencyId, address)\n      ) {\n        return\n      }\n\n      const newDefaultTokenID = tokens[Field.OUTPUT]?.currencyId ?? tokens[Field.INPUT]?.currencyId\n      startTokenTransition(() =>\n        navigate(\n          getTokenDetailsURL({\n            // The function falls back to \"NATIVE\" if the address is null\n            address: newDefaultTokenID === 'ETH' ? null : newDefaultTokenID,\n            chain,\n            inputAddress:\n              // If only one token was selected before we navigate, then it was the default token and it's being replaced.\n              // On the new page, the *new* default token becomes the output, and we don't have another option to set as the input token.\n              tokens[Field.INPUT] && tokens[Field.INPUT]?.currencyId !== newDefaultTokenID\n                ? tokens[Field.INPUT]?.currencyId\n                : null,\n            isInfoExplorePageEnabled,\n          })\n        )\n      )\n    },\n    [address, chain, isInfoExplorePageEnabled, navigate]\n  )\n\n  const [continueSwap, setContinueSwap] = useState<{ resolve: (value: boolean | PromiseLike<boolean>) => void }>()\n\n  const [openTokenSafetyModal, setOpenTokenSafetyModal] = useState(false)\n\n  const onResolveSwap = useCallback(\n    (value: boolean) => {\n      continueSwap?.resolve(value)\n      setContinueSwap(undefined)\n    },\n    [continueSwap, setContinueSwap]\n  )\n\n  // address will never be undefined if token is defined; address is checked here to appease typechecker\n  if (detailedToken === undefined || !address) {\n    return <InvalidTokenDetails pageChainId={pageChainId} isInvalidAddress={!address} />\n  }\n  const tokenSymbolName = detailedToken && (detailedToken.symbol ?? <Trans>Symbol not found</Trans>)\n  return (\n    <Trace\n      page={InterfacePageName.TOKEN_DETAILS_PAGE}\n      properties={{ tokenAddress: address, tokenName: detailedToken?.name }}\n      shouldLogImpression\n    >\n      <TokenDetailsLayout>\n        {detailedToken && !isPending ? (\n          <LeftPanel>\n            {isInfoTDPEnabled ? (\n              <BreadcrumbNav isInfoTDPEnabled>\n                <BreadcrumbNavLink to={`${isInfoExplorePageEnabled ? '/explore' : ''}/tokens/${chain.toLowerCase()}`}>\n                  <Trans>Explore</Trans> <ChevronRight size={14} /> <Trans>Tokens</Trans> <ChevronRight size={14} />\n                </BreadcrumbNavLink>{' '}\n                {tokenSymbolName}{' '}\n                {!detailedToken.isNative && (\n                  <>\n                    (\n                    <CopyContractAddress\n                      address={address}\n                      showTruncatedOnly\n                      truncatedAddress={shortenAddress(address)}\n                    />\n                    )\n                  </>\n                )}\n              </BreadcrumbNav>\n            ) : (\n              <BreadcrumbNav>\n                <BreadcrumbNavLink to={`${isInfoExplorePageEnabled ? '/explore' : ''}/tokens/${chain.toLowerCase()}`}>\n                  <ArrowLeft data-testid=\"token-details-return-button\" size={14} /> Tokens\n                </BreadcrumbNavLink>\n              </BreadcrumbNav>\n            )}\n            <TokenInfoContainer data-testid=\"token-info-container\">\n              <TokenNameCell>\n                <PortfolioLogo currencies={[detailedToken]} chainId={detailedToken.chainId} size=\"32px\" />\n                <TokenTitle>\n                  {detailedToken.name ?? <Trans>Name not found</Trans>}\n                  <TokenSymbol>{tokenSymbolName}</TokenSymbol>\n                </TokenTitle>\n              </TokenNameCell>\n              <TokenActions>\n                <ShareButton currency={detailedToken} />\n              </TokenActions>\n            </TokenInfoContainer>\n            <ChartSection tokenPriceQuery={tokenPriceQuery} onChangeTimePeriod={onChangeTimePeriod} />\n\n            <StatsSection chainId={pageChainId} address={address} tokenQueryData={tokenQueryData} />\n            <Hr />\n            <AboutSection\n              address={address}\n              chainId={pageChainId}\n              description={tokenQueryData?.project?.description}\n              homepageUrl={tokenQueryData?.project?.homepageUrl}\n              twitterName={tokenQueryData?.project?.twitterName}\n            />\n            {!detailedToken.isNative && <AddressSection address={address} />}\n          </LeftPanel>\n        ) : (\n          <TokenDetailsSkeleton />\n        )}\n\n        <RightPanel isInfoTDPEnabled={isInfoTDPEnabled} onClick={() => isBlockedToken && setOpenTokenSafetyModal(true)}>\n          <div style={{ pointerEvents: isBlockedToken ? 'none' : 'auto' }}>\n            <Swap\n              chainId={pageChainId}\n              initialInputCurrencyId={inputTokenAddress}\n              initialOutputCurrencyId={address === NATIVE_CHAIN_ID ? 'ETH' : address}\n              onCurrencyChange={handleCurrencyChange}\n              disableTokenInputs={pageChainId !== connectedChainId}\n            />\n          </div>\n          {tokenWarning && <TokenSafetyMessage tokenAddress={address} warning={tokenWarning} />}\n          {!isInfoTDPEnabled && detailedToken && <BalanceSummary token={detailedToken} />}\n          {isInfoTDPEnabled && (\n            <TokenDescription\n              tokenAddress={address}\n              chainId={pageChainId}\n              isNative={detailedToken?.isNative}\n              characterCount={200}\n            />\n          )}\n        </RightPanel>\n        {!isInfoTDPEnabled && detailedToken && <MobileBalanceSummaryFooter token={detailedToken} />}\n\n        <TokenSafetyModal\n          isOpen={openTokenSafetyModal || !!continueSwap}\n          tokenAddress={address}\n          onContinue={() => onResolveSwap(true)}\n          onBlocked={() => {\n            setOpenTokenSafetyModal(false)\n          }}\n          onCancel={() => onResolveSwap(false)}\n          showCancel={true}\n        />\n      </TokenDetailsLayout>\n    </Trace>\n  )\n}\n","import TokenDetails from 'components/Tokens/TokenDetails'\nimport { TokenDetailsPageSkeleton } from 'components/Tokens/TokenDetails/Skeleton'\nimport { NATIVE_CHAIN_ID } from 'constants/tokens'\nimport { useTokenPriceQuery, useTokenQuery } from 'graphql/data/__generated__/types-and-hooks'\nimport { TimePeriod, toHistoryDuration, validateUrlChainParam } from 'graphql/data/util'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useAtom } from 'jotai'\nimport { atomWithStorage } from 'jotai/utils'\nimport { useEffect, useMemo, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { getNativeTokenDBAddress } from 'utils/nativeTokens'\n\nexport const pageTimePeriodAtom = atomWithStorage<TimePeriod>('tokenDetailsTimePeriod', TimePeriod.DAY)\n\nexport default function TokenDetailsPage() {\n  const { tokenAddress, chainName } = useParams<{\n    tokenAddress: string\n    chainName?: string\n  }>()\n  const chain = validateUrlChainParam(chainName)\n  const isNative = tokenAddress === NATIVE_CHAIN_ID\n  const [timePeriod, setTimePeriod] = useAtom(pageTimePeriodAtom)\n  const [detailedTokenAddress, duration] = useMemo(\n    // tokenAddress will always be defined in the path for for this page to render, but useParams will always\n    // return optional arguments; nullish coalescing operator is present here to appease typechecker\n    () => [isNative ? getNativeTokenDBAddress(chain) : tokenAddress ?? '', toHistoryDuration(timePeriod)],\n    [chain, isNative, timePeriod, tokenAddress]\n  )\n\n  const parsedQs = useParsedQueryString()\n\n  const parsedInputTokenAddress: string | undefined = useMemo(() => {\n    return typeof parsedQs.inputCurrency === 'string' ? (parsedQs.inputCurrency as string) : undefined\n  }, [parsedQs])\n\n  const { data: tokenQuery } = useTokenQuery({\n    variables: {\n      address: detailedTokenAddress,\n      chain,\n    },\n    errorPolicy: 'all',\n  })\n\n  const { data: tokenPriceQuery } = useTokenPriceQuery({\n    variables: {\n      address: detailedTokenAddress,\n      chain,\n      duration,\n    },\n    errorPolicy: 'all',\n  })\n\n  // Saves already-loaded chart data into state to display while tokenPriceQuery is undefined timePeriod input changes\n  const [currentPriceQuery, setCurrentPriceQuery] = useState(tokenPriceQuery)\n  useEffect(() => {\n    if (tokenPriceQuery) setCurrentPriceQuery(tokenPriceQuery)\n  }, [setCurrentPriceQuery, tokenPriceQuery])\n\n  if (!tokenQuery) return <TokenDetailsPageSkeleton />\n\n  return (\n    <TokenDetails\n      urlAddress={tokenAddress}\n      chain={chain}\n      tokenQuery={tokenQuery}\n      tokenPriceQuery={currentPriceQuery}\n      onChangeTimePeriod={setTimePeriod}\n      inputTokenAddress={parsedInputTokenAddress}\n    />\n  )\n}\n","export function addressesAreEquivalent(a: string | null | undefined, b: string | null | undefined) {\n  if (!a || !b) return false\n  return a === b || a.toLowerCase() === b.toLowerCase()\n}\n"],"names":["Share","props","svg","width","height","viewBox","fill","xmlns","path","d","FilterOption","styled","button","theme","active","neutral1","surface1","transition","duration","fast","surface3","highlight","accent1","accent2","surface2","opacity","hover","DISPLAYS","TimePeriod","HOUR","DAY","WEEK","MONTH","YEAR","ORDERED_TIMES","InternalMenuItem","div","InternalLinkMenuItem","MenuTimeFlyout","span","isInfoExplorePageEnabled","deprecated_deepShadow","css","SMALL_MEDIA_BREAKPOINT","StyledMenu","MOBILE_MEDIA_BREAKPOINT","StyledMenuContent","Chevron","open","neutral2","TimeSelector","useTheme","node","useRef","useModalIsOpen","ApplicationModal","TIME_SELECTOR","toggleMenu","useToggleModal","useOnClickOutside","undefined","activeTime","setTime","useAtom","filterTimeAtom","useInfoExplorePageEnabled","ref","onClick","aria-label","data-testid","ChevronUp","ChevronDown","map","time","Check","color","size","ContractAddressSection","ContractAddress","AddressSection","address","ThemedText","SubHeaderSmall","CopyContractAddress","truncatedAddress","shortenAddress","BalancesCard","BalanceSection","BalanceRow","BalanceItem","BalanceContainer","BalanceAmountsContainer","StyledNetworkLabel","BalanceSummary","token","account","chainId","useWeb3React","label","getChainInfo","asSupportedChain","SupportedChainId","MAINNET","balance","useCurrencyBalance","formatCurrencyAmount","useFormatter","formattedBalance","amount","type","NumberType","TokenNonTx","formattedUsdValue","useStablecoinValue","FiatTokenStats","currencies","useMemo","PortfolioLogo","SubHeader","symbol","BodyPrimary","config","ms","easing","easeSinOut","AnimatedInLineChart","data","getX","getY","marginTop","curve","strokeWidth","lineRef","lineLength","setLineLength","useState","shouldAnimate","setShouldAnimate","hasAnimatedIn","setHasAnimatedIn","spring","useSpring","frame","onRest","useEffect","current","length","getTotalLength","lineColor","Group","top","LinePath","x","y","animated","strokeOpacity","stroke","strokeDashoffset","to","v","strokeDasharray","React","easeCubicInOut","FadedInLineChart","dashed","ChartErrorType","NO_DATA_AVAILABLE","NO_RECENT_VOLUME","INVALID_CHART","HOUR_OPTIONS","hour","minute","hour12","DAY_HOUR_OPTIONS","month","day","TimestampFormatterType","TICK","CROSSHAIR","TIME_PERIOD_TO_FORMAT_OPTIONS","weekday","year","getTimestampFormatter","timePeriod","locale","formatterType","options","dateTimeFormatter","Intl","DateTimeFormat","timestamp","epochTimeInMilliseconds","valueOf","format","CHART_MARGIN","bottom","crosshair","ChartHeaderWrapper","textFadeIn","medium","stale","PriceContainer","DeltaContainer","ChartDelta","startingPrice","endingPrice","noColor","delta","calculateDelta","value","formatDelta","DeltaArrow","ChartHeader","crosshairPrice","chart","formatFiatPrice","lastValidPrice","priceOutdated","displayPrice","displayIsStale","data-cy","HeadlineLarge","price","MouseoverTooltip","text","Info","ChartBody","useActiveLocale","prices","blanks","timeScale","priceScale","dimensions","ticks","tickTimestampFormatter","crosshairTimestampFormatter","maxTicks","Math","floor","getTicks","setCrosshair","resetCrosshair","useCallback","setCrosshairOnHover","event","localPoint","getNearestPricePoint","crosshairEdgeMax","crosshairAtEdge","curveTension","p","curveCardinal","tension","style","minWidth","blank","index","neutral3","g","AxisBottom","scale","hideTicks","tickValues","tickFormat","tickLabelProps","fontSize","textAnchor","transform","Line","from","pointerEvents","GlyphCircle","left","hideAxisLine","line","x1","y1","x2","y2","shapeRendering","rect","onTouchStart","onTouchMove","onMouseMove","onMouseLeave","CHART_ERROR_MESSAGES","MissingPriceChart","midPoint","BodySmall","error","PriceChart","innerHeight","marginBottom","fixedPrices","cleanPricePoints","min","max","getPriceBounds","scaleLinear","domain","range","buildChartModel","TimeOptionsWrapper","TimeOptionsContainer","MEDIUM_MEDIA_BREAKPOINT","TimeButton","TimePeriodSelector","currentTimePeriod","onTimeChange","setTimePeriod","startTransition","ChartSection","tokenPriceQuery","onChangeTimePeriod","Suspense","fallback","LoadingChart","ChartContainer","Chart","tokenPriceData","market","priceHistory","filter","isPricePoint","currentPrice","Array","isArray","Date","now","useAtomValue","pageTimePeriodAtom","ParentSize","t","Wrapper","breakpoint","md","lg","BalanceValue","Balance","BalanceInfo","FiatValue","sm","SwapButton","StyledInternalLink","deprecated_accentTextLightPrimary","MobileBalanceSummaryFooter","chain","CHAIN_ID_TO_BACKEND_NAME","toLowerCase","Boolean","isNative","NATIVE_CHAIN_ID","TWITTER_WIDTH","TWITTER_HEIGHT","ShareButtonDisplay","ShareIcon","ClickableStyle","click","ShareActions","Z_INDEX","dropdown","ShareAction","opacify","darkMode","colors","gray200","gray300","ShareButton","currency","SHARE","toggleShare","positionX","window","screen","positionY","wrapped","useDisableScrolling","copyHelperRef","forceCopy","CopyHelper","InitialIcon","Link","iconPosition","gap","toCopy","location","href","name","chainIdToBackendName","Twitter","Label","backgroundColor","TitleRow","Title","Text","DetailsRow","StyledLink","ExternalLink","TokenSafetyMessage","warning","tokenAddress","useTokenWarningColor","level","textColor","useTokenWarningTextColor","heading","description","getWarningCopy","displayWarningLabel","canProceed","AlertTriangle","Slash","marginLeft","message","TOKEN_SAFETY_ARTICLE","useOnGlobalChainSwitch","callback","connectedChainId","globalChainName","prevGlobalChainRef","_path","_extends","Object","assign","bind","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","SvgEye","_ref","svgRef","title","titleId","id","ForwardRef","InvalidDetailsContainer","InvalidDetailsText","TokenExploreButton","ButtonPrimary","InvalidTokenDetails","pageChainId","isInvalidAddress","navigate","useNavigate","selectChain","dispatch","useAppDispatch","connector","switchChain","useSwitchChain","searchParams","setSearchParams","useSearchParams","async","targetChain","connection","getConnection","isSupportedChain","set","CHAIN_IDS_TO_NAMES","didUserReject","code","console","addPopup","content","failedSwitchNetwork","PopupType","FailedSwitchNetwork","useSelectChain","isNonExistantToken","connectedChainLabel","EyeIcon","Globe","TwitterXLogo","TokenInfoSection","Column","BREAKPOINTS","TokenNameRow","Row","TokenButtonRow","TokenInfoButton","tokenColor","TokenDescriptionContainer","EllipsisStyle","DescriptionVisibilityWrapper","$visible","TRUNCATE_CHARACTER_COUNT","TokenDescription","characterCount","chainName","tokenQuery","useTokenProjectQuery","variables","getNativeTokenDBAddress","errorPolicy","tokenProject","project","explorerUrl","getExplorerLink","ExplorerDataType","NATIVE","TOKEN","setCopied","useCopyClipboard","copy","isDescriptionTruncated","toggleIsDescriptionTruncated","useReducer","truncatedDescription","truncateDescription","shouldTruncate","showTruncatedDescription","inputTax","sellFee","outputTax","buyFee","useSwapTaxes","formatPercent","sellFeeString","buyFeeString","hasFee","parseFloat","toFixed","sameFee","HeadlineSmall","Copy","EtherscanLogo","homepageUrl","twitterName","NoInfoAvailable","TruncateDescriptionButton","placement","TooltipSize","Small","Caption","FOTTooltipContent","TokenSymbol","TokenActions","TokenTitle","useRelevantToken","tokenQueryData","activeChainId","queryToken","nativeOnChain","gqlToCurrency","skipOnChainFetch","onChainToken","skip","useTokenFromActiveNetwork","UNKNOWN_TOKEN_SYMBOL","useOnChainToken","didFetchFromChain","TokenDetails","urlAddress","inputTokenAddress","Error","isAddress","supportedChainIdFromGQLChain","crossChainMap","tokens","reduce","detailedToken","tokenWarning","checkWarning","isBlockedToken","isInfoTDPEnabled","useInfoTDPEnabled","isPending","startTokenTransition","useTransition","navigateToTokenForChain","update","bridgedAddress","getTokenDetailsURL","handleCurrencyChange","addressesAreEquivalent","Field","INPUT","currencyId","OUTPUT","newDefaultTokenID","inputAddress","continueSwap","setContinueSwap","openTokenSafetyModal","setOpenTokenSafetyModal","onResolveSwap","resolve","tokenSymbolName","Trace","page","InterfacePageName","TOKEN_DETAILS_PAGE","properties","tokenName","shouldLogImpression","TokenDetailsLayout","LeftPanel","BreadcrumbNav","BreadcrumbNavLink","ChevronRight","showTruncatedOnly","ArrowLeft","TokenInfoContainer","TokenNameCell","StatsSection","Hr","AboutSection","TokenDetailsSkeleton","RightPanel","Swap","initialInputCurrencyId","initialOutputCurrencyId","onCurrencyChange","disableTokenInputs","TokenSafetyModal","isOpen","onContinue","onBlocked","onCancel","showCancel","atomWithStorage","TokenDetailsPage","useParams","validateUrlChainParam","detailedTokenAddress","toHistoryDuration","parsedQs","useParsedQueryString","parsedInputTokenAddress","inputCurrency","useTokenQuery","useTokenPriceQuery","currentPriceQuery","setCurrentPriceQuery","TokenDetailsPageSkeleton","a","b"],"sourceRoot":""}