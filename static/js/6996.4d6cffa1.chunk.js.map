{"version":3,"file":"static/js/6996.4d6cffa1.chunk.js","mappings":"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","sources":["components/Tokens/TokenTable/FilterOption.tsx","components/Tokens/TokenTable/TimeSelector.tsx","components/Tokens/TokenTable/NetworkFilter.tsx","assets/svg/x.svg","components/Tokens/TokenTable/SearchBar.tsx","graphql/data/TopTokens.ts","components/Tokens/TokenTable/TokenTable.tsx","pages/Explore/index.tsx","pages/Explore/redirects.tsx"],"sourcesContent":["import styled from 'styled-components'\nconst FilterOption = styled.button<{ active: boolean; highlight?: boolean }>`\n  height: 100%;\n  color: ${({ theme, active }) => (active ? theme.neutral1 : theme.neutral1)};\n  background-color: ${({ theme, active }) => (active ? theme.surface1 : theme.surface1)};\n  margin: 0;\n  padding: 6px 6px 6px 14px;\n  border-radius: 12px;\n  font-size: 16px;\n  line-height: 24px;\n  font-weight: 535;\n  transition-duration: ${({ theme }) => theme.transition.duration.fast};\n  border: 1px solid ${({ theme }) => theme.surface3};\n  outline: ${({ theme, active, highlight }) => (active && highlight ? `1px solid ${theme.accent1}` : 'none')};\n\n  :hover {\n    cursor: pointer;\n    background-color: ${({ theme, active }) => (active ? theme.accent2 : theme.surface2)};\n    opacity: ${({ theme, active }) => (active ? theme.opacity.hover : 1)};\n  }\n  :focus {\n    background-color: ${({ theme, active }) => (active ? theme.surface2 : theme.surface3)};\n  }\n`\nexport default FilterOption\n","import { Trans } from '@lingui/macro'\nimport { useInfoExplorePageEnabled } from 'featureFlags/flags/infoExplore'\nimport { TimePeriod } from 'graphql/data/util'\nimport { useOnClickOutside } from 'hooks/useOnClickOutside'\nimport { useAtom } from 'jotai'\nimport { useRef } from 'react'\nimport { Check, ChevronDown, ChevronUp } from 'react-feather'\nimport { useModalIsOpen, useToggleModal } from 'state/application/hooks'\nimport { ApplicationModal } from 'state/application/reducer'\nimport styled, { css, useTheme } from 'styled-components'\n\nimport { MOBILE_MEDIA_BREAKPOINT, SMALL_MEDIA_BREAKPOINT } from '../constants'\nimport { filterTimeAtom } from '../state'\nimport FilterOption from './FilterOption'\n\nexport const DISPLAYS: Record<TimePeriod, string> = {\n  [TimePeriod.HOUR]: '1H',\n  [TimePeriod.DAY]: '1D',\n  [TimePeriod.WEEK]: '1W',\n  [TimePeriod.MONTH]: '1M',\n  [TimePeriod.YEAR]: '1Y',\n}\n\nexport const ORDERED_TIMES: TimePeriod[] = [\n  TimePeriod.HOUR,\n  TimePeriod.DAY,\n  TimePeriod.WEEK,\n  TimePeriod.MONTH,\n  TimePeriod.YEAR,\n]\n\nconst InternalMenuItem = styled.div`\n  flex: 1;\n  padding: 8px;\n  color: ${({ theme }) => theme.neutral1};\n  border-radius: 8px;\n\n  :hover {\n    cursor: pointer;\n    text-decoration: none;\n  }\n`\nconst InternalLinkMenuItem = styled(InternalMenuItem)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 12px 8px;\n  justify-content: space-between;\n  text-decoration: none;\n  cursor: pointer;\n\n  :hover {\n    background-color: ${({ theme }) => theme.surface3};\n    text-decoration: none;\n  }\n`\nconst MenuTimeFlyout = styled.span<{ isInfoExplorePageEnabled: boolean }>`\n  min-width: ${({ isInfoExplorePageEnabled }) => (isInfoExplorePageEnabled ? '150px' : '240px')};\n  max-height: 300px;\n  overflow: auto;\n  background-color: ${({ theme }) => theme.surface1};\n  box-shadow: ${({ theme }) => theme.deprecated_deepShadow};\n  border: 0.5px solid ${({ theme }) => theme.surface3};\n  border-radius: 12px;\n  padding: 8px;\n  display: flex;\n  flex-direction: column;\n  font-size: 16px;\n  position: absolute;\n  top: 48px;\n  z-index: 100;\n  left: 0px;\n\n  ${({ isInfoExplorePageEnabled }) =>\n    !isInfoExplorePageEnabled &&\n    css`\n      @media only screen and (max-width: ${SMALL_MEDIA_BREAKPOINT}) {\n        left: unset;\n        right: 0px;\n      }\n    `}\n`\nconst StyledMenu = styled.div<{ isInfoExplorePageEnabled: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  border: none;\n  text-align: left;\n\n  ${({ isInfoExplorePageEnabled }) =>\n    !isInfoExplorePageEnabled &&\n    css`\n      @media only screen and (max-width: ${MOBILE_MEDIA_BREAKPOINT}) {\n        width: 72px;\n      }\n    `}\n`\nconst StyledMenuContent = styled.div<{ isInfoExplorePageEnabled: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  gap: 8px;\n  align-items: center;\n  border: none;\n  width: 100%;\n  vertical-align: middle;\n  ${({ isInfoExplorePageEnabled }) => isInfoExplorePageEnabled && 'white-space: nowrap;'}\n`\nconst Chevron = styled.span<{ open: boolean }>`\n  padding-top: 1px;\n  color: ${({ open, theme }) => (open ? theme.neutral1 : theme.neutral2)};\n`\n\n// TODO: change this to reflect data pipeline\nexport default function TimeSelector() {\n  const theme = useTheme()\n  const node = useRef<HTMLDivElement | null>(null)\n  const open = useModalIsOpen(ApplicationModal.TIME_SELECTOR)\n  const toggleMenu = useToggleModal(ApplicationModal.TIME_SELECTOR)\n  useOnClickOutside(node, open ? toggleMenu : undefined)\n  const [activeTime, setTime] = useAtom(filterTimeAtom)\n\n  const isInfoExplorePageEnabled = useInfoExplorePageEnabled()\n\n  return (\n    <StyledMenu ref={node} isInfoExplorePageEnabled={isInfoExplorePageEnabled}>\n      <FilterOption onClick={toggleMenu} aria-label=\"timeSelector\" active={open} data-testid=\"time-selector\">\n        <StyledMenuContent isInfoExplorePageEnabled={isInfoExplorePageEnabled}>\n          {isInfoExplorePageEnabled ? (\n            <>\n              {DISPLAYS[activeTime]} <Trans>volume</Trans>\n            </>\n          ) : (\n            DISPLAYS[activeTime]\n          )}\n          <Chevron open={open}>\n            {open ? (\n              <ChevronUp width={20} height={15} viewBox=\"0 0 24 20\" />\n            ) : (\n              <ChevronDown width={20} height={15} viewBox=\"0 0 24 20\" />\n            )}\n          </Chevron>\n        </StyledMenuContent>\n      </FilterOption>\n      {open && (\n        <MenuTimeFlyout isInfoExplorePageEnabled={isInfoExplorePageEnabled}>\n          {ORDERED_TIMES.map((time) => (\n            <InternalLinkMenuItem\n              key={DISPLAYS[time]}\n              data-testid={DISPLAYS[time]}\n              onClick={() => {\n                setTime(time)\n                toggleMenu()\n              }}\n            >\n              {isInfoExplorePageEnabled ? (\n                <div>\n                  {DISPLAYS[time]} <Trans>volume</Trans>\n                </div>\n              ) : (\n                <div>{DISPLAYS[time]}</div>\n              )}\n              {time === activeTime && <Check color={theme.accent1} size={16} />}\n            </InternalLinkMenuItem>\n          ))}\n        </MenuTimeFlyout>\n      )}\n    </StyledMenu>\n  )\n}\n","import Badge from 'components/Badge'\nimport { ChainLogo } from 'components/Logo/ChainLogo'\nimport { getChainInfo } from 'constants/chainInfo'\nimport { useInfoExplorePageEnabled } from 'featureFlags/flags/infoExplore'\nimport {\n  BACKEND_NOT_YET_SUPPORTED_CHAIN_IDS,\n  BACKEND_SUPPORTED_CHAINS,\n  supportedChainIdFromGQLChain,\n  validateUrlChainParam,\n} from 'graphql/data/util'\nimport { useOnClickOutside } from 'hooks/useOnClickOutside'\nimport { useExploreParams } from 'pages/Explore/redirects'\nimport { useRef } from 'react'\nimport { Check, ChevronDown, ChevronUp } from 'react-feather'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { useModalIsOpen, useToggleModal } from 'state/application/hooks'\nimport { ApplicationModal } from 'state/application/reducer'\nimport styled, { css, useTheme } from 'styled-components'\nimport { EllipsisStyle } from 'theme/components'\n\nimport FilterOption from './FilterOption'\n\nconst InternalMenuItem = styled.div`\n  flex: 1;\n  padding: 12px 8px;\n  color: ${({ theme }) => theme.neutral1};\n\n  :hover {\n    cursor: pointer;\n    text-decoration: none;\n  }\n`\nconst InternalLinkMenuItem = styled(InternalMenuItem)<{ disabled?: boolean }>`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  text-decoration: none;\n  cursor: pointer;\n  border-radius: 8px;\n\n  :hover {\n    background-color: ${({ theme }) => theme.surface3};\n    text-decoration: none;\n  }\n\n  ${({ disabled }) =>\n    disabled &&\n    css`\n      opacity: 60%;\n      pointer-events: none;\n    `}\n`\nconst MenuTimeFlyout = styled.span<{ isInfoExplorePageEnabled: boolean }>`\n  min-width: ${({ isInfoExplorePageEnabled }) => (isInfoExplorePageEnabled ? '150px' : '240px')};\n  max-height: 350px;\n  overflow: auto;\n  background-color: ${({ theme }) => theme.surface1};\n  box-shadow: ${({ theme }) => theme.deprecated_deepShadow};\n  border: 0.5px solid ${({ theme }) => theme.surface3};\n  border-radius: 12px 0px 0px 12px;\n  padding: 8px;\n  display: flex;\n  flex-direction: column;\n  font-size: 16px;\n  position: absolute;\n  top: 48px;\n  z-index: 100;\n\n  scrollbar-width: thin;\n  scrollbar-color: ${({ theme }) => `${theme.surface3} transparent`};\n\n  // safari and chrome scrollbar styling\n  ::-webkit-scrollbar {\n    background: transparent;\n    width: 8px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: ${({ theme }) => theme.surface3};\n    border-radius: 8px;\n  }\n\n  ${({ isInfoExplorePageEnabled }) =>\n    isInfoExplorePageEnabled\n      ? css`\n          right: 0px;\n          @media screen and (max-width: ${({ theme }) => `${theme.breakpoint.lg}px`}) {\n            left: 0px;\n          }\n        `\n      : css`\n          left: 0px;\n        `}\n`\nconst StyledMenu = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  border: none;\n  text-align: left;\n`\nconst StyledMenuContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 8px;\n  align-items: center;\n  border: none;\n  font-weight: 535;\n  vertical-align: middle;\n`\nconst Chevron = styled.span<{ open: boolean }>`\n  padding-top: 1px;\n  color: ${({ open, theme }) => (open ? theme.neutral1 : theme.neutral2)};\n`\nconst NetworkLabel = styled.div`\n  ${EllipsisStyle}\n  display: flex;\n  gap: 8px;\n  align-items: center;\n`\nconst CheckContainer = styled.div`\n  display: flex;\n  flex-direction: flex-end;\n`\nconst NetworkFilterOption = styled(FilterOption)<{ isInfoExplorePageEnabled: boolean }>`\n  ${({ isInfoExplorePageEnabled }) => !isInfoExplorePageEnabled && 'min-width: 156px;'}\n`\nconst Tag = styled(Badge)`\n  background-color: ${({ theme }) => theme.surface2};\n  color: ${({ theme }) => theme.neutral2};\n  font-size: 10px;\n  opacity: 1;\n  padding: 4px 6px;\n`\n\nexport default function NetworkFilter() {\n  const theme = useTheme()\n  const node = useRef<HTMLDivElement | null>(null)\n  const open = useModalIsOpen(ApplicationModal.NETWORK_FILTER)\n  const toggleMenu = useToggleModal(ApplicationModal.NETWORK_FILTER)\n  useOnClickOutside(node, open ? toggleMenu : undefined)\n  const navigate = useNavigate()\n  const { tab } = useExploreParams()\n\n  const isInfoExplorePageEnabled = useInfoExplorePageEnabled()\n\n  const currentChainName = validateUrlChainParam(useParams().chainName)\n  const chainId = supportedChainIdFromGQLChain(currentChainName)\n\n  const chainInfo = getChainInfo(chainId)\n\n  return (\n    <StyledMenu ref={node}>\n      <NetworkFilterOption\n        isInfoExplorePageEnabled={isInfoExplorePageEnabled}\n        onClick={toggleMenu}\n        aria-label=\"networkFilter\"\n        active={open}\n        data-testid=\"tokens-network-filter-selected\"\n      >\n        <StyledMenuContent>\n          <NetworkLabel>\n            <ChainLogo chainId={chainId} size={20} /> {!isInfoExplorePageEnabled && chainInfo.label}\n          </NetworkLabel>\n          <Chevron open={open}>\n            {open ? (\n              <ChevronUp width={20} height={15} viewBox=\"0 0 24 20\" />\n            ) : (\n              <ChevronDown width={20} height={15} viewBox=\"0 0 24 20\" />\n            )}\n          </Chevron>\n        </StyledMenuContent>\n      </NetworkFilterOption>\n      {open && (\n        <MenuTimeFlyout isInfoExplorePageEnabled={isInfoExplorePageEnabled}>\n          {BACKEND_SUPPORTED_CHAINS.map((network) => {\n            const chainId = supportedChainIdFromGQLChain(network)\n            const chainInfo = getChainInfo(chainId)\n            return (\n              <InternalLinkMenuItem\n                key={network}\n                data-testid={`tokens-network-filter-option-${network.toLowerCase()}`}\n                onClick={() => {\n                  isInfoExplorePageEnabled\n                    ? navigate(`/explore/${tab}/${network.toLowerCase()}`)\n                    : navigate(`/tokens/${network.toLowerCase()}`)\n                  toggleMenu()\n                }}\n              >\n                <NetworkLabel>\n                  <ChainLogo chainId={chainId} size={20} /> {chainInfo.label}\n                </NetworkLabel>\n                {network === currentChainName && (\n                  <CheckContainer>\n                    <Check size={16} color={theme.accent1} />\n                  </CheckContainer>\n                )}\n              </InternalLinkMenuItem>\n            )\n          })}\n          {BACKEND_NOT_YET_SUPPORTED_CHAIN_IDS.map((network) => {\n            const chainInfo = getChainInfo(network)\n            return (\n              <InternalLinkMenuItem\n                key={network}\n                data-testid={`tokens-network-filter-option-${network}-chain`}\n                disabled\n              >\n                <NetworkLabel>\n                  <ChainLogo chainId={network} size={20} /> {chainInfo.label}\n                </NetworkLabel>\n                <Tag>Coming soon</Tag>\n              </InternalLinkMenuItem>\n            )\n          })}\n        </MenuTimeFlyout>\n      )}\n    </StyledMenu>\n  )\n}\n","var _line, _line2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgX(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    className: \"feather feather-x\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _line || (_line = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 18,\n    y1: 6,\n    x2: 6,\n    y2: 18\n  })), _line2 || (_line2 = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 6,\n    y1: 6,\n    x2: 18,\n    y2: 18\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgX);\nexport default __webpack_public_path__ + \"static/media/x.381ead042e56a19cb5bcac9d00c29e05.svg\";\nexport { ForwardRef as ReactComponent };","import { Trans } from '@lingui/macro'\nimport { BrowserEvent, InterfaceElementName, InterfaceEventName } from '@uniswap/analytics-events'\nimport { TraceEvent } from 'analytics'\nimport searchIcon from 'assets/svg/search.svg'\nimport xIcon from 'assets/svg/x.svg'\nimport { useInfoExplorePageEnabled } from 'featureFlags/flags/infoExplore'\nimport useDebounce from 'hooks/useDebounce'\nimport { useAtomValue, useUpdateAtom } from 'jotai/utils'\nimport { useEffect, useState } from 'react'\nimport styled from 'styled-components'\n\nimport { MEDIUM_MEDIA_BREAKPOINT } from '../constants'\nimport { filterStringAtom } from '../state'\nconst ICON_SIZE = '20px'\n\nconst SearchBarContainer = styled.div<{ isInfoExplorePageEnabled: boolean }>`\n  display: flex;\n  flex: 1;\n  ${({ isInfoExplorePageEnabled }) => isInfoExplorePageEnabled && 'justify-content: flex-end;'}\n`\nconst SearchInput = styled.input<{ isInfoExplorePageEnabled: boolean; isOpen?: boolean }>`\n  background: no-repeat scroll 7px 7px;\n  background-image: url(${searchIcon});\n  background-size: 20px 20px;\n  background-position: 12px center;\n  background-color: ${({ theme }) => theme.surface1};\n  border-radius: 12px;\n  border: 1px solid ${({ theme }) => theme.surface3};\n  height: 100%;\n  width: ${({ isInfoExplorePageEnabled, isOpen }) =>\n    isInfoExplorePageEnabled ? (isOpen ? '200px' : '0') : 'min(200px, 100%)'};\n  font-size: 16px;\n  font-weight: 485;\n  padding-left: 40px;\n  color: ${({ theme }) => theme.neutral2};\n  transition-duration: ${({ theme }) => theme.transition.duration.fast};\n  ${(isInfoExplorePageEnabled) => isInfoExplorePageEnabled && 'text-overflow: ellipsis;'}\n\n  :hover {\n    background-color: ${({ theme }) => theme.surface1};\n  }\n\n  :focus {\n    outline: none;\n    background-color: ${({ theme }) => theme.surface1};\n    border-color: ${({ theme }) => theme.accent1};\n    color: ${({ theme }) => theme.neutral1};\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.neutral3};\n  }\n  ::-webkit-search-cancel-button {\n    -webkit-appearance: none;\n    appearance: none;\n    height: ${ICON_SIZE};\n    width: ${ICON_SIZE};\n    background-image: url(${xIcon});\n    margin-right: 10px;\n    background-size: ${ICON_SIZE} ${ICON_SIZE};\n    cursor: pointer;\n  }\n\n  @media only screen and (max-width: ${MEDIUM_MEDIA_BREAKPOINT}) {\n    width: ${({ isInfoExplorePageEnabled, isOpen }) =>\n      isInfoExplorePageEnabled ? (isOpen ? 'min(100%, 200px)' : '0') : '100%'};\n  }\n`\n\nexport default function SearchBar({ tab }: { tab?: string }) {\n  const currentString = useAtomValue(filterStringAtom)\n  const [localFilterString, setLocalFilterString] = useState(currentString)\n  const setFilterString = useUpdateAtom(filterStringAtom)\n  const debouncedLocalFilterString = useDebounce(localFilterString, 300)\n  const isInfoExplorePageEnabled = useInfoExplorePageEnabled()\n  const [isOpen, setIsOpen] = useState(false)\n\n  useEffect(() => {\n    setLocalFilterString(currentString)\n  }, [currentString])\n\n  useEffect(() => {\n    setFilterString(debouncedLocalFilterString)\n  }, [debouncedLocalFilterString, setFilterString])\n\n  const handleFocus = () => setIsOpen(true)\n\n  const handleBlur = () => {\n    if (localFilterString === '') setIsOpen(false)\n  }\n\n  return (\n    <SearchBarContainer isInfoExplorePageEnabled={isInfoExplorePageEnabled}>\n      <Trans\n        render={({ translation }) => (\n          <TraceEvent\n            events={[BrowserEvent.onFocus]}\n            name={InterfaceEventName.EXPLORE_SEARCH_SELECTED}\n            element={InterfaceElementName.EXPLORE_SEARCH_INPUT}\n          >\n            <SearchInput\n              isInfoExplorePageEnabled={isInfoExplorePageEnabled}\n              data-cy=\"explore-tokens-search-input\"\n              type=\"search\"\n              placeholder={`${translation}`}\n              id=\"searchBar\"\n              autoComplete=\"off\"\n              value={localFilterString}\n              onChange={({ target: { value } }) => setLocalFilterString(value)}\n              isOpen={isOpen}\n              onFocus={isInfoExplorePageEnabled ? handleFocus : undefined}\n              onBlur={isInfoExplorePageEnabled ? handleBlur : undefined}\n            />\n          </TraceEvent>\n        )}\n      >\n        {isInfoExplorePageEnabled ? (tab === 'tokens' ? 'Search tokens' : 'Search pools') : 'Filter tokens'}\n      </Trans>\n    </SearchBarContainer>\n  )\n}\n","import {\n  filterStringAtom,\n  filterTimeAtom,\n  sortAscendingAtom,\n  sortMethodAtom,\n  TokenSortMethod,\n} from 'components/Tokens/state'\nimport gql from 'graphql-tag'\nimport { useAtomValue } from 'jotai/utils'\nimport { useMemo } from 'react'\n\nimport {\n  Chain,\n  TopTokens100Query,\n  useTopTokens100Query,\n  useTopTokensSparklineQuery,\n} from './__generated__/types-and-hooks'\nimport {\n  isPricePoint,\n  PollingInterval,\n  PricePoint,\n  supportedChainIdFromGQLChain,\n  toHistoryDuration,\n  unwrapToken,\n  usePollQueryWhileMounted,\n} from './util'\n\ngql`\n  query TopTokens100($duration: HistoryDuration!, $chain: Chain!) {\n    topTokens(pageSize: 100, page: 1, chain: $chain, orderBy: VOLUME) {\n      id\n      name\n      chain\n      address\n      symbol\n      standard\n      market(currency: USD) {\n        id\n        totalValueLocked {\n          id\n          value\n          currency\n        }\n        price {\n          id\n          value\n          currency\n        }\n        pricePercentChange(duration: $duration) {\n          id\n          currency\n          value\n        }\n        volume(duration: $duration) {\n          id\n          value\n          currency\n        }\n      }\n      project {\n        id\n        logoUrl\n      }\n    }\n  }\n`\n\n// We separately query sparkline data so that the large download time does not block Token Explore rendering\ngql`\n  query TopTokensSparkline($duration: HistoryDuration!, $chain: Chain!) {\n    topTokens(pageSize: 100, page: 1, chain: $chain, orderBy: VOLUME) {\n      id\n      address\n      chain\n      market(currency: USD) {\n        id\n        priceHistory(duration: $duration) {\n          id\n          timestamp\n          value\n        }\n      }\n    }\n  }\n`\n\nfunction useSortedTokens(tokens: TopTokens100Query['topTokens']) {\n  const sortMethod = useAtomValue(sortMethodAtom)\n  const sortAscending = useAtomValue(sortAscendingAtom)\n\n  return useMemo(() => {\n    if (!tokens) return undefined\n    let tokenArray = Array.from(tokens)\n    switch (sortMethod) {\n      case TokenSortMethod.PRICE:\n        tokenArray = tokenArray.sort((a, b) => (b?.market?.price?.value ?? 0) - (a?.market?.price?.value ?? 0))\n        break\n      case TokenSortMethod.PERCENT_CHANGE:\n        tokenArray = tokenArray.sort(\n          (a, b) => (b?.market?.pricePercentChange?.value ?? 0) - (a?.market?.pricePercentChange?.value ?? 0)\n        )\n        break\n      case TokenSortMethod.TOTAL_VALUE_LOCKED:\n        tokenArray = tokenArray.sort(\n          (a, b) => (b?.market?.totalValueLocked?.value ?? 0) - (a?.market?.totalValueLocked?.value ?? 0)\n        )\n        break\n      case TokenSortMethod.VOLUME:\n        tokenArray = tokenArray.sort((a, b) => (b?.market?.volume?.value ?? 0) - (a?.market?.volume?.value ?? 0))\n        break\n    }\n\n    return sortAscending ? tokenArray.reverse() : tokenArray\n  }, [tokens, sortMethod, sortAscending])\n}\n\nfunction useFilteredTokens(tokens: TopTokens100Query['topTokens']) {\n  const filterString = useAtomValue(filterStringAtom)\n\n  const lowercaseFilterString = useMemo(() => filterString.toLowerCase(), [filterString])\n\n  return useMemo(() => {\n    if (!tokens) return undefined\n    let returnTokens = tokens\n    if (lowercaseFilterString) {\n      returnTokens = returnTokens?.filter((token) => {\n        const addressIncludesFilterString = token?.address?.toLowerCase().includes(lowercaseFilterString)\n        const nameIncludesFilterString = token?.name?.toLowerCase().includes(lowercaseFilterString)\n        const symbolIncludesFilterString = token?.symbol?.toLowerCase().includes(lowercaseFilterString)\n        return nameIncludesFilterString || symbolIncludesFilterString || addressIncludesFilterString\n      })\n    }\n    return returnTokens\n  }, [tokens, lowercaseFilterString])\n}\n\n// Number of items to render in each fetch in infinite scroll.\nexport const PAGE_SIZE = 20\nexport type SparklineMap = { [key: string]: PricePoint[] | undefined }\nexport type TopToken = NonNullable<NonNullable<TopTokens100Query>['topTokens']>[number]\n\ninterface UseTopTokensReturnValue {\n  tokens?: readonly TopToken[]\n  tokenSortRank: Record<string, number>\n  loadingTokens: boolean\n  sparklines: SparklineMap\n}\n\nexport function useTopTokens(chain: Chain): UseTopTokensReturnValue {\n  const chainId = supportedChainIdFromGQLChain(chain)\n  const duration = toHistoryDuration(useAtomValue(filterTimeAtom))\n\n  const { data: sparklineQuery } = usePollQueryWhileMounted(\n    useTopTokensSparklineQuery({\n      variables: { duration, chain },\n    }),\n    PollingInterval.Slow\n  )\n\n  const sparklines = useMemo(() => {\n    const unwrappedTokens = chainId && sparklineQuery?.topTokens?.map((topToken) => unwrapToken(chainId, topToken))\n    const map: SparklineMap = {}\n    unwrappedTokens?.forEach(\n      (current) => current?.address && (map[current.address] = current?.market?.priceHistory?.filter(isPricePoint))\n    )\n    return map\n  }, [chainId, sparklineQuery?.topTokens])\n\n  const { data, loading: loadingTokens } = usePollQueryWhileMounted(\n    useTopTokens100Query({\n      variables: { duration, chain },\n    }),\n    PollingInterval.Fast\n  )\n\n  const unwrappedTokens = useMemo(\n    () => chainId && data?.topTokens?.map((token) => unwrapToken(chainId, token)),\n    [chainId, data]\n  )\n  const sortedTokens = useSortedTokens(unwrappedTokens)\n  const tokenSortRank = useMemo(\n    () =>\n      sortedTokens?.reduce((acc, cur, i) => {\n        if (!cur.address) return acc\n        return {\n          ...acc,\n          [cur.address]: i + 1,\n        }\n      }, {}) ?? {},\n    [sortedTokens]\n  )\n  const filteredTokens = useFilteredTokens(sortedTokens)\n  return useMemo(\n    () => ({ tokens: filteredTokens, tokenSortRank, loadingTokens, sparklines }),\n    [filteredTokens, tokenSortRank, loadingTokens, sparklines]\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { PAGE_SIZE, useTopTokens } from 'graphql/data/TopTokens'\nimport { validateUrlChainParam } from 'graphql/data/util'\nimport { ReactNode } from 'react'\nimport { AlertTriangle } from 'react-feather'\nimport { useParams } from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport { MAX_WIDTH_MEDIA_BREAKPOINT } from '../constants'\nimport { HeaderRow, LoadedRow, LoadingRow } from './TokenRow'\n\nconst GridContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: ${MAX_WIDTH_MEDIA_BREAKPOINT};\n  background-color: ${({ theme }) => theme.surface1};\n\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 12px;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid ${({ theme }) => theme.surface3};\n`\n\nconst TokenDataContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  height: 100%;\n  width: 100%;\n`\n\nconst NoTokenDisplay = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  height: 60px;\n  color: ${({ theme }) => theme.neutral2};\n  font-size: 16px;\n  font-weight: 535;\n  align-items: center;\n  padding: 0px 28px;\n  gap: 8px;\n`\n\nfunction NoTokensState({ message }: { message: ReactNode }) {\n  return (\n    <GridContainer>\n      <HeaderRow />\n      <NoTokenDisplay>{message}</NoTokenDisplay>\n    </GridContainer>\n  )\n}\n\nconst LoadingRows = ({ rowCount }: { rowCount: number }) => (\n  <>\n    {Array(rowCount)\n      .fill(null)\n      .map((_, index) => {\n        return <LoadingRow key={index} first={index === 0} last={index === rowCount - 1} />\n      })}\n  </>\n)\n\nfunction LoadingTokenTable({ rowCount = PAGE_SIZE }: { rowCount?: number }) {\n  return (\n    <GridContainer>\n      <HeaderRow />\n      <TokenDataContainer>\n        <LoadingRows rowCount={rowCount} />\n      </TokenDataContainer>\n    </GridContainer>\n  )\n}\n\nexport default function TokenTable() {\n  const chainName = validateUrlChainParam(useParams<{ chainName?: string }>().chainName)\n  const { tokens, tokenSortRank, loadingTokens, sparklines } = useTopTokens(chainName)\n\n  /* loading and error state */\n  if (loadingTokens && !tokens) {\n    return <LoadingTokenTable rowCount={PAGE_SIZE} />\n  } else if (!tokens) {\n    return (\n      <NoTokensState\n        message={\n          <>\n            <AlertTriangle size={16} />\n            <Trans>An error occurred loading tokens. Please try again.</Trans>\n          </>\n        }\n      />\n    )\n  } else if (tokens?.length === 0) {\n    return <NoTokensState message={<Trans>No tokens found</Trans>} />\n  } else {\n    return (\n      <GridContainer>\n        <HeaderRow />\n        <TokenDataContainer>\n          {tokens.map(\n            (token, index) =>\n              token?.address && (\n                <LoadedRow\n                  key={token.address}\n                  tokenListIndex={index}\n                  tokenListLength={tokens.length}\n                  token={token}\n                  sparklineMap={sparklines}\n                  sortRank={tokenSortRank[token.address]}\n                />\n              )\n          )}\n        </TokenDataContainer>\n      </GridContainer>\n    )\n  }\n}\n","import { Trans } from '@lingui/macro'\nimport { BrowserEvent, InterfaceElementName, InterfacePageName, SharedEventName } from '@uniswap/analytics-events'\nimport { TraceEvent } from 'analytics'\nimport { Trace } from 'analytics'\nimport { AutoRow } from 'components/Row'\nimport { MAX_WIDTH_MEDIA_BREAKPOINT, MEDIUM_MEDIA_BREAKPOINT } from 'components/Tokens/constants'\nimport { filterStringAtom } from 'components/Tokens/state'\nimport NetworkFilter from 'components/Tokens/TokenTable/NetworkFilter'\nimport SearchBar from 'components/Tokens/TokenTable/SearchBar'\nimport TimeSelector from 'components/Tokens/TokenTable/TimeSelector'\nimport TokenTable from 'components/Tokens/TokenTable/TokenTable'\nimport { MouseoverTooltip } from 'components/Tooltip'\nimport { useInfoExplorePageEnabled } from 'featureFlags/flags/infoExplore'\nimport { useResetAtom } from 'jotai/utils'\nimport { useEffect, useMemo, useState } from 'react'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport styled, { css } from 'styled-components'\nimport { ThemedText } from 'theme/components'\n\nimport { useExploreParams } from './redirects'\n\nconst ExploreContainer = styled.div`\n  width: 100%;\n  min-width: 320px;\n  padding: 68px 12px 0px;\n\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.md}px`}) {\n    padding-top: 48px;\n  }\n\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.sm}px`}) {\n    padding-top: 20px;\n  }\n`\nconst TitleContainer = styled.div`\n  margin-bottom: 32px;\n  max-width: ${MAX_WIDTH_MEDIA_BREAKPOINT};\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n`\nconst NavWrapper = styled.div<{ isInfoExplorePageEnabled: boolean }>`\n  display: flex;\n  max-width: ${MAX_WIDTH_MEDIA_BREAKPOINT};\n  margin: 0 auto;\n  margin-bottom: ${({ isInfoExplorePageEnabled }) => (isInfoExplorePageEnabled ? '16px' : '20px')};\n  color: ${({ theme }) => theme.neutral3};\n  flex-direction: row;\n\n  @media only screen and (max-width: ${MEDIUM_MEDIA_BREAKPOINT}) {\n    flex-direction: column;\n    gap: 8px;\n  }\n\n  ${({ isInfoExplorePageEnabled }) =>\n    isInfoExplorePageEnabled &&\n    css`\n      @media screen and (max-width: ${({ theme }) => `${theme.breakpoint.lg}px`}) {\n        flex-direction: column;\n        gap: 16px;\n      }\n    `};\n`\nconst TabBar = styled(AutoRow)`\n  gap: 24px;\n  @media screen and (max-width: ${({ theme }) => theme.breakpoint.md}px) {\n    gap: 16px;\n  }\n`\nconst TabItem = styled(ThemedText.HeadlineMedium)<{ active?: boolean }>`\n  align-items: center;\n  color: ${({ theme, active }) => (active ? theme.neutral1 : theme.neutral2)};\n  cursor: pointer;\n  transition: ${({ theme }) => `${theme.transition.duration.medium} ${theme.transition.timing.ease} color`};\n`\nconst FiltersContainer = styled.div<{ isInfoExplorePageEnabled: boolean }>`\n  display: flex;\n  gap: 8px;\n  height: 40px;\n\n  @media only screen and (max-width: ${MEDIUM_MEDIA_BREAKPOINT}) {\n    ${({ isInfoExplorePageEnabled }) => !isInfoExplorePageEnabled && 'order: 2;'}\n  }\n\n  @media screen and (max-width: ${({ theme }) => theme.breakpoint.md}px) {\n    ${({ isInfoExplorePageEnabled }) => isInfoExplorePageEnabled && 'justify-content: space-between;'}\n  }\n`\nconst DropdownFilterContainer = styled(FiltersContainer)<{ isInfoExplorePageEnabled: boolean }>`\n  ${({ isInfoExplorePageEnabled }) =>\n    isInfoExplorePageEnabled\n      ? css`\n          @media screen and (max-width: ${({ theme }) => theme.breakpoint.md}px) {\n            justify-content: flex-start;\n          }\n        `\n      : css`\n          @media only screen and (max-width: ${MEDIUM_MEDIA_BREAKPOINT}) {\n            justify-content: flex-start;\n          }\n        `};\n`\nconst SearchContainer = styled(FiltersContainer)<{ isInfoExplorePageEnabled: boolean }>`\n  ${({ isInfoExplorePageEnabled }) => !isInfoExplorePageEnabled && 'margin-left: 8px;'}\n  width: 100%;\n\n  @media only screen and (max-width: ${MEDIUM_MEDIA_BREAKPOINT}) {\n    ${({ isInfoExplorePageEnabled }) => !isInfoExplorePageEnabled && 'order: 1; margin: 0px;'}\n  }\n\n  @media screen and (max-width: ${({ theme }) => theme.breakpoint.md}px) {\n    ${({ isInfoExplorePageEnabled }) => isInfoExplorePageEnabled && 'justify-content: flex-end;'}\n  }\n`\nexport enum ExploreTab {\n  Tokens = 'tokens',\n  Pools = 'pools',\n  Transactions = 'transactions',\n}\n\ninterface Page {\n  title: React.ReactNode\n  key: ExploreTab\n  component: () => JSX.Element\n  loggingElementName: string\n}\nconst Pages: Array<Page> = [\n  {\n    title: <Trans>Tokens</Trans>,\n    key: ExploreTab.Tokens,\n    component: TokenTable,\n    loggingElementName: InterfaceElementName.EXPLORE_TOKENS_TAB,\n  },\n  {\n    title: <Trans>Pools</Trans>,\n    key: ExploreTab.Pools,\n    component: TokenTable,\n    loggingElementName: InterfaceElementName.EXPLORE_POOLS_TAB,\n  },\n  {\n    title: <Trans>Transactions</Trans>,\n    key: ExploreTab.Transactions,\n    component: TokenTable,\n    loggingElementName: InterfaceElementName.EXPLORE_TRANSACTIONS_TAB,\n  },\n]\n\nconst Explore = ({ initialTab }: { initialTab?: ExploreTab }) => {\n  const resetFilterString = useResetAtom(filterStringAtom)\n  const location = useLocation()\n  const navigate = useNavigate()\n\n  const initialKey: number = useMemo(() => {\n    const key = initialTab && Pages.findIndex((page) => page.key === initialTab)\n    if (!key || key === -1) return 0\n    return key\n  }, [initialTab])\n  const [currentTab, setCurrentTab] = useState(initialKey)\n  const isInfoExplorePageEnabled = useInfoExplorePageEnabled()\n\n  // to allow backward navigation between tabs\n  const { tab } = useExploreParams()\n  useEffect(() => {\n    const tabIndex = Pages.findIndex((page) => page.key === tab)\n    if (tabIndex !== -1) {\n      setCurrentTab(tabIndex)\n    }\n  }, [tab])\n\n  useEffect(() => {\n    resetFilterString()\n  }, [location, resetFilterString])\n\n  const { component: Page, key: currentKey } = Pages[currentTab]\n\n  return (\n    <Trace\n      page={isInfoExplorePageEnabled ? InterfacePageName.EXPLORE_PAGE : InterfacePageName.TOKENS_PAGE}\n      shouldLogImpression\n    >\n      <ExploreContainer>\n        {/* TODO(WEB-2749 & WEB-2750): add graphs to explore page */}\n        {!isInfoExplorePageEnabled && (\n          <TitleContainer>\n            <MouseoverTooltip\n              text={<Trans>This table contains the top tokens by Uniswap volume, sorted based on your input.</Trans>}\n              placement=\"bottom\"\n            >\n              <ThemedText.LargeHeader>\n                <Trans>Top tokens on Uniswap</Trans>\n              </ThemedText.LargeHeader>\n            </MouseoverTooltip>\n          </TitleContainer>\n        )}\n        <NavWrapper isInfoExplorePageEnabled={isInfoExplorePageEnabled}>\n          {isInfoExplorePageEnabled && (\n            <TabBar data-testid=\"explore-navbar\">\n              {Pages.map(({ title, loggingElementName, key }, index) => {\n                const handleNavItemClick = () => {\n                  setCurrentTab(index)\n                  navigate(`/explore/${key}`)\n                }\n                return (\n                  <TraceEvent\n                    events={[BrowserEvent.onClick]}\n                    name={SharedEventName.NAVBAR_CLICKED}\n                    element={loggingElementName}\n                    key={index}\n                  >\n                    <TabItem onClick={handleNavItemClick} active={currentTab === index} key={key}>\n                      {title}\n                    </TabItem>\n                  </TraceEvent>\n                )\n              })}\n            </TabBar>\n          )}\n          {isInfoExplorePageEnabled ? (\n            <FiltersContainer isInfoExplorePageEnabled>\n              <DropdownFilterContainer isInfoExplorePageEnabled>\n                <NetworkFilter />\n                {currentKey === ExploreTab.Tokens && <TimeSelector />}\n              </DropdownFilterContainer>\n              <SearchContainer isInfoExplorePageEnabled>\n                {currentKey !== ExploreTab.Transactions && <SearchBar tab={currentKey} />}\n              </SearchContainer>\n            </FiltersContainer>\n          ) : (\n            <>\n              <FiltersContainer isInfoExplorePageEnabled={false}>\n                <NetworkFilter />\n                <TimeSelector />\n              </FiltersContainer>\n              <SearchContainer isInfoExplorePageEnabled={false}>\n                <SearchBar />\n              </SearchContainer>\n            </>\n          )}\n        </NavWrapper>\n        {isInfoExplorePageEnabled ? <Page /> : <TokenTable />}\n      </ExploreContainer>\n    </Trace>\n  )\n}\n\nexport default Explore\n","import { Navigate, useParams } from 'react-router-dom'\n\nimport Explore, { ExploreTab } from '.'\n\n// useParams struggles to distinguish between /explore/:chainId and /explore/:tab\nexport function useExploreParams(): {\n  tab?: ExploreTab\n  chainName?: string\n  tokenAddress?: string\n} {\n  const { tab, chainName, tokenAddress } = useParams<{ tab: string; chainName: string; tokenAddress: string }>()\n  const exploreTabs = Object.values(ExploreTab)\n  if (tab && !chainName && exploreTabs.includes(tab as ExploreTab)) {\n    // /explore/:tab\n    return { tab: tab as ExploreTab, chainName: undefined, tokenAddress }\n  } else if (tab && !chainName) {\n    // /explore/:chainName\n    return { tab: ExploreTab.Tokens, chainName: tab, tokenAddress }\n  } else if (!tab && !chainName) {\n    // legacy /tokens\n    return { tab: ExploreTab.Tokens, chainName: undefined, tokenAddress: undefined }\n  } else {\n    // /explore/:tab/:chainName\n    return { tab: tab as ExploreTab, chainName, tokenAddress }\n  }\n}\nexport default function RedirectExplore() {\n  const { tab, chainName, tokenAddress } = useExploreParams()\n  if (tab && chainName && tokenAddress) {\n    return <Navigate to={`/explore/${tab}/${chainName}/${tokenAddress}`} replace />\n  } else if (chainName && tokenAddress) {\n    return <Navigate to={`/explore/tokens/${chainName}/${tokenAddress}`} replace />\n  } else if (tab && chainName) {\n    return <Navigate to={`/explore/${tab}/${chainName}`} replace />\n  } else if (chainName) {\n    return <Navigate to={`/explore/tokens/${chainName}`} replace />\n  }\n  return <Explore initialTab={tab as ExploreTab} />\n}\n"],"names":["FilterOption","styled","button","theme","active","neutral1","surface1","transition","duration","fast","surface3","highlight","accent1","accent2","surface2","opacity","hover","DISPLAYS","TimePeriod","HOUR","DAY","WEEK","MONTH","YEAR","ORDERED_TIMES","InternalMenuItem","div","InternalLinkMenuItem","MenuTimeFlyout","span","isInfoExplorePageEnabled","deprecated_deepShadow","css","SMALL_MEDIA_BREAKPOINT","StyledMenu","MOBILE_MEDIA_BREAKPOINT","StyledMenuContent","Chevron","open","neutral2","TimeSelector","useTheme","node","useRef","useModalIsOpen","ApplicationModal","TIME_SELECTOR","toggleMenu","useToggleModal","useOnClickOutside","undefined","activeTime","setTime","useAtom","filterTimeAtom","useInfoExplorePageEnabled","ref","onClick","aria-label","data-testid","ChevronUp","width","height","viewBox","ChevronDown","map","time","Check","color","size","disabled","breakpoint","lg","NetworkLabel","EllipsisStyle","CheckContainer","NetworkFilterOption","Tag","Badge","NetworkFilter","NETWORK_FILTER","navigate","useNavigate","tab","useExploreParams","currentChainName","validateUrlChainParam","useParams","chainName","chainId","supportedChainIdFromGQLChain","chainInfo","getChainInfo","ChainLogo","label","BACKEND_SUPPORTED_CHAINS","network","toLowerCase","BACKEND_NOT_YET_SUPPORTED_CHAIN_IDS","ICON_SIZE","SearchBarContainer","SearchInput","input","searchIcon","isOpen","neutral3","xIcon","MEDIUM_MEDIA_BREAKPOINT","SearchBar","currentString","useAtomValue","filterStringAtom","localFilterString","setLocalFilterString","useState","setFilterString","useUpdateAtom","debouncedLocalFilterString","useDebounce","setIsOpen","useEffect","handleFocus","handleBlur","render","translation","TraceEvent","events","BrowserEvent","onFocus","name","InterfaceEventName","EXPLORE_SEARCH_SELECTED","element","InterfaceElementName","EXPLORE_SEARCH_INPUT","data-cy","type","placeholder","id","autoComplete","value","onChange","target","onBlur","gql","PAGE_SIZE","useTopTokens","chain","toHistoryDuration","data","sparklineQuery","usePollQueryWhileMounted","useTopTokensSparklineQuery","variables","PollingInterval","Slow","sparklines","useMemo","unwrappedTokens","topTokens","topToken","unwrapToken","forEach","current","address","market","priceHistory","filter","isPricePoint","loading","loadingTokens","useTopTokens100Query","Fast","sortedTokens","tokens","sortMethod","sortMethodAtom","sortAscending","sortAscendingAtom","tokenArray","Array","from","TokenSortMethod","PRICE","sort","a","b","price","PERCENT_CHANGE","pricePercentChange","TOTAL_VALUE_LOCKED","totalValueLocked","VOLUME","volume","reverse","useSortedTokens","token","tokenSortRank","reduce","acc","cur","i","filteredTokens","filterString","lowercaseFilterString","returnTokens","addressIncludesFilterString","includes","nameIncludesFilterString","symbolIncludesFilterString","symbol","useFilteredTokens","GridContainer","MAX_WIDTH_MEDIA_BREAKPOINT","TokenDataContainer","NoTokenDisplay","NoTokensState","message","HeaderRow","LoadingRows","rowCount","fill","_","index","LoadingRow","first","last","LoadingTokenTable","TokenTable","length","LoadedRow","tokenListIndex","tokenListLength","sparklineMap","sortRank","AlertTriangle","ExploreContainer","md","sm","TitleContainer","NavWrapper","TabBar","AutoRow","TabItem","ThemedText","HeadlineMedium","medium","timing","ease","FiltersContainer","DropdownFilterContainer","SearchContainer","ExploreTab","Tokens","Pools","Transactions","Pages","title","key","component","loggingElementName","EXPLORE_TOKENS_TAB","EXPLORE_POOLS_TAB","EXPLORE_TRANSACTIONS_TAB","initialTab","resetFilterString","useResetAtom","location","useLocation","initialKey","findIndex","page","currentTab","setCurrentTab","tabIndex","Page","currentKey","Trace","InterfacePageName","EXPLORE_PAGE","TOKENS_PAGE","shouldLogImpression","MouseoverTooltip","text","placement","LargeHeader","SharedEventName","NAVBAR_CLICKED","tokenAddress","exploreTabs","Object","values","RedirectExplore","Navigate","to","replace","Explore"],"sourceRoot":""}