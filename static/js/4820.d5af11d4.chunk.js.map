{"version":3,"file":"static/js/4820.d5af11d4.chunk.js","mappings":"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","sources":["lib/hooks/useApproval.ts","hooks/useApproveCallback.ts","state/mint/hooks.tsx","pages/AddLiquidityV2/ConfirmAddModalBottom.tsx","pages/AddLiquidityV2/PoolPriceBar.tsx","pages/AddLiquidityV2/index.tsx","pages/AddLiquidityV2/redirects.tsx","pages/AppBody.tsx","pages/Pool/styled.tsx","utils/calculateSlippageAmount.ts","utils/unwrappedToken.ts","../node_modules/react-feather/dist/icons/chevron-up.js","../node_modules/react-feather/dist/icons/plus.js"],"sourcesContent":["import { MaxUint256 } from '@ethersproject/constants'\nimport type { TransactionResponse } from '@ethersproject/providers'\nimport { InterfaceEventName } from '@uniswap/analytics-events'\nimport { Currency, CurrencyAmount, Token } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport { sendAnalyticsEvent } from 'analytics'\nimport { useTokenContract } from 'hooks/useContract'\nimport { useTokenAllowance } from 'hooks/useTokenAllowance'\nimport { getTokenAddress } from 'lib/utils/analytics'\nimport { useCallback, useMemo } from 'react'\nimport { calculateGasMargin } from 'utils/calculateGasMargin'\n\nexport enum ApprovalState {\n  UNKNOWN = 'UNKNOWN',\n  NOT_APPROVED = 'NOT_APPROVED',\n  PENDING = 'PENDING',\n  APPROVED = 'APPROVED',\n}\n\nfunction useApprovalStateForSpender(\n  amountToApprove: CurrencyAmount<Currency> | undefined,\n  spender: string | undefined,\n  useIsPendingApproval: (token?: Token, spender?: string) => boolean\n): ApprovalState {\n  const { account } = useWeb3React()\n  const token = amountToApprove?.currency?.isToken ? amountToApprove.currency : undefined\n\n  const { tokenAllowance } = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useIsPendingApproval(token, spender)\n\n  return useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency.isNative) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!tokenAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if tokenAllowance is\n    return tokenAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, pendingApproval, spender, tokenAllowance])\n}\n\nexport function useApproval(\n  amountToApprove: CurrencyAmount<Currency> | undefined,\n  spender: string | undefined,\n  useIsPendingApproval: (token?: Token, spender?: string) => boolean\n): [\n  ApprovalState,\n  () => Promise<\n    | { response: TransactionResponse; tokenAddress: string; spenderAddress: string; amount: CurrencyAmount<Currency> }\n    | undefined\n  >\n] {\n  const { chainId } = useWeb3React()\n  const token = amountToApprove?.currency?.isToken ? amountToApprove.currency : undefined\n\n  // check the current approval status\n  const approvalState = useApprovalStateForSpender(amountToApprove, spender, useIsPendingApproval)\n\n  const tokenContract = useTokenContract(token?.address)\n\n  const approve = useCallback(async () => {\n    function logFailure(error: Error | string): undefined {\n      console.warn(`${token?.symbol || 'Token'} approval failed:`, error)\n      return\n    }\n\n    // Bail early if there is an issue.\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      return logFailure('approve was called unnecessarily')\n    } else if (!chainId) {\n      return logFailure('no chainId')\n    } else if (!token) {\n      return logFailure('no token')\n    } else if (!tokenContract) {\n      return logFailure('tokenContract is null')\n    } else if (!amountToApprove) {\n      return logFailure('missing amount to approve')\n    } else if (!spender) {\n      return logFailure('no spender')\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens which restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.quotient.toString())\n    })\n\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.quotient.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response) => {\n        const eventProperties = {\n          chain_id: chainId,\n          token_symbol: token?.symbol,\n          token_address: getTokenAddress(token),\n        }\n        sendAnalyticsEvent(InterfaceEventName.APPROVE_TOKEN_TXN_SUBMITTED, eventProperties)\n        return {\n          response,\n          tokenAddress: token.address,\n          spenderAddress: spender,\n          amount: amountToApprove,\n        }\n      })\n      .catch((error: Error) => {\n        logFailure(error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, chainId])\n\n  return [approvalState, approve]\n}\n","import { Currency, CurrencyAmount } from '@uniswap/sdk-core'\nimport { ApprovalState, useApproval } from 'lib/hooks/useApproval'\nimport { useCallback } from 'react'\n\nimport { useHasPendingApproval, useTransactionAdder } from '../state/transactions/hooks'\nimport { TransactionType } from '../state/transactions/types'\nexport { ApprovalState } from 'lib/hooks/useApproval'\n\nfunction useGetAndTrackApproval(getApproval: ReturnType<typeof useApproval>[1]) {\n  const addTransaction = useTransactionAdder()\n  return useCallback(() => {\n    return getApproval().then((pending) => {\n      if (pending) {\n        const { response, tokenAddress, spenderAddress: spender, amount } = pending\n        addTransaction(response, {\n          type: TransactionType.APPROVAL,\n          tokenAddress,\n          spender,\n          amount: amount.quotient.toString(),\n        })\n      }\n    })\n  }, [addTransaction, getApproval])\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount<Currency>,\n  spender?: string\n): [ApprovalState, () => Promise<void>] {\n  const [approval, getApproval] = useApproval(amountToApprove, spender, useHasPendingApproval)\n  return [approval, useGetAndTrackApproval(getApproval)]\n}\n","import { Trans } from '@lingui/macro'\nimport { Currency, CurrencyAmount, Percent, Price, Token } from '@uniswap/sdk-core'\nimport { Pair } from '@uniswap/v2-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport JSBI from 'jsbi'\nimport tryParseCurrencyAmount from 'lib/utils/tryParseCurrencyAmount'\nimport { ReactNode, useCallback, useMemo } from 'react'\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\n\nimport { useTotalSupply } from '../../hooks/useTotalSupply'\nimport { PairState, useV2Pair } from '../../hooks/useV2Pairs'\nimport { useCurrencyBalances } from '../connection/hooks'\nimport { AppState } from '../reducer'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useAppSelector((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useAppDispatch()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity]\n  )\n\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity]\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount<Currency> }\n  parsedAmounts: { [field in Field]?: CurrencyAmount<Currency> }\n  price?: Price<Currency, Currency>\n  noLiquidity?: boolean\n  liquidityMinted?: CurrencyAmount<Token>\n  poolTokenPercentage?: Percent\n  error?: ReactNode\n} {\n  const { account } = useWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB]\n  )\n\n  // pair\n  const [pairState, pair] = useV2Pair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS ||\n    Boolean(totalSupply && JSBI.equal(totalSupply.quotient, ZERO)) ||\n    Boolean(\n      pairState === PairState.EXISTS &&\n        pair &&\n        JSBI.equal(pair.reserve0.quotient, ZERO) &&\n        JSBI.equal(pair.reserve1.quotient, ZERO)\n    )\n\n  // balances\n  const balances = useCurrencyBalances(\n    account ?? undefined,\n    useMemo(() => [currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B]], [currencies])\n  )\n  const currencyBalances: { [field in Field]?: CurrencyAmount<Currency> } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount<Currency> | undefined = tryParseCurrencyAmount(\n    typedValue,\n    currencies[independentField]\n  )\n  const dependentAmount: CurrencyAmount<Currency> | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseCurrencyAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    } else if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = independentAmount?.wrapped\n      const [tokenA, tokenB] = [currencyA?.wrapped, currencyB?.wrapped]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency?.isNative\n          ? CurrencyAmount.fromRawAmount(dependentCurrency, dependentTokenAmount.quotient)\n          : dependentTokenAmount\n      }\n      return undefined\n    } else {\n      return undefined\n    }\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount<Currency> | undefined } = useMemo(() => {\n    return {\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }\n  }, [dependentAmount, independentAmount, independentField])\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount?.greaterThan(0) && currencyBAmount?.greaterThan(0)) {\n        const value = currencyBAmount.divide(currencyAAmount)\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, value.denominator, value.numerator)\n      }\n      return undefined\n    } else {\n      const wrappedCurrencyA = currencyA?.wrapped\n      return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n    }\n  }, [currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [currencyAAmount?.wrapped, currencyBAmount?.wrapped]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      try {\n        return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n      } catch (error) {\n        console.error(error)\n        return undefined\n      }\n    } else {\n      return undefined\n    }\n  }, [parsedAmounts, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.quotient, totalSupply.add(liquidityMinted).quotient)\n    } else {\n      return undefined\n    }\n  }, [liquidityMinted, totalSupply])\n\n  let error: ReactNode | undefined\n  if (!account) {\n    error = <Trans>Connect wallet</Trans>\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? <Trans>Invalid pair</Trans>\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? <Trans>Enter an amount</Trans>\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = <Trans>Insufficient {currencies[Field.CURRENCY_A]?.symbol} balance</Trans>\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = <Trans>Insufficient {currencies[Field.CURRENCY_B]?.symbol} balance</Trans>\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Trans } from '@lingui/macro'\nimport { Currency, CurrencyAmount, Fraction, Percent } from '@uniswap/sdk-core'\nimport { Text } from 'rebass'\nimport { ThemedText } from 'theme/components'\n\nimport { ButtonPrimary } from '../../components/Button'\nimport CurrencyLogo from '../../components/Logo/CurrencyLogo'\nimport { RowBetween, RowFixed } from '../../components/Row'\nimport { Field } from '../../state/mint/actions'\n\nexport function ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount<Currency> }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  return (\n    <>\n      <RowBetween>\n        <ThemedText.DeprecatedBody>\n          <Trans>{currencies[Field.CURRENCY_A]?.symbol} Deposited</Trans>\n        </ThemedText.DeprecatedBody>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <ThemedText.DeprecatedBody>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</ThemedText.DeprecatedBody>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <ThemedText.DeprecatedBody>\n          <Trans>{currencies[Field.CURRENCY_B]?.symbol} Deposited</Trans>\n        </ThemedText.DeprecatedBody>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <ThemedText.DeprecatedBody>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</ThemedText.DeprecatedBody>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <ThemedText.DeprecatedBody>\n          <Trans>Rates</Trans>\n        </ThemedText.DeprecatedBody>\n        <ThemedText.DeprecatedBody>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </ThemedText.DeprecatedBody>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <ThemedText.DeprecatedBody>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </ThemedText.DeprecatedBody>\n      </RowBetween>\n      <RowBetween>\n        <ThemedText.DeprecatedBody>\n          <Trans>Share of Pool:</Trans>\n        </ThemedText.DeprecatedBody>\n        <ThemedText.DeprecatedBody>\n          <Trans>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Trans>\n        </ThemedText.DeprecatedBody>\n      </RowBetween>\n      <ButtonPrimary style={{ margin: '20px 0 0 0' }} onClick={onAdd}>\n        <Text fontWeight={535} fontSize={20}>\n          {noLiquidity ? <Trans>Create pool & supply</Trans> : <Trans>Confirm supply</Trans>}\n        </Text>\n      </ButtonPrimary>\n    </>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { Currency, Percent, Price } from '@uniswap/sdk-core'\nimport { Text } from 'rebass'\nimport { useTheme } from 'styled-components'\nimport { ThemedText } from 'theme/components'\n\nimport { AutoColumn } from '../../components/Column'\nimport { AutoRow } from '../../components/Row'\nimport { ONE_BIPS } from '../../constants/misc'\nimport { Field } from '../../state/mint/actions'\n\nexport function PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price<Currency, Currency>\n}) {\n  const theme = useTheme()\n\n  let invertedPrice: string | undefined\n  try {\n    invertedPrice = price?.invert()?.toSignificant(6)\n  } catch (error) {\n    invertedPrice = undefined\n  }\n\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <ThemedText.DeprecatedBlack data-testid=\"currency-b-price\">\n            {price?.toSignificant(6) ?? '-'}\n          </ThemedText.DeprecatedBlack>\n          <Text fontWeight={535} fontSize={14} color={theme.neutral2} pt={1}>\n            <Trans>\n              {currencies[Field.CURRENCY_B]?.symbol} per {currencies[Field.CURRENCY_A]?.symbol}\n            </Trans>\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <ThemedText.DeprecatedBlack data-testid=\"currency-a-price\">{invertedPrice ?? '-'}</ThemedText.DeprecatedBlack>\n          <Text fontWeight={535} fontSize={14} color={theme.neutral2} pt={1}>\n            <Trans>\n              {currencies[Field.CURRENCY_A]?.symbol} per {currencies[Field.CURRENCY_B]?.symbol}\n            </Trans>\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <ThemedText.DeprecatedBlack>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </ThemedText.DeprecatedBlack>\n          <Text fontWeight={535} fontSize={14} color={theme.neutral2} pt={1}>\n            <Trans>Share of pool</Trans>\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport type { TransactionResponse } from '@ethersproject/providers'\nimport { Trans } from '@lingui/macro'\nimport { Currency, CurrencyAmount, Percent } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport { useToggleAccountDrawer } from 'components/AccountDrawer'\nimport { Notification, NotificationWrapper } from 'components/Notification/Notification'\nimport UnsupportedCurrencyFooter from 'components/swap/UnsupportedCurrencyFooter'\nimport { SwitchLocaleLink } from 'components/SwitchLocaleLink'\nimport { V2Unsupported } from 'components/V2Unsupported'\nimport { useGetBootstrap } from 'hooks/useGetBootstrap'\nimport { useGetCycle } from 'hooks/useGetCycle'\nimport { useNetworkSupportsV2 } from 'hooks/useNetworkSupportsV2'\nimport { useCallback, useEffect, useState } from 'react'\nimport { Plus } from 'react-feather'\nimport { useLocation, useNavigate, useParams } from 'react-router-dom'\nimport { Text } from 'rebass'\nimport styled, { useTheme } from 'styled-components'\nimport { ThemedText } from 'theme/components'\n\nimport { ButtonError, ButtonLight, ButtonPrimary } from '../../components/Button'\nimport { BlueCard, LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Column'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport DoubleCurrencyLogo from '../../components/DoubleLogo'\nimport { AddRemoveTabs } from '../../components/NavigationTabs'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { AutoRow, RowBetween, RowFlat } from '../../components/Row'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport { CONTRACT_ADDRESS, SWAP_CONTRACT_ABI, ZERO_PERCENT } from '../../constants/misc'\nimport { WRAPPED_NATIVE_CURRENCY } from '../../constants/tokens'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport { useContract, useV2RouterContract } from '../../hooks/useContract'\nimport { useIsSwapUnsupported } from '../../hooks/useIsSwapUnsupported'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { PairState } from '../../hooks/useV2Pairs'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { TransactionInfo, TransactionType } from '../../state/transactions/types'\nimport { useUserSlippageToleranceWithDefault } from '../../state/user/hooks'\nimport { calculateGasMargin } from '../../utils/calculateGasMargin'\nimport { calculateSlippageAmount } from '../../utils/calculateSlippageAmount'\nimport { currencyId } from '../../utils/currencyId'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport AppBody from '../AppBody'\nimport { Dots, Wrapper } from '../Pool/styled'\nimport { ConfirmAddModalBottom } from './ConfirmAddModalBottom'\nimport { PoolPriceBar } from './PoolPriceBar'\n\nconst DEFAULT_ADD_V2_SLIPPAGE_TOLERANCE = new Percent(50, 10_000)\n\nconst AddLiquidityHeaderContainer = styled(AutoColumn)`\n  gap: 20px;\n  margin-bottom: 16px;\n`\n\nexport default function AddLiquidity() {\n  // defaultOutputLiquidity\n  const { currencyIdA, currencyIdB = CONTRACT_ADDRESS } = useParams<{\n    currencyIdA?: string\n    currencyIdB?: string\n  }>()\n  const navigate = useNavigate()\n  const { account, chainId, provider } = useWeb3React()\n\n  const theme = useTheme()\n\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n\n  const wrappedNativeCurrency = chainId ? WRAPPED_NATIVE_CURRENCY[chainId] : undefined\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      wrappedNativeCurrency &&\n      ((currencyA && currencyA.equals(wrappedNativeCurrency)) || (currencyB && currencyB.equals(wrappedNativeCurrency)))\n  )\n\n  const toggleWalletDrawer = useToggleAccountDrawer() // toggle wallet when disconnected\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const allowedSlippage = useUserSlippageToleranceWithDefault(DEFAULT_ADD_V2_SLIPPAGE_TOLERANCE) // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: CurrencyAmount<Currency> } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {}\n  )\n\n  const atMaxAmounts: { [field in Field]?: CurrencyAmount<Currency> } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {}\n  )\n\n  const contract = useContract(CONTRACT_ADDRESS, SWAP_CONTRACT_ABI)\n  const router = useV2RouterContract()\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], router?.address)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], router?.address)\n\n  const addTransaction = useTransactionAdder()\n  const networkSupportsV2 = useNetworkSupportsV2()\n\n  const [cycle, setCycle] = useState<BigNumber>()\n  const getCycle = useGetCycle()\n\n  useEffect(() => {\n    getCycle().then((cycle) => {\n      setCycle(cycle)\n      return cycle\n    })\n  }, [getCycle])\n\n  async function onAdd() {\n    if (!chainId || !provider || !account || !router || !networkSupportsV2 || !contract) return\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? ZERO_PERCENT : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? ZERO_PERCENT : allowedSlippage)[0],\n    }\n\n    let estimate,\n      method: (...args: any) => Promise<TransactionResponse>,\n      args: Array<string | string[] | number>,\n      value: BigNumber | null\n    if (currencyA.isNative || currencyB.isNative) {\n      const tokenBIsETH = currencyB.isNative\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        (tokenBIsETH ? currencyA : currencyB)?.wrapped?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).quotient.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).quotient.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        currencyA?.wrapped?.address ?? '',\n        currencyB?.wrapped?.address ?? '',\n        parsedAmountA.quotient.toString(),\n        parsedAmountB.quotient.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          const transactionInfo: TransactionInfo = {\n            type: TransactionType.ADD_LIQUIDITY_V2_POOL,\n            baseCurrencyId: currencyId(currencyA),\n            expectedAmountBaseRaw: parsedAmounts[Field.CURRENCY_A]?.quotient.toString() ?? '0',\n            quoteCurrencyId: currencyId(currencyB),\n            expectedAmountQuoteRaw: parsedAmounts[Field.CURRENCY_B]?.quotient.toString() ?? '0',\n          }\n\n          addTransaction(response, transactionInfo)\n\n          setTxHash(response.hash)\n        })\n      )\n      .catch((error) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (error?.code !== 4001) {\n          console.error(error)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return (\n      <AddLiquidityHeaderContainer>\n        {noLiquidity ? (\n          <LightCard mt=\"20px\" $borderRadius=\"20px\">\n            <AutoRow justify=\"space-between\">\n              <Text fontSize=\"24px\" fontWeight={535} lineHeight=\"42px\" marginRight={10}>\n                {currencies[Field.CURRENCY_A]?.symbol + '/' + currencies[Field.CURRENCY_B]?.symbol}\n              </Text>\n              <DoubleCurrencyLogo\n                currency0={currencies[Field.CURRENCY_A]}\n                currency1={currencies[Field.CURRENCY_B]}\n                size={30}\n              />\n            </AutoRow>\n          </LightCard>\n        ) : (\n          <>\n            <RowFlat style={{ marginTop: '20px' }}>\n              <Text fontSize=\"48px\" fontWeight={535} lineHeight=\"42px\" marginRight={10}>\n                {liquidityMinted?.toSignificant(6)}\n              </Text>\n              <DoubleCurrencyLogo\n                currency0={currencies[Field.CURRENCY_A]}\n                currency1={currencies[Field.CURRENCY_B]}\n                size={30}\n              />\n            </RowFlat>\n            <Row>\n              <Text fontSize=\"24px\">\n                {currencies[Field.CURRENCY_A]?.symbol + '/' + currencies[Field.CURRENCY_B]?.symbol + ' Pool Tokens'}\n              </Text>\n            </Row>\n            <ThemedText.DeprecatedItalic fontSize={12} textAlign=\"left\" padding=\"8px 0 0 0 \">\n              <Trans>\n                Output is estimated. If the price changes by more than {allowedSlippage.toSignificant(4)}% your\n                transaction will revert.\n              </Trans>\n            </ThemedText.DeprecatedItalic>\n          </>\n        )}\n      </AddLiquidityHeaderContainer>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = (\n    <Trans>\n      Supplying {parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)} {currencies[Field.CURRENCY_A]?.symbol} and{' '}\n      {parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)} {currencies[Field.CURRENCY_B]?.symbol}\n    </Trans>\n  )\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA)\n      if (newCurrencyIdA === currencyIdB) {\n        navigate(`/add/v2/${currencyIdB}/${currencyIdA}`)\n      } else {\n        navigate(`/add/v2/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, navigate, currencyIdA]\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          navigate(`/add/v2/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          navigate(`/add/v2/${newCurrencyIdB}`)\n        }\n      } else {\n        navigate(`/add/v2/${currencyIdA ? currencyIdA : 'ETH'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, navigate, currencyIdB]\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false)\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const [inBootstrap, setInBootstrap] = useState<boolean>()\n\n  const getBootstrap = useGetBootstrap()\n\n  useEffect(() => {\n    getBootstrap().then((bootstrap) => {\n      setInBootstrap(bootstrap)\n      if (bootstrap) {\n        displayBootstrapNotification(\"You don't need KONG to participate. It will be minted automatically.\")\n      }\n      return bootstrap\n    })\n  }, [getBootstrap])\n\n  const [bootstrapNotification, setBootstrapNotification] = useState({ show: false, msg: '' })\n\n  const displayBootstrapNotification = (msg: string) => {\n    setBootstrapNotification({ show: true, msg })\n  }\n\n  const hideBootstrapNotification = () => {\n    setBootstrapNotification({ show: false, msg: '' })\n  }\n\n  const { pathname } = useLocation()\n  const isCreate = pathname.includes('/create')\n\n  const addIsUnsupported = useIsSwapUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n  if (!networkSupportsV2) return <V2Unsupported />\n\n  return (\n    <>\n      <AppBody>\n        <NotificationWrapper>\n          {bootstrapNotification.show && (\n            <Notification message={bootstrapNotification.msg} handleClick={hideBootstrapNotification} />\n          )}\n        </NotificationWrapper>\n        <AddRemoveTabs creating={isCreate} adding={true} autoSlippage={DEFAULT_ADD_V2_SLIPPAGE_TOLERANCE} />\n        <Wrapper>\n          <TransactionConfirmationModal\n            isOpen={showConfirm}\n            onDismiss={handleDismissConfirmation}\n            attemptingTxn={attemptingTxn}\n            hash={txHash}\n            reviewContent={() => (\n              <ConfirmationModalContent\n                title={noLiquidity ? <Trans>You are creating a pool</Trans> : <Trans>You will receive</Trans>}\n                onDismiss={handleDismissConfirmation}\n                topContent={modalHeader}\n                bottomContent={modalBottom}\n              />\n            )}\n            pendingText={pendingText}\n            currencyToAdd={pair?.liquidityToken}\n          />\n          <AutoColumn gap=\"20px\">\n            {noLiquidity ||\n              (isCreate ? (\n                <ColumnCenter>\n                  <BlueCard>\n                    <AutoColumn gap=\"10px\">\n                      <ThemedText.DeprecatedLink fontWeight={535} color=\"accent1\">\n                        <Trans>You are the first liquidity provider.</Trans>\n                      </ThemedText.DeprecatedLink>\n                      <ThemedText.DeprecatedLink fontWeight={485} color=\"accent1\">\n                        <Trans>The ratio of tokens you add will set the price of this pool.</Trans>\n                      </ThemedText.DeprecatedLink>\n                      <ThemedText.DeprecatedLink fontWeight={485} color=\"accent1\">\n                        <Trans>Once you are happy with the rate click supply to review.</Trans>\n                      </ThemedText.DeprecatedLink>\n                    </AutoColumn>\n                  </BlueCard>\n                </ColumnCenter>\n              ) : (\n                <ColumnCenter>\n                  <BlueCard>\n                    <AutoColumn gap=\"10px\">\n                      <ThemedText.DeprecatedLink fontWeight={485} color=\"accent1\">\n                        <b>\n                          <Trans>Tip:</Trans>\n                        </b>{' '}\n                        <Trans>\n                          When you add liquidity, you will receive pool tokens representing your position. These tokens\n                          automatically earn fees proportional to your share of the pool, and can be redeemed at any\n                          time.\n                        </Trans>\n                      </ThemedText.DeprecatedLink>\n                    </AutoColumn>\n                  </BlueCard>\n                </ColumnCenter>\n              ))}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              // onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A] ?? null}\n              id=\"add-liquidity-input-tokena\"\n              showCommonBases\n            />\n            <ColumnCenter>\n              <Plus size=\"16\" color={theme.neutral2} />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              // onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B] ?? null}\n              id=\"add-liquidity-input-tokenb\"\n              showCommonBases\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" $borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <ThemedText.DeprecatedSubHeader fontWeight={535} fontSize={14}>\n                      {noLiquidity ? (\n                        <Trans>Initial prices and pool share</Trans>\n                      ) : (\n                        <Trans>Prices and pool share</Trans>\n                      )}\n                    </ThemedText.DeprecatedSubHeader>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" $borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <ButtonPrimary disabled={true}>\n                <ThemedText.DeprecatedMain mb=\"4px\">\n                  <Trans>Unsupported asset</Trans>\n                </ThemedText.DeprecatedMain>\n              </ButtonPrimary>\n            ) : !account ? (\n              <ButtonLight onClick={toggleWalletDrawer}>\n                <Trans>Connect wallet</Trans>\n              </ButtonLight>\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid &&\n                  cycle &&\n                  !cycle.eq(0) && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <ButtonPrimary\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>\n                              <Trans>Approving {currencies[Field.CURRENCY_A]?.symbol}</Trans>\n                            </Dots>\n                          ) : (\n                            <Trans>Approve {currencies[Field.CURRENCY_A]?.symbol}</Trans>\n                          )}\n                        </ButtonPrimary>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <ButtonPrimary\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>\n                              <Trans>Approving {currencies[Field.CURRENCY_B]?.symbol}</Trans>\n                            </Dots>\n                          ) : (\n                            <Trans>Approve {currencies[Field.CURRENCY_B]?.symbol}</Trans>\n                          )}\n                        </ButtonPrimary>\n                      )}\n                    </RowBetween>\n                  )}\n                {cycle && cycle.eq(0) ? (\n                  <ButtonError\n                    onClick={() => {\n                      setShowConfirm(true)\n                    }}\n                    error={!isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]}\n                  >\n                    <Text fontSize={20} fontWeight={535}>\n                      <Trans>Supply</Trans>\n                    </Text>\n                  </ButtonError>\n                ) : (\n                  <ButtonError\n                    onClick={() => {\n                      setShowConfirm(true)\n                    }}\n                    disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                    error={!isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]}\n                  >\n                    <Text fontSize={20} fontWeight={535}>\n                      {error ?? <Trans>Supply</Trans>}\n                    </Text>\n                  </ButtonError>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </Wrapper>\n      </AppBody>\n      <SwitchLocaleLink />\n\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter\n          show={addIsUnsupported}\n          currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]}\n        />\n      )}\n    </>\n  )\n}\n","import { Navigate, useParams } from 'react-router-dom'\n\nimport AddLiquidityV2 from './index'\n\nexport default function RedirectDuplicateTokenIdsV2() {\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n\n  if (currencyIdA && currencyIdB && currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Navigate to={`/add/v2/${currencyIdA}`} replace />\n  }\n\n  return <AddLiquidityV2 />\n}\n","import { PropsWithChildren } from 'react'\nimport styled from 'styled-components'\nimport { Z_INDEX } from 'theme/zIndex'\n\ninterface BodyWrapperProps {\n  $margin?: string\n  $maxWidth?: string\n}\n\nexport const BodyWrapper = styled.main<BodyWrapperProps>`\n  position: relative;\n  margin-top: ${({ $margin }) => $margin ?? '0px'};\n  max-width: ${({ $maxWidth }) => $maxWidth ?? '420px'};\n  width: 100%;\n  background: ${({ theme }) => theme.surface1};\n  border-radius: 16px;\n  border: 1px solid ${({ theme }) => theme.surface3};\n  margin-top: 1rem;\n  margin-left: auto;\n  margin-right: auto;\n  z-index: ${Z_INDEX.default};\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody(props: PropsWithChildren<BodyWrapperProps>) {\n  return <BodyWrapper {...props} />\n}\n","import { LoadingRows as BaseLoadingRows } from 'components/Loader/styled'\nimport { Text } from 'rebass'\nimport styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 20px;\n`\n\nexport const ClickableText = styled(Text)`\n  :hover {\n    cursor: pointer;\n  }\n  color: ${({ theme }) => theme.accent1};\n`\nexport const MaxButton = styled.button<{ width: string }>`\n  padding: 0.5rem 1rem;\n  background-color: ${({ theme }) => theme.accent2};\n  border: 1px solid ${({ theme }) => theme.accent2};\n  border-radius: 0.5rem;\n  font-size: 1rem;\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToSmall`\n    padding: 0.25rem 0.5rem;\n  `};\n  font-weight: 535;\n  cursor: pointer;\n  margin: 0.25rem;\n  overflow: hidden;\n  color: ${({ theme }) => theme.accent1};\n  :hover {\n    border: 1px solid ${({ theme }) => theme.accent1};\n  }\n  :focus {\n    border: 1px solid ${({ theme }) => theme.accent1};\n    outline: none;\n  }\n`\n\nexport const Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nexport const LoadingRows = styled(BaseLoadingRows)`\n  padding-top: 36px;\n  min-width: 75%;\n  max-width: 960px;\n  grid-column-gap: 0.5em;\n  grid-row-gap: 0.8em;\n  grid-template-columns: repeat(3, 1fr);\n  padding: 8px;\n\n  & > div:nth-child(4n + 1) {\n    grid-column: 1 / 3;\n  }\n  & > div:nth-child(4n) {\n    grid-column: 3 / 4;\n    margin-bottom: 2em;\n  }\n`\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@uniswap/sdk-core'\nimport JSBI from 'jsbi'\n\nconst ONE = new Fraction(1, 1)\n\nexport function calculateSlippageAmount(value: CurrencyAmount<Currency>, slippage: Percent): [JSBI, JSBI] {\n  if (slippage.lessThan(0) || slippage.greaterThan(ONE)) throw new Error('Unexpected slippage')\n  return [value.multiply(ONE.subtract(slippage)).quotient, value.multiply(ONE.add(slippage)).quotient]\n}\n","import { Currency } from '@uniswap/sdk-core'\nimport { asSupportedChain } from 'constants/chains'\n\nimport { nativeOnChain, WRAPPED_NATIVE_CURRENCY } from '../constants/tokens'\n\nexport function unwrappedToken(currency: Currency): Currency {\n  if (currency.isNative) return currency\n  const formattedChainId = asSupportedChain(currency.chainId)\n  if (formattedChainId && WRAPPED_NATIVE_CURRENCY[formattedChainId]?.equals(currency))\n    return nativeOnChain(currency.chainId)\n  return currency\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar ChevronUp = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"18 15 12 9 6 15\"\n  }));\n});\nChevronUp.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nChevronUp.displayName = 'ChevronUp';\nexport default ChevronUp;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Plus = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"5\",\n    x2: \"12\",\n    y2: \"19\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"5\",\n    y1: \"12\",\n    x2: \"19\",\n    y2: \"12\"\n  }));\n});\nPlus.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nPlus.displayName = 'Plus';\nexport default Plus;"],"names":["useApproval","amountToApprove","spender","useIsPendingApproval","chainId","useWeb3React","token","currency","isToken","undefined","approvalState","account","tokenAllowance","useTokenAllowance","pendingApproval","useMemo","isNative","ApprovalState","APPROVED","lessThan","PENDING","NOT_APPROVED","UNKNOWN","useApprovalStateForSpender","tokenContract","useTokenContract","address","approve","useCallback","async","logFailure","error","console","warn","symbol","useExact","estimatedGas","estimateGas","MaxUint256","catch","quotient","toString","gasLimit","calculateGasMargin","then","response","eventProperties","chain_id","token_symbol","token_address","getTokenAddress","sendAnalyticsEvent","InterfaceEventName","APPROVE_TOKEN_TXN_SUBMITTED","tokenAddress","spenderAddress","amount","useGetAndTrackApproval","getApproval","addTransaction","useTransactionAdder","pending","type","TransactionType","APPROVAL","useApproveCallback","approval","useHasPendingApproval","ZERO","JSBI","useMintState","useAppSelector","state","mint","ConfirmAddModalBottom","noLiquidity","price","currencies","parsedAmounts","poolTokenPercentage","onAdd","RowBetween","ThemedText","DeprecatedBody","Field","CURRENCY_A","RowFixed","CurrencyLogo","style","marginRight","toSignificant","CURRENCY_B","justifyContent","invert","ButtonPrimary","margin","onClick","Text","fontWeight","fontSize","PoolPriceBar","theme","useTheme","invertedPrice","AutoColumn","gap","AutoRow","justify","DeprecatedBlack","data-testid","color","neutral2","pt","ONE_BIPS","toFixed","DEFAULT_ADD_V2_SLIPPAGE_TOLERANCE","Percent","AddLiquidityHeaderContainer","styled","AddLiquidity","currencyIdA","currencyIdB","CONTRACT_ADDRESS","useParams","navigate","useNavigate","provider","currencyA","useCurrency","currencyB","wrappedNativeCurrency","WRAPPED_NATIVE_CURRENCY","oneCurrencyIsWETH","Boolean","equals","toggleWalletDrawer","useToggleAccountDrawer","independentField","typedValue","otherTypedValue","dependentField","pair","pairState","currencyBalances","liquidityMinted","useV2Pair","totalSupply","useTotalSupply","liquidityToken","PairState","NOT_EXISTS","EXISTS","reserve0","reserve1","balances","useCurrencyBalances","independentAmount","tryParseCurrencyAmount","dependentAmount","wrappedIndependentAmount","wrapped","tokenA","tokenB","dependentCurrency","dependentTokenAmount","priceOf","quote","CurrencyAmount","fromRawAmount","wrappedCurrencyA","currencyAAmount","currencyBAmount","greaterThan","value","divide","Price","denominator","numerator","tokenAmountA","tokenAmountB","getLiquidityMinted","add","INVALID","useDerivedMintInfo","onFieldAInput","onFieldBInput","dispatch","useAppDispatch","typeInput","field","useMintActionHandlers","isValid","showConfirm","setShowConfirm","useState","attemptingTxn","setAttemptingTxn","deadline","useTransactionDeadline","allowedSlippage","useUserSlippageToleranceWithDefault","txHash","setTxHash","formattedAmounts","maxAmounts","reduce","accumulator","maxAmountSpend","atMaxAmounts","equalTo","contract","useContract","SWAP_CONTRACT_ABI","router","useV2RouterContract","approvalA","approveACallback","approvalB","approveBCallback","networkSupportsV2","useNetworkSupportsV2","cycle","setCycle","getCycle","useGetCycle","parsedAmountA","parsedAmountB","amountsMin","calculateSlippageAmount","ZERO_PERCENT","estimate","method","args","tokenBIsETH","addLiquidityETH","toHexString","BigNumber","from","addLiquidity","estimatedGasLimit","transactionInfo","ADD_LIQUIDITY_V2_POOL","baseCurrencyId","currencyId","expectedAmountBaseRaw","quoteCurrencyId","expectedAmountQuoteRaw","hash","code","useEffect","modalHeader","LightCard","mt","$borderRadius","lineHeight","DoubleCurrencyLogo","currency0","currency1","size","RowFlat","marginTop","Row","DeprecatedItalic","textAlign","padding","modalBottom","pendingText","handleDismissConfirmation","newCurrencyIdA","newCurrencyIdB","inBootstrap","setInBootstrap","getBootstrap","useGetBootstrap","bootstrap","displayBootstrapNotification","bootstrapNotification","setBootstrapNotification","show","msg","pathname","useLocation","isCreate","includes","addIsUnsupported","useIsSwapUnsupported","AppBody","NotificationWrapper","Notification","message","handleClick","AddRemoveTabs","creating","adding","autoSlippage","Wrapper","TransactionConfirmationModal","isOpen","onDismiss","reviewContent","ConfirmationModalContent","title","topContent","bottomContent","currencyToAdd","ColumnCenter","BlueCard","DeprecatedLink","b","CurrencyInputPanel","onUserInput","onMax","toExact","showMaxButton","id","showCommonBases","Plus","DeprecatedSubHeader","disabled","DeprecatedMain","mb","eq","width","Dots","ButtonError","ButtonLight","SwitchLocaleLink","UnsupportedCurrencyFooter","minWidth","maxWidth","MinimalPositionCard","showUnwrapped","V2Unsupported","RedirectDuplicateTokenIdsV2","toLowerCase","Navigate","to","replace","AddLiquidityV2","BodyWrapper","main","$margin","$maxWidth","surface1","surface3","Z_INDEX","default","props","div","ClickableText","accent1","MaxButton","button","accent2","deprecated_mediaWidth","deprecated_upToSmall","span","LoadingRows","BaseLoadingRows","ONE","Fraction","slippage","Error","multiply","subtract","unwrappedToken","formattedChainId","asSupportedChain","nativeOnChain","_extends"],"sourceRoot":""}