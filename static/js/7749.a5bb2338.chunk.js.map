{"version":3,"file":"static/js/7749.a5bb2338.chunk.js","mappings":"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","sources":["nft/components/collection/Activity.css.ts","graphql/data/nft/NftActivity.ts","nft/components/collection/ActivityLoader.tsx","nft/components/collection/ActivityLoader.css.ts","nft/components/collection/Activity.tsx","nft/components/collection/ActivityCells.tsx","nft/utils/buildActivityAsset.ts","nft/utils/date.ts"],"sourcesContent":["import \"src/nft/css/sprinkles.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/css/sprinkles.css.ts.vanilla.css\\\",\\\"source\\\":\\\"#\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nimport \"src/nft/css/common.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/css/common.css.ts.vanilla.css\\\",\\\"source\\\":\\\"Ll8xMjdsOGhkYTo6YmVmb3JlIHsKICBjb250ZW50OiAiIjsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgaW5zZXQ6IC0xcHg7CiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCAjRkM3MkZGODAgMCUsICNGQzcyRkY4MCAxMDAuMTMlKSBib3JkZXItYm94OwogIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7CiAgLXdlYmtpdC1tYXNrOiBsaW5lYXItZ3JhZGllbnQoI2ZmZiAwIDApIHBhZGRpbmctYm94LCBsaW5lYXItZ3JhZGllbnQoI2ZmZiAwIDApOzsKICAtd2Via2l0LW1hc2stY29tcG9zaXRlOiB4b3I7OwogIG1hc2stY29tcG9zaXRlOiBleGNsdWRlOwogIGJvcmRlci1zdHlsZTogc29saWQ7CiAgYm9yZGVyLXdpZHRoOiAxcHg7CiAgYm9yZGVyLXJhZGl1czogaW5oZXJpdDsKICBwb2ludGVyLWV2ZW50czogbm9uZTsKfQouXzEyN2w4aGRiOjpiZWZvcmUgewogIG9wYWNpdHk6IDA7CiAgLXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDAuMjVzIGVhc2U7CiAgLW1vei10cmFuc2l0aW9uOiBvcGFjaXR5IDAuMjVzIGVhc2U7CiAgLW1zLXRyYW5zaXRpb246IG9wYWNpdHkgMC4yNXMgZWFzZTsKICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMjVzIGVhc2Utb3V0Owp9Ci5fMTI3bDhoZGI6aG92ZXI6OmJlZm9yZSB7CiAgb3BhY2l0eTogMTsKfQ==\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nimport \"src/nft/components/collection/Activity.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/components/collection/Activity.css.ts.vanilla.css\\\",\\\"source\\\":\\\"#H4sIAAAAAAAAA72TzW6DMBCE7zzFHpODEZCEIOfSVzF4AbfGRotJUKq8exXTKKD8NZdefJqZbz32hpjIiNIYvgOAipRkDptWC4essLpvTMchCTclQVzSLjgF4WhYeYPDwTGJhSXhlDUcjDW4CwBqVFXtOGTrdpi6eG33SN6bi+KrItsbyWEvaMFYhUZ5rKWOdT2VosB4ObFvvFErg+wCiNMZQNwqkvkIxR1FNFPgy4zqZUbN0Yhco/TKoqfOEofWKuOQzgX5W14uTtUhxWO2nAVI1U0SpvJZTwZ7R0Kv5mZf891Zbmu/0p9xDrVyOIV8Pn3LMTR/N1SPcXZgnToqU3HILUkklttpvebOR0jODwCg0Tkk1rWi8P4ojNbY7H6HlGRbVirtkDjkuqdF2g5+gI8GpRLQFYRoQBgJi0YZdlDS1RzSddQOS08NpxvzeGfOG3PdG4DTS8Y2zd5jxOHWA8K1P+MR9ndgHJ3/9b8Sk+zNHh8TJ9QfTQk0PcUEAAA=\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nexport var addressCell = 'e2d0r6e rgw6ezda rgw6ezbg rgw6eze4 rgw6ez4ba rgw6ez1ds rgw6ez47m rgw6ez2cy';\nexport var baseBuyCell = 'e2d0r6g rgw6ezda rgw6ezbg rgw6eze4 rgw6ez2e4 rgw6ez2jm rgw6ez2os rgw6ez28a rgw6ez174 rgw6ez4v4 rgw6ez89w rgw6ez82g rgw6ez8fk';\nexport var baseRow = 'e2d0r61 rgw6ez45a';\nexport var buyCell = 'e2d0r6h e2d0r6g rgw6ezda rgw6ezbg rgw6eze4 rgw6ez2e4 rgw6ez2jm rgw6ez2os rgw6ez28a rgw6ez174 rgw6ez4v4 rgw6ez89w rgw6ez82g rgw6ez8fk';\nexport var detailsImage = 'rgw6ez14g rgw6ez1bg rgw6ez828';\nexport var detailsName = 'rgw6ezd4 rgw6ezbg rgw6ezea rgw6ezfs rgw6ez8d0 rgw6ez45m rgw6ez45s';\nexport var eventDetail = 'e2d0r6a rgw6ezd4 rgw6ezbg rgw6ezea rgw6ez3t4';\nexport var eventRow = 'e2d0r63 e2d0r61 rgw6ez45a rgw6ez2d4 rgw6ez2e5 rgw6ez2im rgw6ez2jn rgw6ez2os rgw6ez28a rgw6ez4ba rgw6ez80w rgw6ez8ao rgw6ez818 rgw6ez59s rgw6ez5zg';\nexport var eventTime = 'e2d0r6c rgw6ezd4 rgw6ezba rgw6eze4 rgw6ez4bg';\nexport var filter = 'e2d0r6l rgw6ezd4 rgw6ezba rgw6ezds rgw6ez2e4 rgw6ez2jm rgw6ez2os rgw6ez28a rgw6ez4qy rgw6ez4ba rgw6ez82g rgw6ez80w';\nexport var headerRow = 'e2d0r65 e2d0r61 rgw6ez45a rgw6ez2e4 rgw6ez2jm rgw6ez27y rgw6ez4bg rgw6ezb4 rgw6ezda';\nexport var rarityInfo = 'e2d0r6n rgw6ez2d4 rgw6ez2im rgw6ez44s rgw6ez824 rgw6ez18y rgw6ez16y rgw6ez4ba rgw6ez4qy rgw6ezay rgw6ezda rgw6ez80w';\nexport var removeCell = 'e2d0r6j e2d0r6g rgw6ezda rgw6ezbg rgw6eze4 rgw6ez2e4 rgw6ez2jm rgw6ez2os rgw6ez28a rgw6ez174 rgw6ez4v4 rgw6ez89w rgw6ez82g rgw6ez8fk rgw6ez4d4 rgw6ez80w';","import { WatchQueryFetchPolicy } from '@apollo/client'\nimport gql from 'graphql-tag'\nimport { ActivityEvent } from 'nft/types'\nimport { wrapScientificNotation } from 'nft/utils'\nimport { useCallback, useMemo } from 'react'\n\nimport { NftActivityFilterInput, useNftActivityQuery } from '../__generated__/types-and-hooks'\n\ngql`\n  query NftActivity($filter: NftActivityFilterInput, $after: String, $first: Int) {\n    nftActivity(filter: $filter, after: $after, first: $first) {\n      edges {\n        node {\n          id\n          address\n          tokenId\n          asset {\n            id\n            metadataUrl\n            image {\n              id\n              url\n            }\n            smallImage {\n              id\n              url\n            }\n            name\n            rarities {\n              id\n              provider\n              rank\n              score\n            }\n            suspiciousFlag\n            nftContract {\n              id\n              standard\n            }\n            collection {\n              id\n              image {\n                id\n                url\n              }\n            }\n          }\n          type\n          marketplace\n          fromAddress\n          toAddress\n          transactionHash\n          price {\n            id\n            value\n          }\n          orderStatus\n          quantity\n          url\n          timestamp\n        }\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n        hasPreviousPage\n        startCursor\n      }\n    }\n  }\n`\n\nexport function useNftActivity(filter: NftActivityFilterInput, first?: number, fetchPolicy?: WatchQueryFetchPolicy) {\n  const { data, loading, fetchMore, error } = useNftActivityQuery({\n    variables: {\n      filter,\n      first,\n    },\n    fetchPolicy,\n  })\n\n  const hasNext = data?.nftActivity?.pageInfo?.hasNextPage\n  const loadMore = useCallback(\n    () =>\n      fetchMore({\n        variables: {\n          after: data?.nftActivity?.pageInfo?.endCursor,\n        },\n      }),\n    [data, fetchMore]\n  )\n\n  const nftActivity: ActivityEvent[] | undefined = useMemo(\n    () =>\n      data?.nftActivity?.edges?.map((queryActivity) => {\n        const activity = queryActivity?.node\n        const asset = activity?.asset\n        return {\n          collectionAddress: activity.address,\n          tokenId: activity.tokenId,\n          tokenMetadata: {\n            name: asset?.name,\n            imageUrl: asset?.image?.url,\n            smallImageUrl: asset?.smallImage?.url,\n            metadataUrl: asset?.metadataUrl,\n            rarity: {\n              primaryProvider: 'Rarity Sniper', // TODO update when backend adds more providers\n              providers: asset?.rarities?.map((rarity) => {\n                return {\n                  ...rarity,\n                  provider: 'Rarity Sniper',\n                }\n              }),\n            },\n            suspiciousFlag: asset?.suspiciousFlag,\n            standard: asset?.nftContract?.standard,\n          },\n          eventType: activity.type,\n          marketplace: activity.marketplace,\n          fromAddress: activity.fromAddress,\n          toAddress: activity.toAddress,\n          transactionHash: activity.transactionHash,\n          orderStatus: activity.orderStatus,\n          price: wrapScientificNotation(activity.price?.value ?? 0),\n          symbol: asset?.collection?.image?.url,\n          quantity: activity.quantity,\n          url: activity.url,\n          eventTimestamp: activity.timestamp * 1000,\n        }\n      }),\n    [data]\n  )\n\n  return useMemo(\n    () => ({ nftActivity, hasNext, loadMore, loading, error }),\n    [hasNext, loadMore, loading, nftActivity, error]\n  )\n}\n","import { Box } from 'nft/components/Box'\nimport { Column, Row } from 'nft/components/Flex'\n\nimport { HeaderRow } from './Activity'\nimport { eventRow } from './Activity.css'\nimport * as styles from './ActivityLoader.css'\n\nconst LoadingSquare = () => {\n  return <Box className={styles.loadingSquare} />\n}\n\nconst LoadingSliver = () => {\n  return <Box className={styles.loadingSliver} />\n}\n\nconst ActivityLoadingRow = () => {\n  return (\n    <Box as=\"a\" className={eventRow}>\n      <Row gap=\"16\">\n        <LoadingSquare />\n        <LoadingSliver />\n      </Row>\n      <Row>\n        <LoadingSliver />\n      </Row>\n      <Row display={{ sm: 'none', md: 'flex' }}>\n        <LoadingSliver />\n      </Row>\n      <Row display={{ sm: 'none', lg: 'flex' }}>\n        <LoadingSliver />\n      </Row>\n      <Row display={{ sm: 'none', xl: 'flex' }}>\n        <LoadingSliver />\n      </Row>\n    </Box>\n  )\n}\n\nexport const ActivityPageLoader = ({ rowCount }: { rowCount: number }) => {\n  return (\n    <>\n      {[...Array(rowCount)].map((_, index) => (\n        <ActivityLoadingRow key={index} />\n      ))}\n    </>\n  )\n}\n\nexport const ActivityLoader = () => {\n  return (\n    <Column marginTop=\"36\">\n      <HeaderRow />\n      <ActivityPageLoader rowCount={10} />\n    </Column>\n  )\n}\n","import \"src/nft/css/sprinkles.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/css/sprinkles.css.ts.vanilla.css\\\",\\\"source\\\":\\\"#\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nimport \"src/nft/css/loading.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/css/loading.css.ts.vanilla.css\\\",\\\"source\\\":\\\"QGtleWZyYW1lcyBfMmtkdmZ3MCB7CiAgMCUgewogICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMTAwJSA1MCU7CiAgfQogIDEwMCUgewogICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCUgNTAlOwogIH0KfQouXzJrZHZmdzEgewogIGFuaW1hdGlvbjogXzJrZHZmdzAgMS41cyBpbmZpbml0ZTsKICBhbmltYXRpb24tZmlsbC1tb2RlOiBib3RoOwogIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byBsZWZ0LCB2YXIoLS1yZ3c2ZXozKSAyNSUsIHZhcigtLXJndzZlejUpIDUwJSwgdmFyKC0tcmd3NmV6MykgNzUlKTsKICBiYWNrZ3JvdW5kLXNpemU6IDQwMCU7CiAgd2lsbC1jaGFuZ2U6IGJhY2tncm91bmQtcG9zaXRpb247Cn0KLl8ya2R2ZnczIHsKICB1c2VyLXNlbGVjdDogbm9uZTsKfQ==\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nimport \"src/nft/components/collection/ActivityLoader.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/components/collection/ActivityLoader.css.ts.vanilla.css\\\",\\\"source\\\":\\\"LmZiamFyNDMgewogIHdpZHRoOiAxMDhweDsKfQ==\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nexport var loadingSliver = 'fbjar43 _2kdvfw1 rgw6ez18y rgw6ez83g';\nexport var loadingSquare = '_2kdvfw1 rgw6ez14g rgw6ez1bg rgw6ez828';","import { OpacityHoverState } from 'components/Common'\nimport { NftActivityType } from 'graphql/data/__generated__/types-and-hooks'\nimport { useNftActivity } from 'graphql/data/nft/NftActivity'\nimport { Box } from 'nft/components/Box'\nimport { Column, Row } from 'nft/components/Flex'\nimport { useBag, useIsMobile, useNativeUsdPrice } from 'nft/hooks'\nimport { ActivityEventType } from 'nft/types'\nimport { useCallback, useReducer } from 'react'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport * as styles from './Activity.css'\nimport { AddressCell, BuyCell, EventCell, ItemCell, PriceCell } from './ActivityCells'\nimport { ActivityLoader, ActivityPageLoader } from './ActivityLoader'\n\nenum ColumnHeaders {\n  Item = 'Item',\n  Event = 'Event',\n  Price = 'Price',\n  By = 'By',\n  To = 'To',\n}\n\nconst FilterBox = styled.div<{ isActive: boolean }>`\n  display: flex;\n  color: ${({ isActive, theme }) => (isActive ? theme.neutral1 : theme.neutral1)};\n  background: ${({ isActive, theme }) => (isActive ? theme.surface3 : theme.surface1)};\n  border: ${({ isActive, theme }) => `1px solid ${isActive ? theme.surface3 : theme.surface3}`};\n  ${OpacityHoverState};\n`\n\nexport const HeaderRow = () => {\n  return (\n    <Box className={styles.headerRow}>\n      <Box>{ColumnHeaders.Item}</Box>\n      <Box>{ColumnHeaders.Event}</Box>\n      <Box display={{ sm: 'none', md: 'block' }}>{ColumnHeaders.Price}</Box>\n      <Box display={{ sm: 'none', xl: 'block' }}>{ColumnHeaders.By}</Box>\n      <Box display={{ sm: 'none', xxl: 'block' }}>{ColumnHeaders.To}</Box>\n    </Box>\n  )\n}\n\ninterface ActivityProps {\n  contractAddress: string\n  rarityVerified: boolean\n  collectionName: string\n  chainId?: number\n}\n\nconst initialFilterState = {\n  [ActivityEventType.Listing]: true,\n  [ActivityEventType.Sale]: true,\n  [ActivityEventType.Transfer]: false,\n  [ActivityEventType.CancelListing]: false,\n}\n\nexport const reduceFilters = (state: typeof initialFilterState, action: { eventType: ActivityEventType }) => {\n  return { ...state, [action.eventType]: !state[action.eventType] }\n}\n\nexport const Activity = ({ contractAddress, rarityVerified, collectionName, chainId }: ActivityProps) => {\n  const [activeFilters, filtersDispatch] = useReducer(reduceFilters, initialFilterState)\n\n  const {\n    nftActivity,\n    hasNext: hasNextActivity,\n    loadMore: loadMoreActivities,\n    loading: activitiesAreLoading,\n  } = useNftActivity(\n    {\n      activityTypes: Object.keys(activeFilters)\n        .map((key) => key as NftActivityType)\n        .filter((key) => activeFilters[key]),\n      address: contractAddress,\n    },\n    25\n  )\n\n  const isLoadingMore = hasNextActivity && nftActivity?.length\n  const itemsInBag = useBag((state) => state.itemsInBag)\n  const addAssetsToBag = useBag((state) => state.addAssetsToBag)\n  const removeAssetsFromBag = useBag((state) => state.removeAssetsFromBag)\n  const cartExpanded = useBag((state) => state.bagExpanded)\n  const toggleCart = useBag((state) => state.toggleBag)\n  const isMobile = useIsMobile()\n  const ethPriceInUSD = useNativeUsdPrice()\n\n  const Filter = useCallback(\n    function ActivityFilter({ eventType }: { eventType: ActivityEventType }) {\n      const isActive = activeFilters[eventType]\n\n      return (\n        <FilterBox className={styles.filter} isActive={isActive} onClick={() => filtersDispatch({ eventType })}>\n          {eventType.charAt(0) + eventType.slice(1).toLowerCase() + 's'}\n        </FilterBox>\n      )\n    },\n    [activeFilters]\n  )\n\n  return (\n    <Box marginLeft={{ sm: '16', md: '48' }}>\n      <Row gap=\"8\" paddingTop={{ sm: '0', md: '16' }}>\n        <Filter eventType={ActivityEventType.Listing} />\n        <Filter eventType={ActivityEventType.Sale} />\n        <Filter eventType={ActivityEventType.Transfer} />\n      </Row>\n      {activitiesAreLoading ? (\n        <ActivityLoader />\n      ) : (\n        nftActivity && (\n          <Column marginTop=\"36\">\n            <HeaderRow />\n            <InfiniteScroll\n              next={loadMoreActivities}\n              hasMore={!!hasNextActivity}\n              loader={isLoadingMore ? <ActivityPageLoader rowCount={2} /> : null}\n              dataLength={nftActivity?.length ?? 0}\n              style={{ overflow: 'unset' }}\n            >\n              {nftActivity.map(\n                (event, i) =>\n                  event.eventType && (\n                    <Box\n                      as={Link}\n                      data-testid=\"nft-activity-row\"\n                      // @ts-ignore Box component is not typed properly to typecheck\n                      // custom components' props and will incorrectly report `to` as invalid\n                      to={`/nfts/asset/${event.collectionAddress}/${event.tokenId}?origin=activity`}\n                      className={styles.eventRow}\n                      key={i}\n                    >\n                      <ItemCell\n                        event={event}\n                        rarityVerified={rarityVerified}\n                        collectionName={collectionName}\n                        eventTimestamp={event.eventTimestamp}\n                        isMobile={isMobile}\n                      />\n                      <EventCell\n                        eventType={event.eventType}\n                        eventTimestamp={event.eventTimestamp}\n                        eventTransactionHash={event.transactionHash}\n                        price={event.price}\n                        isMobile={isMobile}\n                      />\n                      <PriceCell marketplace={event.marketplace} price={event.price} />\n                      <AddressCell address={event.fromAddress} chainId={chainId} />\n                      <AddressCell address={event.toAddress} chainId={chainId} desktopLBreakpoint />\n                      <BuyCell\n                        event={event}\n                        collectionName={collectionName}\n                        selectAsset={addAssetsToBag}\n                        removeAsset={removeAssetsFromBag}\n                        itemsInBag={itemsInBag}\n                        cartExpanded={cartExpanded}\n                        toggleCart={toggleCart}\n                        isMobile={isMobile}\n                        ethPriceInUSD={ethPriceInUSD}\n                      />\n                    </Box>\n                  )\n              )}\n            </InfiniteScroll>\n          </Column>\n        )\n      )}\n    </Box>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { InterfacePageName, NFTEventName } from '@uniswap/analytics-events'\nimport { sendAnalyticsEvent, useTrace } from 'analytics'\nimport { MouseoverTooltip } from 'components/Tooltip'\nimport { SupportedChainId } from 'constants/types'\nimport { NftActivityType, NftMarketplace, OrderStatus } from 'graphql/data/__generated__/types-and-hooks'\nimport { Box } from 'nft/components/Box'\nimport { Column, Row } from 'nft/components/Flex'\nimport {\n  ActivityExternalLinkIcon,\n  ActivityListingIcon,\n  ActivitySaleIcon,\n  ActivityTransferIcon,\n  CancelListingIcon,\n  RarityVerifiedIcon,\n} from 'nft/components/icons'\nimport {\n  ActivityEvent,\n  ActivityEventTypeDisplay,\n  BagItem,\n  GenieAsset,\n  Markets,\n  Rarity,\n  TokenMetadata,\n  TokenRarity,\n} from 'nft/types'\nimport { getMarketplaceIcon } from 'nft/utils'\nimport { buildActivityAsset } from 'nft/utils/buildActivityAsset'\nimport { getTimeDifference } from 'nft/utils/date'\nimport { MouseEvent, ReactNode, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { ExternalLink } from 'theme/components'\nimport { shortenAddress } from 'utils'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\nimport { ExplorerDataType, getExplorerLink } from 'utils/getExplorerLink'\n\nimport * as styles from './Activity.css'\n\nconst AddressLink = styled(ExternalLink)`\n  color: ${({ theme }) => theme.neutral1};\n  text-decoration: none;\n  font-weight: 485;\n  line-height: 20px;\n  a {\n    color: ${({ theme }) => theme.neutral1};\n    text-decoration: none;\n  }\n  a:hover {\n    color: ${({ theme }) => theme.neutral1};\n    text-decoration: none;\n    opacity: ${({ theme }) => theme.opacity.hover};\n  }\n  a:focus {\n    color: ${({ theme }) => theme.neutral1};\n    text-decoration: none;\n    opacity: ${({ theme }) => theme.opacity.click};\n  }\n`\n\nconst isPurchasableOrder = (orderStatus?: OrderStatus, marketplace?: string): boolean => {\n  if (!marketplace || !orderStatus) return false\n  const purchasableMarkets = Object.keys(NftMarketplace).map((market) => market.toLowerCase())\n\n  const validOrder = orderStatus === OrderStatus.Valid\n  const isPurchasableMarket = purchasableMarkets.includes(marketplace.toLowerCase())\n  return validOrder && isPurchasableMarket\n}\n\nconst formatListingStatus = (status: OrderStatus, orderIsPurchasable: boolean, isSelected: boolean): ReactNode => {\n  if (orderIsPurchasable) {\n    return isSelected ? <Trans>Remove</Trans> : <Trans>Add to bag</Trans>\n  }\n\n  switch (status) {\n    case OrderStatus.Executed:\n      return <Trans>Sold</Trans>\n    case OrderStatus.Cancelled:\n      return <Trans>Cancelled</Trans>\n    case OrderStatus.Expired:\n      return <Trans>Expired</Trans>\n    case OrderStatus.Valid:\n      return <Trans>Unavailable</Trans>\n    default:\n      return null\n  }\n}\n\ninterface BuyCellProps {\n  event: ActivityEvent\n  collectionName: string\n  selectAsset: (assets: GenieAsset[]) => void\n  removeAsset: (assets: GenieAsset[]) => void\n  itemsInBag: BagItem[]\n  cartExpanded: boolean\n  toggleCart: () => void\n  isMobile: boolean\n  ethPriceInUSD: number\n}\n\nexport const BuyCell = ({\n  event,\n  collectionName,\n  selectAsset,\n  removeAsset,\n  itemsInBag,\n  cartExpanded,\n  toggleCart,\n  isMobile,\n  ethPriceInUSD,\n}: BuyCellProps) => {\n  const asset = useMemo(\n    () => buildActivityAsset(event, collectionName, ethPriceInUSD),\n    [event, collectionName, ethPriceInUSD]\n  )\n  const isSelected = useMemo(() => {\n    return itemsInBag.some((item) => asset.tokenId === item.asset.tokenId && asset.address === item.asset.address)\n  }, [asset, itemsInBag])\n\n  const orderIsPurchasable = isPurchasableOrder(event.orderStatus, event.marketplace)\n  const trace = useTrace({ page: InterfacePageName.NFT_COLLECTION_PAGE })\n  const eventProperties = {\n    collection_address: asset.address,\n    token_id: asset.tokenId,\n    token_type: asset.tokenType,\n    ...trace,\n  }\n\n  return (\n    <Column display={{ sm: 'none', lg: 'flex' }} height=\"full\" justifyContent=\"center\" marginX=\"auto\">\n      {event.eventType === NftActivityType.Listing && event.orderStatus ? (\n        <Box\n          as=\"button\"\n          className={orderIsPurchasable && isSelected ? styles.removeCell : styles.buyCell}\n          onClick={(e: MouseEvent) => {\n            e.preventDefault()\n            isSelected ? removeAsset([asset]) : selectAsset([asset])\n            !isSelected && !cartExpanded && !isMobile && toggleCart()\n            !isSelected && sendAnalyticsEvent(NFTEventName.NFT_BUY_ADDED, { eventProperties })\n          }}\n          disabled={!orderIsPurchasable}\n        >\n          {formatListingStatus(event.orderStatus, orderIsPurchasable, isSelected)}\n        </Box>\n      ) : (\n        '-'\n      )}\n    </Column>\n  )\n}\n\ninterface AddressCellProps {\n  address?: string\n  desktopLBreakpoint?: boolean\n  chainId?: number\n}\n\nexport const AddressCell = ({ address, desktopLBreakpoint, chainId }: AddressCellProps) => {\n  return (\n    <Column\n      display={{ sm: 'none', xl: desktopLBreakpoint ? 'none' : 'flex', xxl: 'flex' }}\n      className={styles.addressCell}\n    >\n      <AddressLink\n        href={getExplorerLink(chainId ?? SupportedChainId.MAINNET, address ?? '', ExplorerDataType.ADDRESS)}\n        style={{ textDecoration: 'none' }}\n      >\n        <Box onClick={(e) => e.stopPropagation()}>{address ? shortenAddress(address, 2) : '-'}</Box>\n      </AddressLink>\n    </Column>\n  )\n}\n\nconst PriceTooltip = ({ price }: { price: string }) => (\n  <MouseoverTooltip\n    text={\n      <Box textAlign=\"left\" fontSize=\"14\" fontWeight=\"book\" color=\"neutral2\">\n        {`${price} ETH`}\n      </Box>\n    }\n    placement=\"top\"\n  >\n    <Box>{`${price.substring(0, 5)}... ETH`}</Box>\n  </MouseoverTooltip>\n)\n\nexport const PriceCell = ({ marketplace, price }: { marketplace?: Markets | string; price?: string | number }) => {\n  const { formatNumberOrString } = useFormatter()\n  const formattedPrice = useMemo(\n    () => (price ? formatNumberOrString({ input: parseFloat(price?.toString()), type: NumberType.NFTToken }) : null),\n    [formatNumberOrString, price]\n  )\n\n  return (\n    <Row display={{ sm: 'none', md: 'flex' }} gap=\"8\">\n      {marketplace && getMarketplaceIcon(marketplace, '16')}\n      {formattedPrice ? (\n        formattedPrice.length > 6 ? (\n          <PriceTooltip price={formattedPrice} />\n        ) : (\n          <>{`${formattedPrice} ETH`}</>\n        )\n      ) : (\n        <>-</>\n      )}\n    </Row>\n  )\n}\n\ninterface EventCellProps {\n  eventType: NftActivityType\n  eventTimestamp?: number\n  eventTransactionHash?: string\n  eventOnly?: boolean\n  price?: string | number\n  isMobile?: boolean\n}\n\nconst renderEventIcon = (eventType: NftActivityType) => {\n  switch (eventType) {\n    case NftActivityType.Listing:\n      return <ActivityListingIcon width={16} height={16} />\n    case NftActivityType.Sale:\n      return <ActivitySaleIcon width={16} height={16} />\n    case NftActivityType.Transfer:\n      return <ActivityTransferIcon width={16} height={16} />\n    case NftActivityType.CancelListing:\n      return <CancelListingIcon width={16} height={16} />\n    default:\n      return null\n  }\n}\n\nconst openEtherscanLinkInNewTab = (e: MouseEvent, transactionHash: string) => {\n  e.preventDefault()\n  window.open(`https://etherscan.io/tx/${transactionHash}`, '_blank', 'noopener,noreferrer')\n}\n\nconst ExternalLinkIcon = ({ transactionHash }: { transactionHash: string }) => (\n  <Row onClick={(e: MouseEvent) => openEtherscanLinkInNewTab(e, transactionHash)} marginLeft=\"4\">\n    <ActivityExternalLinkIcon />\n  </Row>\n)\n\nconst eventColors = (eventType: NftActivityType) => {\n  const activityEvents = {\n    [NftActivityType.Listing]: 'deprecated_gold',\n    [NftActivityType.Sale]: 'success',\n    [NftActivityType.Transfer]: 'deprecated_violet',\n    [NftActivityType.CancelListing]: 'critical',\n  }\n\n  return activityEvents[eventType] as 'deprecated_gold' | 'success' | 'deprecated_violet' | 'critical'\n}\n\nexport const EventCell = ({\n  eventType,\n  eventTimestamp,\n  eventTransactionHash,\n  eventOnly,\n  price,\n  isMobile,\n}: EventCellProps) => {\n  const { formatNumberOrString } = useFormatter()\n  const formattedPrice = useMemo(\n    () => (price ? formatNumberOrString({ input: parseFloat(price?.toString()), type: NumberType.NFTToken }) : null),\n    [formatNumberOrString, price]\n  )\n  return (\n    <Column height=\"full\" justifyContent=\"center\" gap=\"4\">\n      <Row className={styles.eventDetail} color={eventColors(eventType)}>\n        {renderEventIcon(eventType)}\n        {ActivityEventTypeDisplay[eventType]}\n      </Row>\n      {eventTimestamp && !isMobile && !eventOnly && (\n        <Row className={styles.eventTime}>\n          {getTimeDifference(eventTimestamp.toString())}\n          {eventTransactionHash && <ExternalLinkIcon transactionHash={eventTransactionHash} />}\n        </Row>\n      )}\n      {isMobile && price && <Row fontSize=\"16\" fontWeight=\"book\" color=\"neutral1\">{`${formattedPrice} ETH`}</Row>}\n    </Column>\n  )\n}\n\ninterface ItemCellProps {\n  event: ActivityEvent\n  rarityVerified: boolean\n  collectionName: string\n  isMobile: boolean\n  eventTimestamp?: number\n}\n\nconst NoContentContainer = () => (\n  <Box\n    position=\"relative\"\n    style={{\n      background: `#24272e`,\n    }}\n    className={styles.detailsImage}\n  >\n    <Box\n      position=\"absolute\"\n      textAlign=\"center\"\n      left=\"1/2\"\n      top=\"1/2\"\n      style={{ transform: 'translate3d(-50%, -50%, 0)' }}\n      color=\"gray500\"\n      fontSize=\"12\"\n      fontWeight=\"book\"\n    >\n      Image\n      <br />\n      not\n      <br />\n      available\n    </Box>\n  </Box>\n)\n\ninterface RankingProps {\n  rarity: TokenRarity | Rarity\n  collectionName: string\n  rarityVerified: boolean\n  details?: boolean\n}\n\nconst Ranking = ({ rarity, collectionName, rarityVerified }: RankingProps) => {\n  const { formatNumber } = useFormatter()\n  const rank = (rarity as TokenRarity).rank || (rarity as Rarity).providers?.[0].rank\n\n  if (!rank) return null\n\n  return (\n    <Box>\n      <MouseoverTooltip\n        text={\n          <Row>\n            <Box display=\"flex\" marginRight=\"4\">\n              <img src=\"/nft/svgs/gem.svg\" alt=\"cardLogo\" width={16} />\n            </Box>\n            <Box width=\"full\" fontSize=\"14\">\n              {rarityVerified ? `Verified by ${collectionName}` : `Ranking by Rarity Sniper`}\n            </Box>\n          </Row>\n        }\n        placement=\"top\"\n      >\n        <Box className={styles.rarityInfo}>\n          <Box paddingTop=\"2\" paddingBottom=\"2\" display=\"flex\">\n            {formatNumber({ input: rank, type: NumberType.WholeNumber })}\n          </Box>\n\n          <Box display=\"flex\" height=\"16\">\n            {rarityVerified ? <RarityVerifiedIcon /> : null}\n          </Box>\n        </Box>\n      </MouseoverTooltip>\n    </Box>\n  )\n}\n\nconst getItemImage = (tokenMetadata?: TokenMetadata): string | undefined => {\n  return tokenMetadata?.smallImageUrl || tokenMetadata?.imageUrl\n}\n\nexport const ItemCell = ({ event, rarityVerified, collectionName, eventTimestamp, isMobile }: ItemCellProps) => {\n  const [loaded, setLoaded] = useState(false)\n  const [noContent, setNoContent] = useState(!getItemImage(event.tokenMetadata))\n\n  return (\n    <Row gap=\"16\" overflow=\"hidden\" whiteSpace=\"nowrap\">\n      {!noContent ? (\n        <Box\n          as=\"img\"\n          alt={event.tokenMetadata?.name || event.tokenId}\n          src={getItemImage(event.tokenMetadata)}\n          draggable={false}\n          className={styles.detailsImage}\n          style={{\n            background: loaded ? 'none' : '#24272e',\n          }}\n          onLoad={() => setLoaded(true)}\n          onError={() => setNoContent(true)}\n        />\n      ) : (\n        <NoContentContainer />\n      )}\n      <Column height=\"full\" justifyContent=\"center\" overflow=\"hidden\" whiteSpace=\"nowrap\" marginRight=\"24\">\n        <Box className={styles.detailsName}>{event.tokenMetadata?.name || event.tokenId}</Box>\n        {event.tokenMetadata?.rarity && !isMobile && (\n          <Ranking\n            rarity={event.tokenMetadata?.rarity}\n            rarityVerified={rarityVerified}\n            collectionName={collectionName}\n          />\n        )}\n        {isMobile && eventTimestamp && getTimeDifference(eventTimestamp.toString())}\n      </Column>\n    </Row>\n  )\n}\n","import { parseEther } from 'ethers/lib/utils'\nimport { ActivityEvent, GenieAsset } from 'nft/types'\n\nexport const buildActivityAsset = (event: ActivityEvent, collectionName: string, ethPriceInUSD: number): GenieAsset => {\n  const assetUsdPrice = event.price ? parseFloat(event.price) * ethPriceInUSD : '0'\n\n  const weiPrice = event.price ? parseEther(event.price) : ''\n\n  return {\n    address: event.collectionAddress,\n    collectionName,\n    imageUrl: event.tokenMetadata?.imageUrl,\n    marketplace: event.marketplace,\n    name: event.tokenMetadata?.name,\n    tokenId: event.tokenId,\n    susFlag: event.tokenMetadata?.suspiciousFlag,\n    smallImageUrl: event.tokenMetadata?.smallImageUrl,\n    collectionSymbol: event.symbol,\n    priceInfo: {\n      USDPrice: assetUsdPrice,\n      ETHPrice: weiPrice,\n      basePrice: weiPrice,\n      baseAsset: 'ETH',\n    },\n    tokenType: event.tokenMetadata?.standard,\n  } as GenieAsset\n}\n","export const getTimeDifference = (eventTimestamp: string) => {\n  const date = parseFloat(eventTimestamp)\n  const diff = new Date().getTime() - date\n\n  const days = Math.floor(diff / (1000 * 60 * 60 * 24))\n  const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n  const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60))\n\n  if (days > 0) return `${days} day${days > 1 ? 's' : ''} ago`\n  if (hours > 0) return `${hours} hour${hours > 1 ? 's' : ''} ago`\n  if (minutes > 1) return `${minutes} minutes ago`\n  return 'Just now'\n}\n"],"names":["addressCell","buyCell","detailsImage","detailsName","eventDetail","eventRow","eventTime","filter","headerRow","rarityInfo","removeCell","useNftActivity","first","fetchPolicy","data","loading","fetchMore","error","useNftActivityQuery","variables","hasNext","nftActivity","pageInfo","hasNextPage","loadMore","useCallback","after","endCursor","useMemo","edges","map","queryActivity","activity","node","asset","collectionAddress","address","tokenId","tokenMetadata","name","imageUrl","image","url","smallImageUrl","smallImage","metadataUrl","rarity","primaryProvider","providers","rarities","provider","suspiciousFlag","standard","nftContract","eventType","type","marketplace","fromAddress","toAddress","transactionHash","orderStatus","price","wrapScientificNotation","value","symbol","collection","quantity","eventTimestamp","timestamp","gql","LoadingSquare","Box","className","LoadingSliver","ActivityLoadingRow","as","Row","gap","display","sm","md","lg","xl","ActivityPageLoader","rowCount","Array","_","index","ActivityLoader","Column","marginTop","HeaderRow","ColumnHeaders","Item","Event","Price","By","To","FilterBox","styled","div","isActive","theme","neutral1","surface3","surface1","OpacityHoverState","styles","xxl","initialFilterState","ActivityEventType","Listing","Sale","Transfer","CancelListing","reduceFilters","state","action","Activity","contractAddress","rarityVerified","collectionName","chainId","activeFilters","filtersDispatch","useReducer","hasNextActivity","loadMoreActivities","activitiesAreLoading","activityTypes","Object","keys","key","isLoadingMore","length","itemsInBag","useBag","addAssetsToBag","removeAssetsFromBag","cartExpanded","bagExpanded","toggleCart","toggleBag","isMobile","useIsMobile","ethPriceInUSD","useNativeUsdPrice","Filter","onClick","charAt","slice","toLowerCase","marginLeft","paddingTop","InfiniteScroll","next","hasMore","loader","dataLength","style","overflow","event","i","Link","data-testid","to","ItemCell","EventCell","eventTransactionHash","PriceCell","AddressCell","desktopLBreakpoint","BuyCell","selectAsset","removeAsset","AddressLink","ExternalLink","opacity","hover","click","formatListingStatus","status","orderIsPurchasable","isSelected","OrderStatus","Executed","Cancelled","Expired","Valid","assetUsdPrice","parseFloat","weiPrice","parseEther","susFlag","collectionSymbol","priceInfo","USDPrice","ETHPrice","basePrice","baseAsset","tokenType","buildActivityAsset","some","item","purchasableMarkets","NftMarketplace","market","validOrder","isPurchasableMarket","includes","isPurchasableOrder","trace","useTrace","page","InterfacePageName","NFT_COLLECTION_PAGE","eventProperties","collection_address","token_id","token_type","height","justifyContent","marginX","NftActivityType","e","preventDefault","sendAnalyticsEvent","NFTEventName","NFT_BUY_ADDED","disabled","href","getExplorerLink","SupportedChainId","MAINNET","ExplorerDataType","ADDRESS","textDecoration","stopPropagation","shortenAddress","PriceTooltip","MouseoverTooltip","text","textAlign","fontSize","fontWeight","color","placement","substring","formatNumberOrString","useFormatter","formattedPrice","input","toString","NumberType","NFTToken","getMarketplaceIcon","renderEventIcon","ActivityListingIcon","width","ActivitySaleIcon","ActivityTransferIcon","CancelListingIcon","ExternalLinkIcon","window","open","openEtherscanLinkInNewTab","ActivityExternalLinkIcon","eventColors","eventOnly","ActivityEventTypeDisplay","getTimeDifference","NoContentContainer","position","background","left","top","transform","br","Ranking","formatNumber","rank","marginRight","img","src","alt","paddingBottom","WholeNumber","RarityVerifiedIcon","getItemImage","loaded","setLoaded","useState","noContent","setNoContent","whiteSpace","draggable","onLoad","onError","date","diff","Date","getTime","days","Math","floor","hours","minutes"],"sourceRoot":""}